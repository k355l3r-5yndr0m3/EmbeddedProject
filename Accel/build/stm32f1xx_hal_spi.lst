ARM GAS  /tmp/ccFW5O3y.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f1xx_hal_spi.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c"
  18              		.section	.text.HAL_SPI_Init,"ax",%progbits
  19              		.align	1
  20              		.global	HAL_SPI_Init
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	HAL_SPI_Init:
  26              	.LFB65:
   1:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @file    stm32f1xx_hal_spi.c
   4:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief   SPI HAL module driver.
   6:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *          functionalities of the Serial Peripheral Interface (SPI) peripheral:
   8:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           + IO operation functions
  10:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           + Peripheral State functions
  12:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   ******************************************************************************
  13:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @attention
  14:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *
  15:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * Copyright (c) 2016 STMicroelectronics.
  16:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * All rights reserved.
  17:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *
  18:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * This software is licensed under terms that can be found in the LICENSE file
  19:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * in the root directory of this software component.
  20:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  21:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *
  22:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   ******************************************************************************
  23:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   @verbatim
  24:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   ==============================================================================
  25:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                         ##### How to use this driver #####
  26:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   ==============================================================================
  27:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     [..]
  28:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       The SPI HAL driver can be used as follows:
  29:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
  30:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (#) Declare a SPI_HandleTypeDef handle structure, for example:
  31:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           SPI_HandleTypeDef  hspi;
  32:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
ARM GAS  /tmp/ccFW5O3y.s 			page 2


  33:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (#)Initialize the SPI low level resources by implementing the HAL_SPI_MspInit() API:
  34:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           (##) Enable the SPIx interface clock
  35:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           (##) SPI pins configuration
  36:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               (+++) Enable the clock for the SPI GPIOs
  37:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               (+++) Configure these SPI pins as alternate function push-pull
  38:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           (##) NVIC configuration if you need to use interrupt process
  39:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               (+++) Configure the SPIx interrupt priority
  40:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               (+++) Enable the NVIC SPI IRQ handle
  41:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           (##) DMA Configuration if you need to use DMA process
  42:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               (+++) Declare a DMA_HandleTypeDef handle structure for the transmit or receive Stream
  43:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               (+++) Enable the DMAx clock
  44:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               (+++) Configure the DMA handle parameters
  45:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               (+++) Configure the DMA Tx or Rx Stream/Channel
  46:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               (+++) Associate the initialized hdma_tx(or _rx)  handle to the hspi DMA Tx or Rx hand
  47:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               (+++) Configure the priority and enable the NVIC for the transfer complete interrupt 
  48:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                     or Rx Stream/Channel
  49:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
  50:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (#) Program the Mode, BidirectionalMode , Data size, Baudrate Prescaler, NSS
  51:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           management, Clock polarity and phase, FirstBit and CRC configuration in the hspi Init str
  52:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
  53:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (#) Initialize the SPI registers by calling the HAL_SPI_Init() API:
  54:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           (++) This API configures also the low level Hardware GPIO, CLOCK, CORTEX...etc)
  55:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               by calling the customized HAL_SPI_MspInit() API.
  56:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      [..]
  57:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        Circular mode restriction:
  58:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (#) The DMA circular mode cannot be used when the SPI is configured in these modes:
  59:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           (##) Master 2Lines RxOnly
  60:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           (##) Master 1Line Rx
  61:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (#) The CRC feature is not managed when the DMA circular mode is enabled
  62:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (#) When the SPI DMA Pause/Stop features are used, we must use the following APIs
  63:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           the HAL_SPI_DMAPause()/ HAL_SPI_DMAStop() only under the SPI callbacks
  64:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      [..]
  65:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        Master Receive mode restriction:
  66:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (#) In Master unidirectional receive-only mode (MSTR =1, BIDIMODE=0, RXONLY=1) or
  67:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           bidirectional receive mode (MSTR=1, BIDIMODE=1, BIDIOE=0), to ensure that the SPI
  68:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           does not initiate a new transfer the following procedure has to be respected:
  69:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           (##) HAL_SPI_DeInit()
  70:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           (##) HAL_SPI_Init()
  71:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      [..]
  72:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        Callback registration:
  73:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
  74:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (#) The compilation flag USE_HAL_SPI_REGISTER_CALLBACKS when set to 1U
  75:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           allows the user to configure dynamically the driver callbacks.
  76:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           Use Functions HAL_SPI_RegisterCallback() to register an interrupt callback.
  77:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
  78:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           Function HAL_SPI_RegisterCallback() allows to register following callbacks:
  79:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) TxCpltCallback        : SPI Tx Completed callback
  80:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) RxCpltCallback        : SPI Rx Completed callback
  81:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) TxRxCpltCallback      : SPI TxRx Completed callback
  82:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) TxHalfCpltCallback    : SPI Tx Half Completed callback
  83:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) RxHalfCpltCallback    : SPI Rx Half Completed callback
  84:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) TxRxHalfCpltCallback  : SPI TxRx Half Completed callback
  85:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) ErrorCallback         : SPI Error callback
  86:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) AbortCpltCallback     : SPI Abort callback
  87:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) MspInitCallback       : SPI Msp Init callback
  88:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) MspDeInitCallback     : SPI Msp DeInit callback
  89:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           This function takes as parameters the HAL peripheral handle, the Callback ID
ARM GAS  /tmp/ccFW5O3y.s 			page 3


  90:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           and a pointer to the user callback function.
  91:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
  92:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
  93:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (#) Use function HAL_SPI_UnRegisterCallback to reset a callback to the default
  94:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           weak function.
  95:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           HAL_SPI_UnRegisterCallback takes as parameters the HAL peripheral handle,
  96:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           and the Callback ID.
  97:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           This function allows to reset following callbacks:
  98:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) TxCpltCallback        : SPI Tx Completed callback
  99:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) RxCpltCallback        : SPI Rx Completed callback
 100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) TxRxCpltCallback      : SPI TxRx Completed callback
 101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) TxHalfCpltCallback    : SPI Tx Half Completed callback
 102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) RxHalfCpltCallback    : SPI Rx Half Completed callback
 103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) TxRxHalfCpltCallback  : SPI TxRx Half Completed callback
 104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) ErrorCallback         : SPI Error callback
 105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) AbortCpltCallback     : SPI Abort callback
 106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) MspInitCallback       : SPI Msp Init callback
 107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (++) MspDeInitCallback     : SPI Msp DeInit callback
 108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        [..]
 110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        By default, after the HAL_SPI_Init() and when the state is HAL_SPI_STATE_RESET
 111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        all callbacks are set to the corresponding weak functions:
 112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        examples HAL_SPI_MasterTxCpltCallback(), HAL_SPI_MasterRxCpltCallback().
 113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        Exception done for MspInit and MspDeInit functions that are
 114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        reset to the legacy weak functions in the HAL_SPI_Init()/ HAL_SPI_DeInit() only when
 115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        these callbacks are null (not registered beforehand).
 116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        If MspInit or MspDeInit are not null, the HAL_SPI_Init()/ HAL_SPI_DeInit()
 117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        keep and use the user MspInit/MspDeInit callbacks (registered beforehand) whatever the state
 118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        [..]
 120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        Callbacks can be registered/unregistered in HAL_SPI_STATE_READY state only.
 121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        Exception done MspInit/MspDeInit functions that can be registered/unregistered
 122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        in HAL_SPI_STATE_READY or HAL_SPI_STATE_RESET state,
 123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        Then, the user first registers the MspInit/MspDeInit user callbacks
 125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        using HAL_SPI_RegisterCallback() before calling HAL_SPI_DeInit()
 126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        or HAL_SPI_Init() function.
 127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        [..]
 129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        When the compilation define USE_HAL_PPP_REGISTER_CALLBACKS is set to 0 or
 130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        not defined, the callback registering feature is not available
 131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        and weak (surcharged) callbacks are used.
 132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      [..]
 134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        Using the HAL it is not possible to reach all supported SPI frequency with the different SPI
 135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        the following table resume the max SPI frequency reached with data size 8bits/16bits,
 136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****          according to frequency of the APBx Peripheral Clock (fPCLK) used by the SPI instance.
 137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   @endverbatim
 139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   Additional table :
 141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        DataSize = SPI_DATASIZE_8BIT:
 143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |                | 2Lines Fullduplex   |     2Lines RxOnly    |         1Line     
 145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        | Process | Transfer mode  |---------------------|----------------------|-------------------
 146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |                |  Master  |  Slave   |  Master   |  Slave   |  Master   |  Slave
ARM GAS  /tmp/ccFW5O3y.s 			page 4


 147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |===========================================================================================
 148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    T    |     Polling    | Fpclk/2  | Fpclk/2  |    NA     |    NA    |    NA     |   NA  
 149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    /    |     Interrupt  | Fpclk/4  | Fpclk/8  |    NA     |    NA    |    NA     |   NA  
 151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    R    |----------------|----------|----------|-----------|----------|-----------|-------
 152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    X    |       DMA      | Fpclk/2  | Fpclk/2  |    NA     |    NA    |    NA     |   NA  
 153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |     Polling    | Fpclk/2  | Fpclk/2  | Fpclk/64  | Fpclk/2  | Fpclk/64  | Fpclk/
 155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    R    |     Interrupt  | Fpclk/8  | Fpclk/8  | Fpclk/64  | Fpclk/2  | Fpclk/64  | Fpclk/
 157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |       DMA      | Fpclk/2  | Fpclk/2  | Fpclk/64  | Fpclk/2  | Fpclk/128 | Fpclk/
 159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |     Polling    | Fpclk/2  | Fpclk/4  |     NA    |    NA    | Fpclk/2   | Fpclk/
 161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    T    |     Interrupt  | Fpclk/2  | Fpclk/4  |     NA    |    NA    | Fpclk/2   | Fpclk/
 163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |       DMA      | Fpclk/2  | Fpclk/2  |     NA    |    NA    | Fpclk/2   | Fpclk/
 165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        DataSize = SPI_DATASIZE_16BIT:
 168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |                | 2Lines Fullduplex   |     2Lines RxOnly    |         1Line     
 170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        | Process | Transfer mode  |---------------------|----------------------|-------------------
 171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |                |  Master  |  Slave   |  Master   |  Slave   |  Master   |  Slave
 172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |===========================================================================================
 173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    T    |     Polling    | Fpclk/2  | Fpclk/2  |    NA     |    NA    |    NA     |   NA  
 174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    /    |     Interrupt  | Fpclk/4  | Fpclk/4  |    NA     |    NA    |    NA     |   NA  
 176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    R    |----------------|----------|----------|-----------|----------|-----------|-------
 177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    X    |       DMA      | Fpclk/2  | Fpclk/2  |    NA     |    NA    |    NA     |   NA  
 178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |     Polling    | Fpclk/2  | Fpclk/2  | Fpclk/64  | Fpclk/2  | Fpclk/32  | Fpclk/
 180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    R    |     Interrupt  | Fpclk/4  | Fpclk/4  | Fpclk/64  | Fpclk/2  | Fpclk/64  | Fpclk/
 182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |       DMA      | Fpclk/2  | Fpclk/2  | Fpclk/64  | Fpclk/2  | Fpclk/128 | Fpclk/
 184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |=========|================|==========|==========|===========|==========|===========|=======
 185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |     Polling    | Fpclk/2  | Fpclk/2  |     NA    |    NA    | Fpclk/2   | Fpclk/
 186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |----------------|----------|----------|-----------|----------|-----------|-------
 187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    T    |     Interrupt  | Fpclk/2  | Fpclk/2  |     NA    |    NA    | Fpclk/2   | Fpclk/
 188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |    X    |----------------|----------|----------|-----------|----------|-----------|-------
 189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        |         |       DMA      | Fpclk/2  | Fpclk/2  |     NA    |    NA    | Fpclk/2   | Fpclk/
 190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        +-------------------------------------------------------------------------------------------
 191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        @note The max SPI frequency depend on SPI data size (8bits, 16bits),
 192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****              SPI mode(2 Lines fullduplex, 2 lines RxOnly, 1 line TX/RX) and Process mode (Polling, 
 193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        @note
 194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (#) TX/RX processes are HAL_SPI_TransmitReceive(), HAL_SPI_TransmitReceive_IT() and
 195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                 HAL_SPI_TransmitReceive_DMA()
 196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (#) RX processes are HAL_SPI_Receive(), HAL_SPI_Receive_IT() and HAL_SPI_Receive_DMA()
 197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             (#) TX processes are HAL_SPI_Transmit(), HAL_SPI_Transmit_IT() and HAL_SPI_Transmit_DMA
 198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /* Includes ------------------------------------------------------------------*/
 202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #include "stm32f1xx_hal.h"
 203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
ARM GAS  /tmp/ccFW5O3y.s 			page 5


 204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /** @addtogroup STM32F1xx_HAL_Driver
 205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @{
 206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /** @defgroup SPI SPI
 209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief SPI HAL module driver
 210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @{
 211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #ifdef HAL_SPI_MODULE_ENABLED
 213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /* Private typedef -----------------------------------------------------------*/
 215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /* Private defines -----------------------------------------------------------*/
 216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U) && defined(SPI_CRC_ERROR_WORKAROUND_FEATURE)
 217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /* CRC WORKAROUND FEATURE: Variable used to determine if device is impacted by implementation
 218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  * of workaround related to wrong CRC errors detection on SPI2. Conditions in which this workaround
 219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  * has to be applied, are:
 220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  *  - STM32F101CDE/STM32F103CDE
 221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  *  - Revision ID : Z
 222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  *  - SPI2
 223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  *  - In receive only mode, with CRC calculation enabled, at the end of the CRC reception,
 224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  *     the software needs to check the CRCERR flag. If it is found set, read back the SPI_RXCRC:
 225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  *       + If the value is 0, the complete data transfer is successful.
 226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  *       + Otherwise, one or more errors have been detected during the data transfer by CPU or DMA.
 227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  *    If CRCERR is found reset, the complete data transfer is considered successful.
 228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  *
 229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  * Check RevisionID value for identifying if Device is Rev Z (0x0001) in order to enable workaround
 230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  * CRC errors wrongly detected
 231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  */
 232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /* Pb is that ES_STM32F10xxCDE also identify an issue in Debug registers access while not in Debug 
 233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  * Revision ID information is only available in Debug mode, so Workaround could not be implemented
 234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  * to distinguish Rev Z devices (issue present) from more recent version (issue fixed).
 235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  * So, in case of Revision Z F101 or F103 devices, below define should be assigned to 1.
 236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  */
 237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #define  USE_SPI_CRC_ERROR_WORKAROUND   0U
 238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /** @defgroup SPI_Private_Constants SPI Private Constants
 240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @{
 241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #define SPI_DEFAULT_TIMEOUT 100U
 243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @}
 245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /* Private macros ------------------------------------------------------------*/
 248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /* Private variables ---------------------------------------------------------*/
 249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /* Private function prototypes -----------------------------------------------*/
 250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /** @defgroup SPI_Private_Functions SPI Private Functions
 251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @{
 252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMATransmitReceiveCplt(DMA_HandleTypeDef *hdma);
 256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma);
 257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAHalfReceiveCplt(DMA_HandleTypeDef *hdma);
 258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAHalfTransmitReceiveCplt(DMA_HandleTypeDef *hdma);
 259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAError(DMA_HandleTypeDef *hdma);
 260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma);
ARM GAS  /tmp/ccFW5O3y.s 			page 6


 261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, Flag
 264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                                        uint32_t Timeout, uint32_t Tickstart);
 265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_TxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_TxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_RxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_RxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesRxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesTxISR_8BIT(struct __SPI_HandleTypeDef *hspi);
 271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesTxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesRxISR_16BIT(struct __SPI_HandleTypeDef *hspi);
 273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_RxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi);
 275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_RxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi);
 276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesRxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi);
 277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesRxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi);
 278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_AbortRx_ISR(SPI_HandleTypeDef *hspi);
 280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_AbortTx_ISR(SPI_HandleTypeDef *hspi);
 281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_CloseRxTx_ISR(SPI_HandleTypeDef *hspi);
 282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_CloseRx_ISR(SPI_HandleTypeDef *hspi);
 283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_CloseTx_ISR(SPI_HandleTypeDef *hspi);
 284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t T
 285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t
 286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @}
 288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /* Exported functions --------------------------------------------------------*/
 291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions SPI Exported Functions
 292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @{
 293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group1 Initialization and de-initialization functions
 296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *  @brief    Initialization and Configuration functions
 297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *
 298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** @verbatim
 299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  ===============================================================================
 300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****               ##### Initialization and de-initialization functions #####
 301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  ===============================================================================
 302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     [..]  This subsection provides a set of functions allowing to initialize and
 303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           de-initialize the SPIx peripheral:
 304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (+) User must implement HAL_SPI_MspInit() function in which he configures
 306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           all related peripherals resources (CLOCK, GPIO, DMA, IT and NVIC ).
 307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (+) Call the function HAL_SPI_Init() to configure the selected device with
 309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           the selected configuration:
 310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (++) Mode
 311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (++) Direction
 312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (++) Data Size
 313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (++) Clock Polarity and Phase
 314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (++) NSS Management
 315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (++) BaudRate Prescaler
 316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (++) FirstBit
 317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (++) TIMode
ARM GAS  /tmp/ccFW5O3y.s 			page 7


 318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (++) CRC Calculation
 319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (++) CRC Polynomial if CRC enabled
 320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (+) Call the function HAL_SPI_DeInit() to restore the default configuration
 322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           of the selected SPIx peripheral.
 323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** @endverbatim
 325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @{
 326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Initialize the SPI according to the specified parameters
 330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         in the SPI_InitTypeDef and initialize the associated handle.
 331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
 333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
 334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
 336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
  27              		.loc 1 336 1
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 82B0     		sub	sp, sp, #8
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
 337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the SPI handle allocation */
 338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi == NULL)
  43              		.loc 1 338 6
  44 0008 7B68     		ldr	r3, [r7, #4]
  45 000a 002B     		cmp	r3, #0
  46 000c 01D1     		bne	.L2
 339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_ERROR;
  47              		.loc 1 340 12
  48 000e 0123     		movs	r3, #1
  49 0010 76E0     		b	.L3
  50              	.L2:
 341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the parameters */
 344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_ALL_INSTANCE(hspi->Instance));
 345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_MODE(hspi->Init.Mode));
 346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION(hspi->Init.Direction));
 347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DATASIZE(hspi->Init.DataSize));
 348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_NSS(hspi->Init.NSS));
 349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
 350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
ARM GAS  /tmp/ccFW5O3y.s 			page 8


 351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* TI mode is not supported on this device.
 352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      TIMode parameter is mandatory equal to SPI_TIMODE_DISABLE */
 353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
 354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
  51              		.loc 1 354 17
  52 0012 7B68     		ldr	r3, [r7, #4]
  53 0014 5B6A     		ldr	r3, [r3, #36]
  54              		.loc 1 354 6
  55 0016 002B     		cmp	r3, #0
  56 0018 08D1     		bne	.L4
 355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
 357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));
 358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->Init.Mode == SPI_MODE_MASTER)
  57              		.loc 1 359 19
  58 001a 7B68     		ldr	r3, [r7, #4]
  59 001c 5B68     		ldr	r3, [r3, #4]
  60              		.loc 1 359 8
  61 001e B3F5827F 		cmp	r3, #260
  62 0022 09D0     		beq	.L5
 360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
 362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
 364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Baudrate prescaler not use in Motoraola Slave mode. force to default value */
 366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
  63              		.loc 1 366 36
  64 0024 7B68     		ldr	r3, [r7, #4]
  65 0026 0022     		movs	r2, #0
  66 0028 DA61     		str	r2, [r3, #28]
  67 002a 05E0     		b	.L5
  68              	.L4:
 367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
 370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
 372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Force polarity and phase to TI protocaol requirements */
 374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
  69              		.loc 1 374 28
  70 002c 7B68     		ldr	r3, [r7, #4]
  71 002e 0022     		movs	r2, #0
  72 0030 1A61     		str	r2, [r3, #16]
 375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
  73              		.loc 1 375 28
  74 0032 7B68     		ldr	r3, [r7, #4]
  75 0034 0022     		movs	r2, #0
  76 0036 5A61     		str	r2, [r3, #20]
  77              	.L5:
 376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_CRC_CALCULATION(hspi->Init.CRCCalculation));
 379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
ARM GAS  /tmp/ccFW5O3y.s 			page 9


 381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
 382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
 384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
  78              		.loc 1 384 29
  79 0038 7B68     		ldr	r3, [r7, #4]
  80 003a 0022     		movs	r2, #0
  81 003c 9A62     		str	r2, [r3, #40]
 385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->State == HAL_SPI_STATE_RESET)
  82              		.loc 1 387 11
  83 003e 7B68     		ldr	r3, [r7, #4]
  84 0040 93F85130 		ldrb	r3, [r3, #81]
  85 0044 DBB2     		uxtb	r3, r3
  86              		.loc 1 387 6
  87 0046 002B     		cmp	r3, #0
  88 0048 06D1     		bne	.L6
 388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Allocate lock resource and initialize it */
 390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->Lock = HAL_UNLOCKED;
  89              		.loc 1 390 16
  90 004a 7B68     		ldr	r3, [r7, #4]
  91 004c 0022     		movs	r2, #0
  92 004e 83F85020 		strb	r2, [r3, #80]
 391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
 393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Init the SPI Callback settings */
 394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxCpltCallback       = HAL_SPI_TxCpltCallback;       /* Legacy weak TxCpltCallback       
 395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxCpltCallback       = HAL_SPI_RxCpltCallback;       /* Legacy weak RxCpltCallback       
 396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxRxCpltCallback     = HAL_SPI_TxRxCpltCallback;     /* Legacy weak TxRxCpltCallback     
 397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxHalfCpltCallback   = HAL_SPI_TxHalfCpltCallback;   /* Legacy weak TxHalfCpltCallback   
 398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxHalfCpltCallback   = HAL_SPI_RxHalfCpltCallback;   /* Legacy weak RxHalfCpltCallback   
 399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxRxHalfCpltCallback = HAL_SPI_TxRxHalfCpltCallback; /* Legacy weak TxRxHalfCpltCallback 
 400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->ErrorCallback        = HAL_SPI_ErrorCallback;        /* Legacy weak ErrorCallback        
 401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->AbortCpltCallback    = HAL_SPI_AbortCpltCallback;    /* Legacy weak AbortCpltCallback    
 402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->MspInitCallback == NULL)
 404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->MspInitCallback = HAL_SPI_MspInit; /* Legacy weak MspInit  */
 406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC... */
 409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->MspInitCallback(hspi);
 410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
 411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC... */
 412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     HAL_SPI_MspInit(hspi);
  93              		.loc 1 412 5
  94 0052 7868     		ldr	r0, [r7, #4]
  95 0054 FFF7FEFF 		bl	HAL_SPI_MspInit
  96              	.L6:
 413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_BUSY;
  97              		.loc 1 416 15
  98 0058 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccFW5O3y.s 			page 10


  99 005a 0222     		movs	r2, #2
 100 005c 83F85120 		strb	r2, [r3, #81]
 417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable the selected SPI peripheral */
 419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 101              		.loc 1 419 3
 102 0060 7B68     		ldr	r3, [r7, #4]
 103 0062 1B68     		ldr	r3, [r3]
 104 0064 1A68     		ldr	r2, [r3]
 105 0066 7B68     		ldr	r3, [r7, #4]
 106 0068 1B68     		ldr	r3, [r3]
 107 006a 22F04002 		bic	r2, r2, #64
 108 006e 1A60     		str	r2, [r3]
 420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
 422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Configure : SPI Mode, Communication Mode, Data size, Clock polarity and phase, NSS management,
 423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   Communication speed, First bit and CRC calculation state */
 424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 109              		.loc 1 424 3
 110 0070 7B68     		ldr	r3, [r7, #4]
 111 0072 5B68     		ldr	r3, [r3, #4]
 112 0074 03F48272 		and	r2, r3, #260
 113 0078 7B68     		ldr	r3, [r7, #4]
 114 007a 9B68     		ldr	r3, [r3, #8]
 115 007c 03F40443 		and	r3, r3, #33792
 116 0080 1A43     		orrs	r2, r2, r3
 117 0082 7B68     		ldr	r3, [r7, #4]
 118 0084 DB68     		ldr	r3, [r3, #12]
 119 0086 03F40063 		and	r3, r3, #2048
 120 008a 1A43     		orrs	r2, r2, r3
 121 008c 7B68     		ldr	r3, [r7, #4]
 122 008e 1B69     		ldr	r3, [r3, #16]
 123 0090 03F00203 		and	r3, r3, #2
 124 0094 1A43     		orrs	r2, r2, r3
 125 0096 7B68     		ldr	r3, [r7, #4]
 126 0098 5B69     		ldr	r3, [r3, #20]
 127 009a 03F00103 		and	r3, r3, #1
 128 009e 1A43     		orrs	r2, r2, r3
 129 00a0 7B68     		ldr	r3, [r7, #4]
 130 00a2 9B69     		ldr	r3, [r3, #24]
 131 00a4 03F40073 		and	r3, r3, #512
 132 00a8 1A43     		orrs	r2, r2, r3
 133 00aa 7B68     		ldr	r3, [r7, #4]
 134 00ac DB69     		ldr	r3, [r3, #28]
 135 00ae 03F03803 		and	r3, r3, #56
 136 00b2 1A43     		orrs	r2, r2, r3
 137 00b4 7B68     		ldr	r3, [r7, #4]
 138 00b6 1B6A     		ldr	r3, [r3, #32]
 139 00b8 03F08003 		and	r3, r3, #128
 140 00bc 42EA0301 		orr	r1, r2, r3
 141 00c0 7B68     		ldr	r3, [r7, #4]
 142 00c2 9B6A     		ldr	r3, [r3, #40]
 143 00c4 03F40052 		and	r2, r3, #8192
 144 00c8 7B68     		ldr	r3, [r7, #4]
 145 00ca 1B68     		ldr	r3, [r3]
 146 00cc 0A43     		orrs	r2, r2, r1
 147 00ce 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccFW5O3y.s 			page 11


 425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                   (hspi->Init.Direction & (SPI_CR1_RXONLY | SPI_CR1_BIDIMODE)) |
 426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                   (hspi->Init.DataSize & SPI_CR1_DFF) |
 427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                   (hspi->Init.CLKPolarity & SPI_CR1_CPOL) |
 428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                   (hspi->Init.CLKPhase & SPI_CR1_CPHA) |
 429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                   (hspi->Init.NSS & SPI_CR1_SSM) |
 430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                   (hspi->Init.BaudRatePrescaler & SPI_CR1_BR_Msk) |
 431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                   (hspi->Init.FirstBit  & SPI_CR1_LSBFIRST) |
 432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                   (hspi->Init.CRCCalculation & SPI_CR1_CRCEN)));
 433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Configure : NSS management */
 435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   WRITE_REG(hspi->Instance->CR2, ((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE));
 148              		.loc 1 435 3
 149 00d0 7B68     		ldr	r3, [r7, #4]
 150 00d2 9B69     		ldr	r3, [r3, #24]
 151 00d4 1A0C     		lsrs	r2, r3, #16
 152 00d6 7B68     		ldr	r3, [r7, #4]
 153 00d8 1B68     		ldr	r3, [r3]
 154 00da 02F00402 		and	r2, r2, #4
 155 00de 5A60     		str	r2, [r3, #4]
 436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /*---------------------------- SPIx CRCPOLY Configuration ------------------*/
 439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Configure : CRC Polynomial */
 440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     WRITE_REG(hspi->Instance->CRCPR, (hspi->Init.CRCPolynomial & SPI_CRCPR_CRCPOLY_Msk));
 443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if defined(SPI_I2SCFGR_I2SMOD)
 447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
 448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 156              		.loc 1 448 3
 157 00e0 7B68     		ldr	r3, [r7, #4]
 158 00e2 1B68     		ldr	r3, [r3]
 159 00e4 DA69     		ldr	r2, [r3, #28]
 160 00e6 7B68     		ldr	r3, [r7, #4]
 161 00e8 1B68     		ldr	r3, [r3]
 162 00ea 22F40062 		bic	r2, r2, #2048
 163 00ee DA61     		str	r2, [r3, #28]
 449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* SPI_I2SCFGR_I2SMOD */
 450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 164              		.loc 1 451 19
 165 00f0 7B68     		ldr	r3, [r7, #4]
 166 00f2 0022     		movs	r2, #0
 167 00f4 5A65     		str	r2, [r3, #84]
 452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State     = HAL_SPI_STATE_READY;
 168              		.loc 1 452 19
 169 00f6 7B68     		ldr	r3, [r7, #4]
 170 00f8 0122     		movs	r2, #1
 171 00fa 83F85120 		strb	r2, [r3, #81]
 453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return HAL_OK;
 172              		.loc 1 454 10
 173 00fe 0023     		movs	r3, #0
 174              	.L3:
ARM GAS  /tmp/ccFW5O3y.s 			page 12


 455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 175              		.loc 1 455 1
 176 0100 1846     		mov	r0, r3
 177 0102 0837     		adds	r7, r7, #8
 178              	.LCFI3:
 179              		.cfi_def_cfa_offset 8
 180 0104 BD46     		mov	sp, r7
 181              	.LCFI4:
 182              		.cfi_def_cfa_register 13
 183              		@ sp needed
 184 0106 80BD     		pop	{r7, pc}
 185              		.cfi_endproc
 186              	.LFE65:
 188              		.section	.text.HAL_SPI_DeInit,"ax",%progbits
 189              		.align	1
 190              		.global	HAL_SPI_DeInit
 191              		.syntax unified
 192              		.thumb
 193              		.thumb_func
 195              	HAL_SPI_DeInit:
 196              	.LFB66:
 456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  De-Initialize the SPI peripheral.
 459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
 461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
 462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DeInit(SPI_HandleTypeDef *hspi)
 464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 197              		.loc 1 464 1
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 8
 200              		@ frame_needed = 1, uses_anonymous_args = 0
 201 0000 80B5     		push	{r7, lr}
 202              	.LCFI5:
 203              		.cfi_def_cfa_offset 8
 204              		.cfi_offset 7, -8
 205              		.cfi_offset 14, -4
 206 0002 82B0     		sub	sp, sp, #8
 207              	.LCFI6:
 208              		.cfi_def_cfa_offset 16
 209 0004 00AF     		add	r7, sp, #0
 210              	.LCFI7:
 211              		.cfi_def_cfa_register 7
 212 0006 7860     		str	r0, [r7, #4]
 465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the SPI handle allocation */
 466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi == NULL)
 213              		.loc 1 466 6
 214 0008 7B68     		ldr	r3, [r7, #4]
 215 000a 002B     		cmp	r3, #0
 216 000c 01D1     		bne	.L8
 467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_ERROR;
 217              		.loc 1 468 12
 218 000e 0123     		movs	r3, #1
 219 0010 1AE0     		b	.L9
ARM GAS  /tmp/ccFW5O3y.s 			page 13


 220              	.L8:
 469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check SPI Instance parameter */
 472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_ALL_INSTANCE(hspi->Instance));
 473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_BUSY;
 221              		.loc 1 474 15
 222 0012 7B68     		ldr	r3, [r7, #4]
 223 0014 0222     		movs	r2, #2
 224 0016 83F85120 		strb	r2, [r3, #81]
 475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable the SPI Peripheral Clock */
 477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 225              		.loc 1 477 3
 226 001a 7B68     		ldr	r3, [r7, #4]
 227 001c 1B68     		ldr	r3, [r3]
 228 001e 1A68     		ldr	r2, [r3]
 229 0020 7B68     		ldr	r3, [r7, #4]
 230 0022 1B68     		ldr	r3, [r3]
 231 0024 22F04002 		bic	r2, r2, #64
 232 0028 1A60     		str	r2, [r3]
 478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
 480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->MspDeInitCallback == NULL)
 481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->MspDeInitCallback = HAL_SPI_MspDeInit; /* Legacy weak MspDeInit  */
 483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC... */
 486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->MspDeInitCallback(hspi);
 487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
 488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC... */
 489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_MspDeInit(hspi);
 233              		.loc 1 489 3
 234 002a 7868     		ldr	r0, [r7, #4]
 235 002c FFF7FEFF 		bl	HAL_SPI_MspDeInit
 490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 236              		.loc 1 492 19
 237 0030 7B68     		ldr	r3, [r7, #4]
 238 0032 0022     		movs	r2, #0
 239 0034 5A65     		str	r2, [r3, #84]
 493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_RESET;
 240              		.loc 1 493 15
 241 0036 7B68     		ldr	r3, [r7, #4]
 242 0038 0022     		movs	r2, #0
 243 003a 83F85120 		strb	r2, [r3, #81]
 494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Release Lock */
 496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 244              		.loc 1 496 3
 245 003e 7B68     		ldr	r3, [r7, #4]
 246 0040 0022     		movs	r2, #0
 247 0042 83F85020 		strb	r2, [r3, #80]
 497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
ARM GAS  /tmp/ccFW5O3y.s 			page 14


 498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return HAL_OK;
 248              		.loc 1 498 10
 249 0046 0023     		movs	r3, #0
 250              	.L9:
 499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 251              		.loc 1 499 1
 252 0048 1846     		mov	r0, r3
 253 004a 0837     		adds	r7, r7, #8
 254              	.LCFI8:
 255              		.cfi_def_cfa_offset 8
 256 004c BD46     		mov	sp, r7
 257              	.LCFI9:
 258              		.cfi_def_cfa_register 13
 259              		@ sp needed
 260 004e 80BD     		pop	{r7, pc}
 261              		.cfi_endproc
 262              	.LFE66:
 264              		.section	.text.HAL_SPI_MspInit,"ax",%progbits
 265              		.align	1
 266              		.weak	HAL_SPI_MspInit
 267              		.syntax unified
 268              		.thumb
 269              		.thumb_func
 271              	HAL_SPI_MspInit:
 272              	.LFB67:
 500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Initialize the SPI MSP.
 503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
 505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
 506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** __weak void HAL_SPI_MspInit(SPI_HandleTypeDef *hspi)
 508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 273              		.loc 1 508 1
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 8
 276              		@ frame_needed = 1, uses_anonymous_args = 0
 277              		@ link register save eliminated.
 278 0000 80B4     		push	{r7}
 279              	.LCFI10:
 280              		.cfi_def_cfa_offset 4
 281              		.cfi_offset 7, -4
 282 0002 83B0     		sub	sp, sp, #12
 283              	.LCFI11:
 284              		.cfi_def_cfa_offset 16
 285 0004 00AF     		add	r7, sp, #0
 286              	.LCFI12:
 287              		.cfi_def_cfa_register 7
 288 0006 7860     		str	r0, [r7, #4]
 509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(hspi);
 511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             the HAL_SPI_MspInit should be implemented in the user file
 514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    */
 515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
ARM GAS  /tmp/ccFW5O3y.s 			page 15


 289              		.loc 1 515 1
 290 0008 00BF     		nop
 291 000a 0C37     		adds	r7, r7, #12
 292              	.LCFI13:
 293              		.cfi_def_cfa_offset 4
 294 000c BD46     		mov	sp, r7
 295              	.LCFI14:
 296              		.cfi_def_cfa_register 13
 297              		@ sp needed
 298 000e 80BC     		pop	{r7}
 299              	.LCFI15:
 300              		.cfi_restore 7
 301              		.cfi_def_cfa_offset 0
 302 0010 7047     		bx	lr
 303              		.cfi_endproc
 304              	.LFE67:
 306              		.section	.text.HAL_SPI_MspDeInit,"ax",%progbits
 307              		.align	1
 308              		.weak	HAL_SPI_MspDeInit
 309              		.syntax unified
 310              		.thumb
 311              		.thumb_func
 313              	HAL_SPI_MspDeInit:
 314              	.LFB68:
 516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  De-Initialize the SPI MSP.
 519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
 521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
 522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** __weak void HAL_SPI_MspDeInit(SPI_HandleTypeDef *hspi)
 524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 315              		.loc 1 524 1
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 8
 318              		@ frame_needed = 1, uses_anonymous_args = 0
 319              		@ link register save eliminated.
 320 0000 80B4     		push	{r7}
 321              	.LCFI16:
 322              		.cfi_def_cfa_offset 4
 323              		.cfi_offset 7, -4
 324 0002 83B0     		sub	sp, sp, #12
 325              	.LCFI17:
 326              		.cfi_def_cfa_offset 16
 327 0004 00AF     		add	r7, sp, #0
 328              	.LCFI18:
 329              		.cfi_def_cfa_register 7
 330 0006 7860     		str	r0, [r7, #4]
 525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
 526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(hspi);
 527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             the HAL_SPI_MspDeInit should be implemented in the user file
 530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    */
 531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 331              		.loc 1 531 1
ARM GAS  /tmp/ccFW5O3y.s 			page 16


 332 0008 00BF     		nop
 333 000a 0C37     		adds	r7, r7, #12
 334              	.LCFI19:
 335              		.cfi_def_cfa_offset 4
 336 000c BD46     		mov	sp, r7
 337              	.LCFI20:
 338              		.cfi_def_cfa_register 13
 339              		@ sp needed
 340 000e 80BC     		pop	{r7}
 341              	.LCFI21:
 342              		.cfi_restore 7
 343              		.cfi_def_cfa_offset 0
 344 0010 7047     		bx	lr
 345              		.cfi_endproc
 346              	.LFE68:
 348              		.section	.text.HAL_SPI_Transmit,"ax",%progbits
 349              		.align	1
 350              		.global	HAL_SPI_Transmit
 351              		.syntax unified
 352              		.thumb
 353              		.thumb_func
 355              	HAL_SPI_Transmit:
 356              	.LFB69:
 532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
 534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Register a User SPI Callback
 536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         To be used instead of the weak predefined callback
 537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi Pointer to a SPI_HandleTypeDef structure that contains
 538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *                the configuration information for the specified SPI.
 539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  CallbackID ID of the callback to be registered
 540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pCallback pointer to the Callback function
 541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
 542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_RegisterCallback(SPI_HandleTypeDef *hspi, HAL_SPI_CallbackIDTypeDef Callb
 544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                            pSPI_CallbackTypeDef pCallback)
 545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef status = HAL_OK;
 547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (pCallback == NULL)
 549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Update the error code */
 551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->ErrorCode |= HAL_SPI_ERROR_INVALID_CALLBACK;
 552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_ERROR;
 554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process locked */
 556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
 557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_SPI_STATE_READY == hspi->State)
 559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     switch (CallbackID)
 561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_TX_COMPLETE_CB_ID :
 563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxCpltCallback = pCallback;
 564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
ARM GAS  /tmp/ccFW5O3y.s 			page 17


 566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_RX_COMPLETE_CB_ID :
 567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->RxCpltCallback = pCallback;
 568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_TX_RX_COMPLETE_CB_ID :
 571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxRxCpltCallback = pCallback;
 572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_TX_HALF_COMPLETE_CB_ID :
 575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxHalfCpltCallback = pCallback;
 576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_RX_HALF_COMPLETE_CB_ID :
 579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->RxHalfCpltCallback = pCallback;
 580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_TX_RX_HALF_COMPLETE_CB_ID :
 583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxRxHalfCpltCallback = pCallback;
 584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_ERROR_CB_ID :
 587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->ErrorCallback = pCallback;
 588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_ABORT_CB_ID :
 591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->AbortCpltCallback = pCallback;
 592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->MspInitCallback = pCallback;
 596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->MspDeInitCallback = pCallback;
 600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       default :
 603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Update the error code */
 604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Return error status */
 607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         status =  HAL_ERROR;
 608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else if (HAL_SPI_STATE_RESET == hspi->State)
 612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     switch (CallbackID)
 614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->MspInitCallback = pCallback;
 617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->MspDeInitCallback = pCallback;
 621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
ARM GAS  /tmp/ccFW5O3y.s 			page 18


 623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       default :
 624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Update the error code */
 625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Return error status */
 628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         status =  HAL_ERROR;
 629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
 633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Update the error code */
 635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Return error status */
 638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     status =  HAL_ERROR;
 639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Release Lock */
 642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return status;
 644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Unregister an SPI Callback
 648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         SPI callback is redirected to the weak predefined callback
 649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi Pointer to a SPI_HandleTypeDef structure that contains
 650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *                the configuration information for the specified SPI.
 651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  CallbackID ID of the callback to be unregistered
 652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
 653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_UnRegisterCallback(SPI_HandleTypeDef *hspi, HAL_SPI_CallbackIDTypeDef Cal
 655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef status = HAL_OK;
 657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process locked */
 659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
 660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_SPI_STATE_READY == hspi->State)
 662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     switch (CallbackID)
 664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_TX_COMPLETE_CB_ID :
 666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxCpltCallback = HAL_SPI_TxCpltCallback;             /* Legacy weak TxCpltCallback   
 667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_RX_COMPLETE_CB_ID :
 670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->RxCpltCallback = HAL_SPI_RxCpltCallback;             /* Legacy weak RxCpltCallback   
 671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_TX_RX_COMPLETE_CB_ID :
 674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxRxCpltCallback = HAL_SPI_TxRxCpltCallback;         /* Legacy weak TxRxCpltCallback 
 675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_TX_HALF_COMPLETE_CB_ID :
 678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxHalfCpltCallback = HAL_SPI_TxHalfCpltCallback;     /* Legacy weak TxHalfCpltCallbac
 679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
ARM GAS  /tmp/ccFW5O3y.s 			page 19


 680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_RX_HALF_COMPLETE_CB_ID :
 682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->RxHalfCpltCallback = HAL_SPI_RxHalfCpltCallback;     /* Legacy weak RxHalfCpltCallbac
 683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_TX_RX_HALF_COMPLETE_CB_ID :
 686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxRxHalfCpltCallback = HAL_SPI_TxRxHalfCpltCallback; /* Legacy weak TxRxHalfCpltCallb
 687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_ERROR_CB_ID :
 690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->ErrorCallback = HAL_SPI_ErrorCallback;               /* Legacy weak ErrorCallback    
 691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_ABORT_CB_ID :
 694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->AbortCpltCallback = HAL_SPI_AbortCpltCallback;       /* Legacy weak AbortCpltCallback
 695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->MspInitCallback = HAL_SPI_MspInit;                   /* Legacy weak MspInit          
 699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->MspDeInitCallback = HAL_SPI_MspDeInit;               /* Legacy weak MspDeInit        
 703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       default :
 706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Update the error code */
 707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Return error status */
 710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         status =  HAL_ERROR;
 711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else if (HAL_SPI_STATE_RESET == hspi->State)
 715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     switch (CallbackID)
 717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_MSPINIT_CB_ID :
 719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->MspInitCallback = HAL_SPI_MspInit;                   /* Legacy weak MspInit          
 720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       case HAL_SPI_MSPDEINIT_CB_ID :
 723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->MspDeInitCallback = HAL_SPI_MspDeInit;               /* Legacy weak MspDeInit        
 724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       default :
 727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Update the error code */
 728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Return error status */
 731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         status =  HAL_ERROR;
 732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
 736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
ARM GAS  /tmp/ccFW5O3y.s 			page 20


 737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Update the error code */
 738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_INVALID_CALLBACK);
 739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Return error status */
 741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     status =  HAL_ERROR;
 742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Release Lock */
 745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return status;
 747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @}
 751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group2 IO operation functions
 754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *  @brief   Data transfers functions
 755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *
 756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** @verbatim
 757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   ==============================================================================
 758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                       ##### IO operation functions #####
 759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  ===============================================================================
 760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  [..]
 761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     This subsection provides a set of functions allowing to manage the SPI
 762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     data transfers.
 763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     [..] The SPI supports master and slave mode :
 765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     (#) There are two modes of transfer:
 767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        (++) Blocking mode: The communication is performed in polling mode.
 768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             The HAL status of all data processing is returned by the same function
 769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             after finishing transfer.
 770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        (++) No-Blocking mode: The communication is performed using Interrupts
 771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             or DMA, These APIs return the HAL status.
 772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             The end of the data processing will be indicated through the
 773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             dedicated SPI IRQ when using Interrupt mode or the DMA IRQ when
 774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             using DMA mode.
 775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             The HAL_SPI_TxCpltCallback(), HAL_SPI_RxCpltCallback() and HAL_SPI_TxRxCpltCallback() u
 776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             will be executed respectively at the end of the transmit or Receive process
 777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             The HAL_SPI_ErrorCallback()user callback will be executed when a communication error is
 778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     (#) APIs provided for these 2 transfer modes (Blocking mode or Non blocking mode using either I
 780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         exist for 1Line (simplex) and 2Lines (full duplex) modes.
 781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** @endverbatim
 783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @{
 784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Transmit an amount of data in blocking mode.
 788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
 790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pData pointer to data buffer
 791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Size amount of data to be sent
 792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Timeout Timeout duration
 793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
ARM GAS  /tmp/ccFW5O3y.s 			page 21


 794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, const uint8_t *pData, uint16_t Size, ui
 796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 357              		.loc 1 796 1
 358              		.cfi_startproc
 359              		@ args = 0, pretend = 0, frame = 32
 360              		@ frame_needed = 1, uses_anonymous_args = 0
 361 0000 80B5     		push	{r7, lr}
 362              	.LCFI22:
 363              		.cfi_def_cfa_offset 8
 364              		.cfi_offset 7, -8
 365              		.cfi_offset 14, -4
 366 0002 88B0     		sub	sp, sp, #32
 367              	.LCFI23:
 368              		.cfi_def_cfa_offset 40
 369 0004 00AF     		add	r7, sp, #0
 370              	.LCFI24:
 371              		.cfi_def_cfa_register 7
 372 0006 F860     		str	r0, [r7, #12]
 373 0008 B960     		str	r1, [r7, #8]
 374 000a 3B60     		str	r3, [r7]
 375 000c 1346     		mov	r3, r2	@ movhi
 376 000e FB80     		strh	r3, [r7, #6]	@ movhi
 797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart;
 798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint16_t initial_TxXferCount;
 799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check Direction parameter */
 801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
 802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
 804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tickstart = HAL_GetTick();
 377              		.loc 1 804 15
 378 0010 FFF7FEFF 		bl	HAL_GetTick
 379 0014 F861     		str	r0, [r7, #28]
 805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   initial_TxXferCount = Size;
 380              		.loc 1 805 23
 381 0016 FB88     		ldrh	r3, [r7, #6]	@ movhi
 382 0018 7B83     		strh	r3, [r7, #26]	@ movhi
 806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 383              		.loc 1 807 11
 384 001a FB68     		ldr	r3, [r7, #12]
 385 001c 93F85130 		ldrb	r3, [r3, #81]
 386 0020 DBB2     		uxtb	r3, r3
 387              		.loc 1 807 6
 388 0022 012B     		cmp	r3, #1
 389 0024 01D0     		beq	.L13
 808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_BUSY;
 390              		.loc 1 809 12
 391 0026 0223     		movs	r3, #2
 392 0028 2AE1     		b	.L14
 393              	.L13:
 810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
 394              		.loc 1 812 6
ARM GAS  /tmp/ccFW5O3y.s 			page 22


 395 002a BB68     		ldr	r3, [r7, #8]
 396 002c 002B     		cmp	r3, #0
 397 002e 02D0     		beq	.L15
 398              		.loc 1 812 23 discriminator 1
 399 0030 FB88     		ldrh	r3, [r7, #6]
 400 0032 002B     		cmp	r3, #0
 401 0034 01D1     		bne	.L16
 402              	.L15:
 813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_ERROR;
 403              		.loc 1 814 12
 404 0036 0123     		movs	r3, #1
 405 0038 22E1     		b	.L14
 406              	.L16:
 815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Locked */
 818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
 407              		.loc 1 818 3
 408 003a FB68     		ldr	r3, [r7, #12]
 409 003c 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 410 0040 012B     		cmp	r3, #1
 411 0042 01D1     		bne	.L17
 412              		.loc 1 818 3 is_stmt 0 discriminator 1
 413 0044 0223     		movs	r3, #2
 414              		.loc 1 818 3
 415 0046 1BE1     		b	.L14
 416              	.L17:
 417              		.loc 1 818 3 discriminator 2
 418 0048 FB68     		ldr	r3, [r7, #12]
 419 004a 0122     		movs	r2, #1
 420 004c 83F85020 		strb	r2, [r3, #80]
 819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the transaction information */
 821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
 421              		.loc 1 821 21 is_stmt 1
 422 0050 FB68     		ldr	r3, [r7, #12]
 423 0052 0322     		movs	r2, #3
 424 0054 83F85120 		strb	r2, [r3, #81]
 822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 425              		.loc 1 822 21
 426 0058 FB68     		ldr	r3, [r7, #12]
 427 005a 0022     		movs	r2, #0
 428 005c 5A65     		str	r2, [r3, #84]
 823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (const uint8_t *)pData;
 429              		.loc 1 823 21
 430 005e FB68     		ldr	r3, [r7, #12]
 431 0060 BA68     		ldr	r2, [r7, #8]
 432 0062 1A63     		str	r2, [r3, #48]
 824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 433              		.loc 1 824 21
 434 0064 FB68     		ldr	r3, [r7, #12]
 435 0066 FA88     		ldrh	r2, [r7, #6]	@ movhi
 436 0068 9A86     		strh	r2, [r3, #52]	@ movhi
 825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 437              		.loc 1 825 21
 438 006a FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccFW5O3y.s 			page 23


 439 006c FA88     		ldrh	r2, [r7, #6]	@ movhi
 440 006e DA86     		strh	r2, [r3, #54]	@ movhi
 826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /*Init field not used in handle to zero */
 828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)NULL;
 441              		.loc 1 828 21
 442 0070 FB68     		ldr	r3, [r7, #12]
 443 0072 0022     		movs	r2, #0
 444 0074 9A63     		str	r2, [r3, #56]
 829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 445              		.loc 1 829 21
 446 0076 FB68     		ldr	r3, [r7, #12]
 447 0078 0022     		movs	r2, #0
 448 007a 9A87     		strh	r2, [r3, #60]	@ movhi
 830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 449              		.loc 1 830 21
 450 007c FB68     		ldr	r3, [r7, #12]
 451 007e 0022     		movs	r2, #0
 452 0080 DA87     		strh	r2, [r3, #62]	@ movhi
 831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 453              		.loc 1 831 21
 454 0082 FB68     		ldr	r3, [r7, #12]
 455 0084 0022     		movs	r2, #0
 456 0086 5A64     		str	r2, [r3, #68]
 832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxISR       = NULL;
 457              		.loc 1 832 21
 458 0088 FB68     		ldr	r3, [r7, #12]
 459 008a 0022     		movs	r2, #0
 460 008c 1A64     		str	r2, [r3, #64]
 833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Configure communication direction : 1Line */
 835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 461              		.loc 1 835 17
 462 008e FB68     		ldr	r3, [r7, #12]
 463 0090 9B68     		ldr	r3, [r3, #8]
 464              		.loc 1 835 6
 465 0092 B3F5004F 		cmp	r3, #32768
 466 0096 0FD1     		bne	.L18
 836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
 838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE(hspi);
 467              		.loc 1 838 5
 468 0098 FB68     		ldr	r3, [r7, #12]
 469 009a 1B68     		ldr	r3, [r3]
 470 009c 1A68     		ldr	r2, [r3]
 471 009e FB68     		ldr	r3, [r7, #12]
 472 00a0 1B68     		ldr	r3, [r3]
 473 00a2 22F04002 		bic	r2, r2, #64
 474 00a6 1A60     		str	r2, [r3]
 839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
 475              		.loc 1 839 5
 476 00a8 FB68     		ldr	r3, [r7, #12]
 477 00aa 1B68     		ldr	r3, [r3]
 478 00ac 1A68     		ldr	r2, [r3]
 479 00ae FB68     		ldr	r3, [r7, #12]
 480 00b0 1B68     		ldr	r3, [r3]
 481 00b2 42F48042 		orr	r2, r2, #16384
ARM GAS  /tmp/ccFW5O3y.s 			page 24


 482 00b6 1A60     		str	r2, [r3]
 483              	.L18:
 840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset CRC Calculation */
 844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
 847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
 851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 484              		.loc 1 851 12
 485 00b8 FB68     		ldr	r3, [r7, #12]
 486 00ba 1B68     		ldr	r3, [r3]
 487              		.loc 1 851 22
 488 00bc 1B68     		ldr	r3, [r3]
 489              		.loc 1 851 28
 490 00be 03F04003 		and	r3, r3, #64
 491              		.loc 1 851 6
 492 00c2 402B     		cmp	r3, #64
 493 00c4 07D0     		beq	.L19
 852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Enable SPI peripheral */
 854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 494              		.loc 1 854 5
 495 00c6 FB68     		ldr	r3, [r7, #12]
 496 00c8 1B68     		ldr	r3, [r3]
 497 00ca 1A68     		ldr	r2, [r3]
 498 00cc FB68     		ldr	r3, [r7, #12]
 499 00ce 1B68     		ldr	r3, [r3]
 500 00d0 42F04002 		orr	r2, r2, #64
 501 00d4 1A60     		str	r2, [r3]
 502              	.L19:
 855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
 858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 503              		.loc 1 858 17
 504 00d6 FB68     		ldr	r3, [r7, #12]
 505 00d8 DB68     		ldr	r3, [r3, #12]
 506              		.loc 1 858 6
 507 00da B3F5006F 		cmp	r3, #2048
 508 00de 52D1     		bne	.L20
 859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 509              		.loc 1 860 20
 510 00e0 FB68     		ldr	r3, [r7, #12]
 511 00e2 5B68     		ldr	r3, [r3, #4]
 512              		.loc 1 860 8
 513 00e4 002B     		cmp	r3, #0
 514 00e6 02D0     		beq	.L21
 515              		.loc 1 860 45 discriminator 1
 516 00e8 7B8B     		ldrh	r3, [r7, #26]
 517 00ea 012B     		cmp	r3, #1
ARM GAS  /tmp/ccFW5O3y.s 			page 25


 518 00ec 45D1     		bne	.L23
 519              	.L21:
 861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 520              		.loc 1 862 52
 521 00ee FB68     		ldr	r3, [r7, #12]
 522 00f0 1B6B     		ldr	r3, [r3, #48]
 523              		.loc 1 862 28
 524 00f2 1A88     		ldrh	r2, [r3]
 525              		.loc 1 862 11
 526 00f4 FB68     		ldr	r3, [r7, #12]
 527 00f6 1B68     		ldr	r3, [r3]
 528              		.loc 1 862 26
 529 00f8 DA60     		str	r2, [r3, #12]
 863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint16_t);
 530              		.loc 1 863 11
 531 00fa FB68     		ldr	r3, [r7, #12]
 532 00fc 1B6B     		ldr	r3, [r3, #48]
 533              		.loc 1 863 24
 534 00fe 9A1C     		adds	r2, r3, #2
 535 0100 FB68     		ldr	r3, [r7, #12]
 536 0102 1A63     		str	r2, [r3, #48]
 864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->TxXferCount--;
 537              		.loc 1 864 11
 538 0104 FB68     		ldr	r3, [r7, #12]
 539 0106 DB8E     		ldrh	r3, [r3, #54]	@ movhi
 540 0108 9BB2     		uxth	r3, r3
 541              		.loc 1 864 24
 542 010a 013B     		subs	r3, r3, #1
 543 010c 9AB2     		uxth	r2, r3
 544 010e FB68     		ldr	r3, [r7, #12]
 545 0110 DA86     		strh	r2, [r3, #54]	@ movhi
 865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Transmit data in 16 Bit mode */
 867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     while (hspi->TxXferCount > 0U)
 546              		.loc 1 867 11
 547 0112 32E0     		b	.L23
 548              	.L28:
 868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Wait until TXE flag is set to send data */
 870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 549              		.loc 1 870 11
 550 0114 FB68     		ldr	r3, [r7, #12]
 551 0116 1B68     		ldr	r3, [r3]
 552 0118 9B68     		ldr	r3, [r3, #8]
 553 011a 03F00203 		and	r3, r3, #2
 554              		.loc 1 870 10
 555 011e 022B     		cmp	r3, #2
 556 0120 12D1     		bne	.L24
 871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 557              		.loc 1 872 54
 558 0122 FB68     		ldr	r3, [r7, #12]
 559 0124 1B6B     		ldr	r3, [r3, #48]
 560              		.loc 1 872 30
 561 0126 1A88     		ldrh	r2, [r3]
 562              		.loc 1 872 13
ARM GAS  /tmp/ccFW5O3y.s 			page 26


 563 0128 FB68     		ldr	r3, [r7, #12]
 564 012a 1B68     		ldr	r3, [r3]
 565              		.loc 1 872 28
 566 012c DA60     		str	r2, [r3, #12]
 873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 567              		.loc 1 873 13
 568 012e FB68     		ldr	r3, [r7, #12]
 569 0130 1B6B     		ldr	r3, [r3, #48]
 570              		.loc 1 873 26
 571 0132 9A1C     		adds	r2, r3, #2
 572 0134 FB68     		ldr	r3, [r7, #12]
 573 0136 1A63     		str	r2, [r3, #48]
 874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxXferCount--;
 574              		.loc 1 874 13
 575 0138 FB68     		ldr	r3, [r7, #12]
 576 013a DB8E     		ldrh	r3, [r3, #54]	@ movhi
 577 013c 9BB2     		uxth	r3, r3
 578              		.loc 1 874 26
 579 013e 013B     		subs	r3, r3, #1
 580 0140 9AB2     		uxth	r2, r3
 581 0142 FB68     		ldr	r3, [r7, #12]
 582 0144 DA86     		strh	r2, [r3, #54]	@ movhi
 583 0146 18E0     		b	.L23
 584              	.L24:
 875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
 877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Timeout management */
 879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
 585              		.loc 1 879 16
 586 0148 FFF7FEFF 		bl	HAL_GetTick
 587 014c 0246     		mov	r2, r0
 588              		.loc 1 879 30 discriminator 1
 589 014e FB69     		ldr	r3, [r7, #28]
 590 0150 D31A     		subs	r3, r2, r3
 591              		.loc 1 879 12 discriminator 1
 592 0152 3A68     		ldr	r2, [r7]
 593 0154 9A42     		cmp	r2, r3
 594 0156 03D8     		bhi	.L26
 595              		.loc 1 879 56 discriminator 1
 596 0158 3B68     		ldr	r3, [r7]
 597 015a B3F1FF3F 		cmp	r3, #-1
 598 015e 02D1     		bne	.L27
 599              	.L26:
 600              		.loc 1 879 87 discriminator 3
 601 0160 3B68     		ldr	r3, [r7]
 602 0162 002B     		cmp	r3, #0
 603 0164 09D1     		bne	.L23
 604              	.L27:
 880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           hspi->State = HAL_SPI_STATE_READY;
 605              		.loc 1 881 23
 606 0166 FB68     		ldr	r3, [r7, #12]
 607 0168 0122     		movs	r2, #1
 608 016a 83F85120 		strb	r2, [r3, #81]
 882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           __HAL_UNLOCK(hspi);
 609              		.loc 1 882 11
ARM GAS  /tmp/ccFW5O3y.s 			page 27


 610 016e FB68     		ldr	r3, [r7, #12]
 611 0170 0022     		movs	r2, #0
 612 0172 83F85020 		strb	r2, [r3, #80]
 883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           return HAL_TIMEOUT;
 613              		.loc 1 883 18
 614 0176 0323     		movs	r3, #3
 615 0178 82E0     		b	.L14
 616              	.L23:
 867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 617              		.loc 1 867 16
 618 017a FB68     		ldr	r3, [r7, #12]
 619 017c DB8E     		ldrh	r3, [r3, #54]	@ movhi
 620 017e 9BB2     		uxth	r3, r3
 867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 621              		.loc 1 867 30
 622 0180 002B     		cmp	r3, #0
 623 0182 C7D1     		bne	.L28
 624 0184 53E0     		b	.L29
 625              	.L20:
 884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
 885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Transmit data in 8 Bit mode */
 889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
 890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 626              		.loc 1 891 20
 627 0186 FB68     		ldr	r3, [r7, #12]
 628 0188 5B68     		ldr	r3, [r3, #4]
 629              		.loc 1 891 8
 630 018a 002B     		cmp	r3, #0
 631 018c 02D0     		beq	.L30
 632              		.loc 1 891 45 discriminator 1
 633 018e 7B8B     		ldrh	r3, [r7, #26]
 634 0190 012B     		cmp	r3, #1
 635 0192 47D1     		bne	.L32
 636              	.L30:
 892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 637              		.loc 1 893 71
 638 0194 FB68     		ldr	r3, [r7, #12]
 639 0196 1A6B     		ldr	r2, [r3, #48]
 640              		.loc 1 893 30
 641 0198 FB68     		ldr	r3, [r7, #12]
 642 019a 1B68     		ldr	r3, [r3]
 643              		.loc 1 893 25
 644 019c 0C33     		adds	r3, r3, #12
 645              		.loc 1 893 48
 646 019e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 647              		.loc 1 893 46
 648 01a0 1A70     		strb	r2, [r3]
 894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint8_t);
 649              		.loc 1 894 11
 650 01a2 FB68     		ldr	r3, [r7, #12]
 651 01a4 1B6B     		ldr	r3, [r3, #48]
 652              		.loc 1 894 24
ARM GAS  /tmp/ccFW5O3y.s 			page 28


 653 01a6 5A1C     		adds	r2, r3, #1
 654 01a8 FB68     		ldr	r3, [r7, #12]
 655 01aa 1A63     		str	r2, [r3, #48]
 895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->TxXferCount--;
 656              		.loc 1 895 11
 657 01ac FB68     		ldr	r3, [r7, #12]
 658 01ae DB8E     		ldrh	r3, [r3, #54]	@ movhi
 659 01b0 9BB2     		uxth	r3, r3
 660              		.loc 1 895 24
 661 01b2 013B     		subs	r3, r3, #1
 662 01b4 9AB2     		uxth	r2, r3
 663 01b6 FB68     		ldr	r3, [r7, #12]
 664 01b8 DA86     		strh	r2, [r3, #54]	@ movhi
 896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     while (hspi->TxXferCount > 0U)
 665              		.loc 1 897 11
 666 01ba 33E0     		b	.L32
 667              	.L37:
 898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Wait until TXE flag is set to send data */
 900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 668              		.loc 1 900 11
 669 01bc FB68     		ldr	r3, [r7, #12]
 670 01be 1B68     		ldr	r3, [r3]
 671 01c0 9B68     		ldr	r3, [r3, #8]
 672 01c2 03F00203 		and	r3, r3, #2
 673              		.loc 1 900 10
 674 01c6 022B     		cmp	r3, #2
 675 01c8 13D1     		bne	.L33
 901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 676              		.loc 1 902 73
 677 01ca FB68     		ldr	r3, [r7, #12]
 678 01cc 1A6B     		ldr	r2, [r3, #48]
 679              		.loc 1 902 32
 680 01ce FB68     		ldr	r3, [r7, #12]
 681 01d0 1B68     		ldr	r3, [r3]
 682              		.loc 1 902 27
 683 01d2 0C33     		adds	r3, r3, #12
 684              		.loc 1 902 50
 685 01d4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 686              		.loc 1 902 48
 687 01d6 1A70     		strb	r2, [r3]
 903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint8_t);
 688              		.loc 1 903 13
 689 01d8 FB68     		ldr	r3, [r7, #12]
 690 01da 1B6B     		ldr	r3, [r3, #48]
 691              		.loc 1 903 26
 692 01dc 5A1C     		adds	r2, r3, #1
 693 01de FB68     		ldr	r3, [r7, #12]
 694 01e0 1A63     		str	r2, [r3, #48]
 904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxXferCount--;
 695              		.loc 1 904 13
 696 01e2 FB68     		ldr	r3, [r7, #12]
 697 01e4 DB8E     		ldrh	r3, [r3, #54]	@ movhi
 698 01e6 9BB2     		uxth	r3, r3
 699              		.loc 1 904 26
ARM GAS  /tmp/ccFW5O3y.s 			page 29


 700 01e8 013B     		subs	r3, r3, #1
 701 01ea 9AB2     		uxth	r2, r3
 702 01ec FB68     		ldr	r3, [r7, #12]
 703 01ee DA86     		strh	r2, [r3, #54]	@ movhi
 704 01f0 18E0     		b	.L32
 705              	.L33:
 905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
 907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
 908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Timeout management */
 909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
 706              		.loc 1 909 16
 707 01f2 FFF7FEFF 		bl	HAL_GetTick
 708 01f6 0246     		mov	r2, r0
 709              		.loc 1 909 30 discriminator 1
 710 01f8 FB69     		ldr	r3, [r7, #28]
 711 01fa D31A     		subs	r3, r2, r3
 712              		.loc 1 909 12 discriminator 1
 713 01fc 3A68     		ldr	r2, [r7]
 714 01fe 9A42     		cmp	r2, r3
 715 0200 03D8     		bhi	.L35
 716              		.loc 1 909 56 discriminator 1
 717 0202 3B68     		ldr	r3, [r7]
 718 0204 B3F1FF3F 		cmp	r3, #-1
 719 0208 02D1     		bne	.L36
 720              	.L35:
 721              		.loc 1 909 87 discriminator 3
 722 020a 3B68     		ldr	r3, [r7]
 723 020c 002B     		cmp	r3, #0
 724 020e 09D1     		bne	.L32
 725              	.L36:
 910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           hspi->State = HAL_SPI_STATE_READY;
 726              		.loc 1 911 23
 727 0210 FB68     		ldr	r3, [r7, #12]
 728 0212 0122     		movs	r2, #1
 729 0214 83F85120 		strb	r2, [r3, #81]
 912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           __HAL_UNLOCK(hspi);
 730              		.loc 1 912 11
 731 0218 FB68     		ldr	r3, [r7, #12]
 732 021a 0022     		movs	r2, #0
 733 021c 83F85020 		strb	r2, [r3, #80]
 913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           return HAL_TIMEOUT;
 734              		.loc 1 913 18
 735 0220 0323     		movs	r3, #3
 736 0222 2DE0     		b	.L14
 737              	.L32:
 897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 738              		.loc 1 897 16
 739 0224 FB68     		ldr	r3, [r7, #12]
 740 0226 DB8E     		ldrh	r3, [r3, #54]	@ movhi
 741 0228 9BB2     		uxth	r3, r3
 897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 742              		.loc 1 897 30
 743 022a 002B     		cmp	r3, #0
 744 022c C6D1     		bne	.L37
 745              	.L29:
ARM GAS  /tmp/ccFW5O3y.s 			page 30


 914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
 915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
 916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable CRC Transmission */
 920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
 923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the end of the transaction */
 927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 746              		.loc 1 927 7
 747 022e FA69     		ldr	r2, [r7, #28]
 748 0230 3968     		ldr	r1, [r7]
 749 0232 F868     		ldr	r0, [r7, #12]
 750 0234 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 751 0238 0346     		mov	r3, r0
 752              		.loc 1 927 6 discriminator 1
 753 023a 002B     		cmp	r3, #0
 754 023c 02D0     		beq	.L38
 928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 755              		.loc 1 929 21
 756 023e FB68     		ldr	r3, [r7, #12]
 757 0240 2022     		movs	r2, #32
 758 0242 5A65     		str	r2, [r3, #84]
 759              	.L38:
 930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
 933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 760              		.loc 1 933 17
 761 0244 FB68     		ldr	r3, [r7, #12]
 762 0246 9B68     		ldr	r3, [r3, #8]
 763              		.loc 1 933 6
 764 0248 002B     		cmp	r3, #0
 765 024a 0AD1     		bne	.L39
 766              	.LBB2:
 934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
 767              		.loc 1 935 5
 768 024c 0023     		movs	r3, #0
 769 024e 7B61     		str	r3, [r7, #20]
 770 0250 FB68     		ldr	r3, [r7, #12]
 771 0252 1B68     		ldr	r3, [r3]
 772 0254 DB68     		ldr	r3, [r3, #12]
 773 0256 7B61     		str	r3, [r7, #20]
 774 0258 FB68     		ldr	r3, [r7, #12]
 775 025a 1B68     		ldr	r3, [r3]
 776 025c 9B68     		ldr	r3, [r3, #8]
 777 025e 7B61     		str	r3, [r7, #20]
 778 0260 7B69     		ldr	r3, [r7, #20]
 779              	.L39:
 780              	.LBE2:
ARM GAS  /tmp/ccFW5O3y.s 			page 31


 936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 781              		.loc 1 938 15
 782 0262 FB68     		ldr	r3, [r7, #12]
 783 0264 0122     		movs	r2, #1
 784 0266 83F85120 		strb	r2, [r3, #81]
 939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Unlocked */
 940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 785              		.loc 1 940 3
 786 026a FB68     		ldr	r3, [r7, #12]
 787 026c 0022     		movs	r2, #0
 788 026e 83F85020 		strb	r2, [r3, #80]
 941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 789              		.loc 1 942 11
 790 0272 FB68     		ldr	r3, [r7, #12]
 791 0274 5B6D     		ldr	r3, [r3, #84]
 792              		.loc 1 942 6
 793 0276 002B     		cmp	r3, #0
 794 0278 01D0     		beq	.L40
 943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_ERROR;
 795              		.loc 1 944 12
 796 027a 0123     		movs	r3, #1
 797 027c 00E0     		b	.L14
 798              	.L40:
 945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
 947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_OK;
 799              		.loc 1 948 12
 800 027e 0023     		movs	r3, #0
 801              	.L14:
 949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 802              		.loc 1 950 1
 803 0280 1846     		mov	r0, r3
 804 0282 2037     		adds	r7, r7, #32
 805              	.LCFI25:
 806              		.cfi_def_cfa_offset 8
 807 0284 BD46     		mov	sp, r7
 808              	.LCFI26:
 809              		.cfi_def_cfa_register 13
 810              		@ sp needed
 811 0286 80BD     		pop	{r7, pc}
 812              		.cfi_endproc
 813              	.LFE69:
 815              		.section	.text.HAL_SPI_Receive,"ax",%progbits
 816              		.align	1
 817              		.global	HAL_SPI_Receive
 818              		.syntax unified
 819              		.thumb
 820              		.thumb_func
 822              	HAL_SPI_Receive:
 823              	.LFB70:
 951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
ARM GAS  /tmp/ccFW5O3y.s 			page 32


 952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
 953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Receive an amount of data in blocking mode.
 954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
 955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
 956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pData pointer to data buffer
 957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Size amount of data to be received
 958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Timeout Timeout duration
 959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
 960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
 961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t 
 962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 824              		.loc 1 962 1
 825              		.cfi_startproc
 826              		@ args = 0, pretend = 0, frame = 24
 827              		@ frame_needed = 1, uses_anonymous_args = 0
 828 0000 80B5     		push	{r7, lr}
 829              	.LCFI27:
 830              		.cfi_def_cfa_offset 8
 831              		.cfi_offset 7, -8
 832              		.cfi_offset 14, -4
 833 0002 88B0     		sub	sp, sp, #32
 834              	.LCFI28:
 835              		.cfi_def_cfa_offset 40
 836 0004 02AF     		add	r7, sp, #8
 837              	.LCFI29:
 838              		.cfi_def_cfa 7, 32
 839 0006 F860     		str	r0, [r7, #12]
 840 0008 B960     		str	r1, [r7, #8]
 841 000a 3B60     		str	r3, [r7]
 842 000c 1346     		mov	r3, r2	@ movhi
 843 000e FB80     		strh	r3, [r7, #6]	@ movhi
 963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
 964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t tmpreg = 0U;
 965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
 966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart;
 967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 844              		.loc 1 968 11
 845 0010 FB68     		ldr	r3, [r7, #12]
 846 0012 93F85130 		ldrb	r3, [r3, #81]
 847 0016 DBB2     		uxtb	r3, r3
 848              		.loc 1 968 6
 849 0018 012B     		cmp	r3, #1
 850 001a 01D0     		beq	.L42
 969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_BUSY;
 851              		.loc 1 970 12
 852 001c 0223     		movs	r3, #2
 853 001e 04E1     		b	.L43
 854              	.L42:
 971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 855              		.loc 1 973 18
 856 0020 FB68     		ldr	r3, [r7, #12]
 857 0022 5B68     		ldr	r3, [r3, #4]
 858              		.loc 1 973 6
ARM GAS  /tmp/ccFW5O3y.s 			page 33


 859 0024 B3F5827F 		cmp	r3, #260
 860 0028 12D1     		bne	.L44
 861              		.loc 1 973 58 discriminator 1
 862 002a FB68     		ldr	r3, [r7, #12]
 863 002c 9B68     		ldr	r3, [r3, #8]
 864              		.loc 1 973 44 discriminator 1
 865 002e 002B     		cmp	r3, #0
 866 0030 0ED1     		bne	.L44
 974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
 867              		.loc 1 975 17
 868 0032 FB68     		ldr	r3, [r7, #12]
 869 0034 0422     		movs	r2, #4
 870 0036 83F85120 		strb	r2, [r3, #81]
 976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
 977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 871              		.loc 1 977 12
 872 003a FA88     		ldrh	r2, [r7, #6]
 873 003c 3B68     		ldr	r3, [r7]
 874 003e 0093     		str	r3, [sp]
 875 0040 1346     		mov	r3, r2
 876 0042 BA68     		ldr	r2, [r7, #8]
 877 0044 B968     		ldr	r1, [r7, #8]
 878 0046 F868     		ldr	r0, [r7, #12]
 879 0048 FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 880 004c 0346     		mov	r3, r0
 881 004e ECE0     		b	.L43
 882              	.L44:
 978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
 981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tickstart = HAL_GetTick();
 883              		.loc 1 981 15
 884 0050 FFF7FEFF 		bl	HAL_GetTick
 885 0054 7861     		str	r0, [r7, #20]
 982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
 886              		.loc 1 983 6
 887 0056 BB68     		ldr	r3, [r7, #8]
 888 0058 002B     		cmp	r3, #0
 889 005a 02D0     		beq	.L45
 890              		.loc 1 983 23 discriminator 1
 891 005c FB88     		ldrh	r3, [r7, #6]
 892 005e 002B     		cmp	r3, #0
 893 0060 01D1     		bne	.L46
 894              	.L45:
 984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_ERROR;
 895              		.loc 1 985 12
 896 0062 0123     		movs	r3, #1
 897 0064 E1E0     		b	.L43
 898              	.L46:
 986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
 987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Locked */
 989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
 899              		.loc 1 989 3
ARM GAS  /tmp/ccFW5O3y.s 			page 34


 900 0066 FB68     		ldr	r3, [r7, #12]
 901 0068 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 902 006c 012B     		cmp	r3, #1
 903 006e 01D1     		bne	.L47
 904              		.loc 1 989 3 is_stmt 0 discriminator 1
 905 0070 0223     		movs	r3, #2
 906              		.loc 1 989 3
 907 0072 DAE0     		b	.L43
 908              	.L47:
 909              		.loc 1 989 3 discriminator 2
 910 0074 FB68     		ldr	r3, [r7, #12]
 911 0076 0122     		movs	r2, #1
 912 0078 83F85020 		strb	r2, [r3, #80]
 990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the transaction information */
 992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
 913              		.loc 1 992 21 is_stmt 1
 914 007c FB68     		ldr	r3, [r7, #12]
 915 007e 0422     		movs	r2, #4
 916 0080 83F85120 		strb	r2, [r3, #81]
 993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 917              		.loc 1 993 21
 918 0084 FB68     		ldr	r3, [r7, #12]
 919 0086 0022     		movs	r2, #0
 920 0088 5A65     		str	r2, [r3, #84]
 994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 921              		.loc 1 994 21
 922 008a FB68     		ldr	r3, [r7, #12]
 923 008c BA68     		ldr	r2, [r7, #8]
 924 008e 9A63     		str	r2, [r3, #56]
 995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 925              		.loc 1 995 21
 926 0090 FB68     		ldr	r3, [r7, #12]
 927 0092 FA88     		ldrh	r2, [r7, #6]	@ movhi
 928 0094 9A87     		strh	r2, [r3, #60]	@ movhi
 996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 929              		.loc 1 996 21
 930 0096 FB68     		ldr	r3, [r7, #12]
 931 0098 FA88     		ldrh	r2, [r7, #6]	@ movhi
 932 009a DA87     		strh	r2, [r3, #62]	@ movhi
 997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
 998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /*Init field not used in handle to zero */
 999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)NULL;
 933              		.loc 1 999 21
 934 009c FB68     		ldr	r3, [r7, #12]
 935 009e 0022     		movs	r2, #0
 936 00a0 1A63     		str	r2, [r3, #48]
1000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 937              		.loc 1 1000 21
 938 00a2 FB68     		ldr	r3, [r7, #12]
 939 00a4 0022     		movs	r2, #0
 940 00a6 9A86     		strh	r2, [r3, #52]	@ movhi
1001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 941              		.loc 1 1001 21
 942 00a8 FB68     		ldr	r3, [r7, #12]
 943 00aa 0022     		movs	r2, #0
 944 00ac DA86     		strh	r2, [r3, #54]	@ movhi
ARM GAS  /tmp/ccFW5O3y.s 			page 35


1002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxISR       = NULL;
 945              		.loc 1 1002 21
 946 00ae FB68     		ldr	r3, [r7, #12]
 947 00b0 0022     		movs	r2, #0
 948 00b2 1A64     		str	r2, [r3, #64]
1003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 949              		.loc 1 1003 21
 950 00b4 FB68     		ldr	r3, [r7, #12]
 951 00b6 0022     		movs	r2, #0
 952 00b8 5A64     		str	r2, [r3, #68]
1004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset CRC Calculation */
1007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* this is done to handle the CRCNEXT before the latest data */
1011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxXferCount--;
1012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Configure communication direction: 1Line */
1016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 953              		.loc 1 1016 17
 954 00ba FB68     		ldr	r3, [r7, #12]
 955 00bc 9B68     		ldr	r3, [r3, #8]
 956              		.loc 1 1016 6
 957 00be B3F5004F 		cmp	r3, #32768
 958 00c2 0FD1     		bne	.L48
1017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
1019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE(hspi);
 959              		.loc 1 1019 5
 960 00c4 FB68     		ldr	r3, [r7, #12]
 961 00c6 1B68     		ldr	r3, [r3]
 962 00c8 1A68     		ldr	r2, [r3]
 963 00ca FB68     		ldr	r3, [r7, #12]
 964 00cc 1B68     		ldr	r3, [r3]
 965 00ce 22F04002 		bic	r2, r2, #64
 966 00d2 1A60     		str	r2, [r3]
1020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
 967              		.loc 1 1020 5
 968 00d4 FB68     		ldr	r3, [r7, #12]
 969 00d6 1B68     		ldr	r3, [r3]
 970 00d8 1A68     		ldr	r2, [r3]
 971 00da FB68     		ldr	r3, [r7, #12]
 972 00dc 1B68     		ldr	r3, [r3]
 973 00de 22F48042 		bic	r2, r2, #16384
 974 00e2 1A60     		str	r2, [r3]
 975              	.L48:
1021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 976              		.loc 1 1024 12
 977 00e4 FB68     		ldr	r3, [r7, #12]
 978 00e6 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccFW5O3y.s 			page 36


 979              		.loc 1 1024 22
 980 00e8 1B68     		ldr	r3, [r3]
 981              		.loc 1 1024 28
 982 00ea 03F04003 		and	r3, r3, #64
 983              		.loc 1 1024 6
 984 00ee 402B     		cmp	r3, #64
 985 00f0 07D0     		beq	.L49
1025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Enable SPI peripheral */
1027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 986              		.loc 1 1027 5
 987 00f2 FB68     		ldr	r3, [r7, #12]
 988 00f4 1B68     		ldr	r3, [r3]
 989 00f6 1A68     		ldr	r2, [r3]
 990 00f8 FB68     		ldr	r3, [r7, #12]
 991 00fa 1B68     		ldr	r3, [r3]
 992 00fc 42F04002 		orr	r2, r2, #64
 993 0100 1A60     		str	r2, [r3]
 994              	.L49:
1028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Receive data in 8 Bit mode */
1031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 995              		.loc 1 1031 17
 996 0102 FB68     		ldr	r3, [r7, #12]
 997 0104 DB68     		ldr	r3, [r3, #12]
 998              		.loc 1 1031 6
 999 0106 002B     		cmp	r3, #0
 1000 0108 70D1     		bne	.L58
1032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Transfer loop */
1034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     while (hspi->RxXferCount > 0U)
 1001              		.loc 1 1034 11
 1002 010a 35E0     		b	.L51
 1003              	.L56:
1035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Check the RXNE flag */
1037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 1004              		.loc 1 1037 11
 1005 010c FB68     		ldr	r3, [r7, #12]
 1006 010e 1B68     		ldr	r3, [r3]
 1007 0110 9B68     		ldr	r3, [r3, #8]
 1008 0112 03F00103 		and	r3, r3, #1
 1009              		.loc 1 1037 10
 1010 0116 012B     		cmp	r3, #1
 1011 0118 15D1     		bne	.L52
1038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
1039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* read the received data */
1040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 1012              		.loc 1 1040 65
 1013 011a FB68     		ldr	r3, [r7, #12]
 1014 011c 1B68     		ldr	r3, [r3]
 1015              		.loc 1 1040 60
 1016 011e 03F10C02 		add	r2, r3, #12
 1017              		.loc 1 1040 27
 1018 0122 FB68     		ldr	r3, [r7, #12]
 1019 0124 9B6B     		ldr	r3, [r3, #56]
ARM GAS  /tmp/ccFW5O3y.s 			page 37


 1020              		.loc 1 1040 43
 1021 0126 1278     		ldrb	r2, [r2]
 1022 0128 D2B2     		uxtb	r2, r2
 1023              		.loc 1 1040 41
 1024 012a 1A70     		strb	r2, [r3]
1041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint8_t);
 1025              		.loc 1 1041 13
 1026 012c FB68     		ldr	r3, [r7, #12]
 1027 012e 9B6B     		ldr	r3, [r3, #56]
 1028              		.loc 1 1041 26
 1029 0130 5A1C     		adds	r2, r3, #1
 1030 0132 FB68     		ldr	r3, [r7, #12]
 1031 0134 9A63     		str	r2, [r3, #56]
1042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->RxXferCount--;
 1032              		.loc 1 1042 13
 1033 0136 FB68     		ldr	r3, [r7, #12]
 1034 0138 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1035 013a 9BB2     		uxth	r3, r3
 1036              		.loc 1 1042 26
 1037 013c 013B     		subs	r3, r3, #1
 1038 013e 9AB2     		uxth	r2, r3
 1039 0140 FB68     		ldr	r3, [r7, #12]
 1040 0142 DA87     		strh	r2, [r3, #62]	@ movhi
 1041 0144 18E0     		b	.L51
 1042              	.L52:
1043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
1045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
1046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Timeout management */
1047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
 1043              		.loc 1 1047 16
 1044 0146 FFF7FEFF 		bl	HAL_GetTick
 1045 014a 0246     		mov	r2, r0
 1046              		.loc 1 1047 30 discriminator 1
 1047 014c 7B69     		ldr	r3, [r7, #20]
 1048 014e D31A     		subs	r3, r2, r3
 1049              		.loc 1 1047 12 discriminator 1
 1050 0150 3A68     		ldr	r2, [r7]
 1051 0152 9A42     		cmp	r2, r3
 1052 0154 03D8     		bhi	.L54
 1053              		.loc 1 1047 56 discriminator 1
 1054 0156 3B68     		ldr	r3, [r7]
 1055 0158 B3F1FF3F 		cmp	r3, #-1
 1056 015c 02D1     		bne	.L55
 1057              	.L54:
 1058              		.loc 1 1047 87 discriminator 3
 1059 015e 3B68     		ldr	r3, [r7]
 1060 0160 002B     		cmp	r3, #0
 1061 0162 09D1     		bne	.L51
 1062              	.L55:
1048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
1049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           hspi->State = HAL_SPI_STATE_READY;
 1063              		.loc 1 1049 23
 1064 0164 FB68     		ldr	r3, [r7, #12]
 1065 0166 0122     		movs	r2, #1
 1066 0168 83F85120 		strb	r2, [r3, #81]
1050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           __HAL_UNLOCK(hspi);
ARM GAS  /tmp/ccFW5O3y.s 			page 38


 1067              		.loc 1 1050 11
 1068 016c FB68     		ldr	r3, [r7, #12]
 1069 016e 0022     		movs	r2, #0
 1070 0170 83F85020 		strb	r2, [r3, #80]
1051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           return HAL_TIMEOUT;
 1071              		.loc 1 1051 18
 1072 0174 0323     		movs	r3, #3
 1073 0176 58E0     		b	.L43
 1074              	.L51:
1034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 1075              		.loc 1 1034 16
 1076 0178 FB68     		ldr	r3, [r7, #12]
 1077 017a DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1078 017c 9BB2     		uxth	r3, r3
1034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 1079              		.loc 1 1034 30
 1080 017e 002B     		cmp	r3, #0
 1081 0180 C4D1     		bne	.L56
 1082 0182 38E0     		b	.L57
 1083              	.L63:
1052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
1053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
1057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Transfer loop */
1059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     while (hspi->RxXferCount > 0U)
1060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Check the RXNE flag */
1062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 1084              		.loc 1 1062 11
 1085 0184 FB68     		ldr	r3, [r7, #12]
 1086 0186 1B68     		ldr	r3, [r3]
 1087 0188 9B68     		ldr	r3, [r3, #8]
 1088 018a 03F00103 		and	r3, r3, #1
 1089              		.loc 1 1062 10
 1090 018e 012B     		cmp	r3, #1
 1091 0190 13D1     		bne	.L59
1063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
1064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 1092              		.loc 1 1064 57
 1093 0192 FB68     		ldr	r3, [r7, #12]
 1094 0194 1B68     		ldr	r3, [r3]
 1095              		.loc 1 1064 67
 1096 0196 DA68     		ldr	r2, [r3, #12]
 1097              		.loc 1 1064 27
 1098 0198 FB68     		ldr	r3, [r7, #12]
 1099 019a 9B6B     		ldr	r3, [r3, #56]
 1100              		.loc 1 1064 43
 1101 019c 92B2     		uxth	r2, r2
 1102              		.loc 1 1064 41
 1103 019e 1A80     		strh	r2, [r3]	@ movhi
1065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint16_t);
 1104              		.loc 1 1065 13
 1105 01a0 FB68     		ldr	r3, [r7, #12]
 1106 01a2 9B6B     		ldr	r3, [r3, #56]
ARM GAS  /tmp/ccFW5O3y.s 			page 39


 1107              		.loc 1 1065 26
 1108 01a4 9A1C     		adds	r2, r3, #2
 1109 01a6 FB68     		ldr	r3, [r7, #12]
 1110 01a8 9A63     		str	r2, [r3, #56]
1066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->RxXferCount--;
 1111              		.loc 1 1066 13
 1112 01aa FB68     		ldr	r3, [r7, #12]
 1113 01ac DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1114 01ae 9BB2     		uxth	r3, r3
 1115              		.loc 1 1066 26
 1116 01b0 013B     		subs	r3, r3, #1
 1117 01b2 9AB2     		uxth	r2, r3
 1118 01b4 FB68     		ldr	r3, [r7, #12]
 1119 01b6 DA87     		strh	r2, [r3, #62]	@ movhi
 1120 01b8 18E0     		b	.L58
 1121              	.L59:
1067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
1069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
1070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Timeout management */
1071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout =
 1122              		.loc 1 1071 16
 1123 01ba FFF7FEFF 		bl	HAL_GetTick
 1124 01be 0246     		mov	r2, r0
 1125              		.loc 1 1071 30 discriminator 1
 1126 01c0 7B69     		ldr	r3, [r7, #20]
 1127 01c2 D31A     		subs	r3, r2, r3
 1128              		.loc 1 1071 12 discriminator 1
 1129 01c4 3A68     		ldr	r2, [r7]
 1130 01c6 9A42     		cmp	r2, r3
 1131 01c8 03D8     		bhi	.L61
 1132              		.loc 1 1071 56 discriminator 1
 1133 01ca 3B68     		ldr	r3, [r7]
 1134 01cc B3F1FF3F 		cmp	r3, #-1
 1135 01d0 02D1     		bne	.L62
 1136              	.L61:
 1137              		.loc 1 1071 87 discriminator 3
 1138 01d2 3B68     		ldr	r3, [r7]
 1139 01d4 002B     		cmp	r3, #0
 1140 01d6 09D1     		bne	.L58
 1141              	.L62:
1072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
1073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           hspi->State = HAL_SPI_STATE_READY;
 1142              		.loc 1 1073 23
 1143 01d8 FB68     		ldr	r3, [r7, #12]
 1144 01da 0122     		movs	r2, #1
 1145 01dc 83F85120 		strb	r2, [r3, #81]
1074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           __HAL_UNLOCK(hspi);
 1146              		.loc 1 1074 11
 1147 01e0 FB68     		ldr	r3, [r7, #12]
 1148 01e2 0022     		movs	r2, #0
 1149 01e4 83F85020 		strb	r2, [r3, #80]
1075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           return HAL_TIMEOUT;
 1150              		.loc 1 1075 18
 1151 01e8 0323     		movs	r3, #3
 1152 01ea 1EE0     		b	.L43
 1153              	.L58:
ARM GAS  /tmp/ccFW5O3y.s 			page 40


1059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 1154              		.loc 1 1059 16
 1155 01ec FB68     		ldr	r3, [r7, #12]
 1156 01ee DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1157 01f0 9BB2     		uxth	r3, r3
1059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 1158              		.loc 1 1059 30
 1159 01f2 002B     		cmp	r3, #0
 1160 01f4 C6D1     		bne	.L63
 1161              	.L57:
1076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
1077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Handle the CRC Transmission */
1083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* freeze the CRC before the latest data */
1086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
1087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check if CRCNEXT is well reset by hardware */
1089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (READ_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT))
1090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Workaround to force CRCNEXT bit to zero in case of CRCNEXT is not reset automatically by h
1092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
1093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Read the latest data */
1095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* the latest data has not been received */
1098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_UNLOCK(hspi);
1099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return HAL_TIMEOUT;
1100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Receive last data in 16 Bit mode */
1103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
1104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
1106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Receive last data in 8 Bit mode */
1108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
1109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (*(uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
1111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Wait the CRC data */
1114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_READY;
1118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_UNLOCK(hspi);
1119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return HAL_TIMEOUT;
1120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Read CRC to Flush DR and RXNE flag */
ARM GAS  /tmp/ccFW5O3y.s 			page 41


1123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     tmpreg = READ_REG(hspi->Instance->DR);
1124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* To avoid GCC warning */
1125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     UNUSED(tmpreg);
1126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the end of the transaction */
1130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 1162              		.loc 1 1130 7
 1163 01f6 7A69     		ldr	r2, [r7, #20]
 1164 01f8 3968     		ldr	r1, [r7]
 1165 01fa F868     		ldr	r0, [r7, #12]
 1166 01fc FFF7FEFF 		bl	SPI_EndRxTransaction
 1167 0200 0346     		mov	r3, r0
 1168              		.loc 1 1130 6 discriminator 1
 1169 0202 002B     		cmp	r3, #0
 1170 0204 02D0     		beq	.L64
1131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 1171              		.loc 1 1132 21
 1172 0206 FB68     		ldr	r3, [r7, #12]
 1173 0208 2022     		movs	r2, #32
 1174 020a 5A65     		str	r2, [r3, #84]
 1175              	.L64:
1133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if CRC error occurred */
1137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
1138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check if CRC error is valid or not (workaround to be applied or not) */
1140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_ISCRCErrorValid(hspi) == SPI_VALID_CRC_ERROR)
1141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Reset CRC Calculation */
1145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SPI_RESET_CRC(hspi);
1146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
1148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
1150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 1176              		.loc 1 1154 15
 1177 020c FB68     		ldr	r3, [r7, #12]
 1178 020e 0122     		movs	r2, #1
 1179 0210 83F85120 		strb	r2, [r3, #81]
1155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Unlock the process */
1156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 1180              		.loc 1 1156 3
 1181 0214 FB68     		ldr	r3, [r7, #12]
 1182 0216 0022     		movs	r2, #0
 1183 0218 83F85020 		strb	r2, [r3, #80]
1157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
ARM GAS  /tmp/ccFW5O3y.s 			page 42


 1184              		.loc 1 1157 11
 1185 021c FB68     		ldr	r3, [r7, #12]
 1186 021e 5B6D     		ldr	r3, [r3, #84]
 1187              		.loc 1 1157 6
 1188 0220 002B     		cmp	r3, #0
 1189 0222 01D0     		beq	.L65
1158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_ERROR;
 1190              		.loc 1 1159 12
 1191 0224 0123     		movs	r3, #1
 1192 0226 00E0     		b	.L43
 1193              	.L65:
1160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
1162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_OK;
 1194              		.loc 1 1163 12
 1195 0228 0023     		movs	r3, #0
 1196              	.L43:
1164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 1197              		.loc 1 1165 1
 1198 022a 1846     		mov	r0, r3
 1199 022c 1837     		adds	r7, r7, #24
 1200              	.LCFI30:
 1201              		.cfi_def_cfa_offset 8
 1202 022e BD46     		mov	sp, r7
 1203              	.LCFI31:
 1204              		.cfi_def_cfa_register 13
 1205              		@ sp needed
 1206 0230 80BD     		pop	{r7, pc}
 1207              		.cfi_endproc
 1208              	.LFE70:
 1210              		.section	.text.HAL_SPI_TransmitReceive,"ax",%progbits
 1211              		.align	1
 1212              		.global	HAL_SPI_TransmitReceive
 1213              		.syntax unified
 1214              		.thumb
 1215              		.thumb_func
 1217              	HAL_SPI_TransmitReceive:
 1218              	.LFB71:
1166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
1168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in blocking mode.
1169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
1171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pTxData pointer to transmission data buffer
1172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pRxData pointer to reception data buffer
1173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Size amount of data to be sent and received
1174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Timeout Timeout duration
1175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
1176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
1177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive(SPI_HandleTypeDef *hspi, const uint8_t *pTxData, uint8_t 
1178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                           uint16_t Size, uint32_t Timeout)
1179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 1219              		.loc 1 1179 1
 1220              		.cfi_startproc
ARM GAS  /tmp/ccFW5O3y.s 			page 43


 1221              		@ args = 4, pretend = 0, frame = 40
 1222              		@ frame_needed = 1, uses_anonymous_args = 0
 1223 0000 80B5     		push	{r7, lr}
 1224              	.LCFI32:
 1225              		.cfi_def_cfa_offset 8
 1226              		.cfi_offset 7, -8
 1227              		.cfi_offset 14, -4
 1228 0002 8AB0     		sub	sp, sp, #40
 1229              	.LCFI33:
 1230              		.cfi_def_cfa_offset 48
 1231 0004 00AF     		add	r7, sp, #0
 1232              	.LCFI34:
 1233              		.cfi_def_cfa_register 7
 1234 0006 F860     		str	r0, [r7, #12]
 1235 0008 B960     		str	r1, [r7, #8]
 1236 000a 7A60     		str	r2, [r7, #4]
 1237 000c 7B80     		strh	r3, [r7, #2]	@ movhi
1180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint16_t             initial_TxXferCount;
1181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t             tmp_mode;
1182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_StateTypeDef tmp_state;
1183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t             tickstart;
1184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t tmpreg = 0U;
1186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Variable used to alternate Rx and Tx during transfer */
1189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t             txallowed = 1U;
 1238              		.loc 1 1189 24
 1239 000e 0123     		movs	r3, #1
 1240 0010 7B62     		str	r3, [r7, #36]
1190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check Direction parameter */
1192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
1193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
1195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tickstart = HAL_GetTick();
 1241              		.loc 1 1195 15
 1242 0012 FFF7FEFF 		bl	HAL_GetTick
 1243 0016 3862     		str	r0, [r7, #32]
1196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init temporary variables */
1198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmp_state           = hspi->State;
 1244              		.loc 1 1198 23
 1245 0018 FB68     		ldr	r3, [r7, #12]
 1246 001a 93F85130 		ldrb	r3, [r3, #81]
 1247 001e FB77     		strb	r3, [r7, #31]
1199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
 1248              		.loc 1 1199 23
 1249 0020 FB68     		ldr	r3, [r7, #12]
 1250 0022 5B68     		ldr	r3, [r3, #4]
 1251 0024 BB61     		str	r3, [r7, #24]
1200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   initial_TxXferCount = Size;
 1252              		.loc 1 1200 23
 1253 0026 7B88     		ldrh	r3, [r7, #2]	@ movhi
 1254 0028 FB82     		strh	r3, [r7, #22]	@ movhi
1201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (!((tmp_state == HAL_SPI_STATE_READY) || \
ARM GAS  /tmp/ccFW5O3y.s 			page 44


 1255              		.loc 1 1202 6
 1256 002a FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1257 002c 012B     		cmp	r3, #1
 1258 002e 0CD0     		beq	.L67
 1259              		.loc 1 1202 7 discriminator 1
 1260 0030 BB69     		ldr	r3, [r7, #24]
 1261 0032 B3F5827F 		cmp	r3, #260
 1262 0036 06D1     		bne	.L68
1203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) &&
 1263              		.loc 1 1203 54
 1264 0038 FB68     		ldr	r3, [r7, #12]
 1265 003a 9B68     		ldr	r3, [r3, #8]
 1266              		.loc 1 1203 40
 1267 003c 002B     		cmp	r3, #0
 1268 003e 02D1     		bne	.L68
 1269              		.loc 1 1203 90 discriminator 1
 1270 0040 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1271 0042 042B     		cmp	r3, #4
 1272 0044 01D0     		beq	.L67
 1273              	.L68:
1204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****          (tmp_state == HAL_SPI_STATE_BUSY_RX))))
1205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_BUSY;
 1274              		.loc 1 1206 12
 1275 0046 0223     		movs	r3, #2
 1276 0048 7FE1     		b	.L69
 1277              	.L67:
1207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 1278              		.loc 1 1209 6
 1279 004a BB68     		ldr	r3, [r7, #8]
 1280 004c 002B     		cmp	r3, #0
 1281 004e 05D0     		beq	.L70
 1282              		.loc 1 1209 25 discriminator 1
 1283 0050 7B68     		ldr	r3, [r7, #4]
 1284 0052 002B     		cmp	r3, #0
 1285 0054 02D0     		beq	.L70
 1286              		.loc 1 1209 46 discriminator 2
 1287 0056 7B88     		ldrh	r3, [r7, #2]
 1288 0058 002B     		cmp	r3, #0
 1289 005a 01D1     		bne	.L71
 1290              	.L70:
1210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_ERROR;
 1291              		.loc 1 1211 12
 1292 005c 0123     		movs	r3, #1
 1293 005e 74E1     		b	.L69
 1294              	.L71:
1212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Locked */
1215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
 1295              		.loc 1 1215 3
 1296 0060 FB68     		ldr	r3, [r7, #12]
 1297 0062 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 1298 0066 012B     		cmp	r3, #1
ARM GAS  /tmp/ccFW5O3y.s 			page 45


 1299 0068 01D1     		bne	.L72
 1300              		.loc 1 1215 3 is_stmt 0 discriminator 1
 1301 006a 0223     		movs	r3, #2
 1302              		.loc 1 1215 3
 1303 006c 6DE1     		b	.L69
 1304              	.L72:
 1305              		.loc 1 1215 3 discriminator 2
 1306 006e FB68     		ldr	r3, [r7, #12]
 1307 0070 0122     		movs	r2, #1
 1308 0072 83F85020 		strb	r2, [r3, #80]
1216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
1218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 1309              		.loc 1 1218 11 is_stmt 1
 1310 0076 FB68     		ldr	r3, [r7, #12]
 1311 0078 93F85130 		ldrb	r3, [r3, #81]
 1312 007c DBB2     		uxtb	r3, r3
 1313              		.loc 1 1218 6
 1314 007e 042B     		cmp	r3, #4
 1315 0080 03D0     		beq	.L73
1219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 1316              		.loc 1 1220 17
 1317 0082 FB68     		ldr	r3, [r7, #12]
 1318 0084 0522     		movs	r2, #5
 1319 0086 83F85120 		strb	r2, [r3, #81]
 1320              	.L73:
1221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the transaction information */
1224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 1321              		.loc 1 1224 21
 1322 008a FB68     		ldr	r3, [r7, #12]
 1323 008c 0022     		movs	r2, #0
 1324 008e 5A65     		str	r2, [r3, #84]
1225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 1325              		.loc 1 1225 21
 1326 0090 FB68     		ldr	r3, [r7, #12]
 1327 0092 7A68     		ldr	r2, [r7, #4]
 1328 0094 9A63     		str	r2, [r3, #56]
1226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 1329              		.loc 1 1226 21
 1330 0096 FB68     		ldr	r3, [r7, #12]
 1331 0098 7A88     		ldrh	r2, [r7, #2]	@ movhi
 1332 009a DA87     		strh	r2, [r3, #62]	@ movhi
1227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 1333              		.loc 1 1227 21
 1334 009c FB68     		ldr	r3, [r7, #12]
 1335 009e 7A88     		ldrh	r2, [r7, #2]	@ movhi
 1336 00a0 9A87     		strh	r2, [r3, #60]	@ movhi
1228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (const uint8_t *)pTxData;
 1337              		.loc 1 1228 21
 1338 00a2 FB68     		ldr	r3, [r7, #12]
 1339 00a4 BA68     		ldr	r2, [r7, #8]
 1340 00a6 1A63     		str	r2, [r3, #48]
1229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 1341              		.loc 1 1229 21
ARM GAS  /tmp/ccFW5O3y.s 			page 46


 1342 00a8 FB68     		ldr	r3, [r7, #12]
 1343 00aa 7A88     		ldrh	r2, [r7, #2]	@ movhi
 1344 00ac DA86     		strh	r2, [r3, #54]	@ movhi
1230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 1345              		.loc 1 1230 21
 1346 00ae FB68     		ldr	r3, [r7, #12]
 1347 00b0 7A88     		ldrh	r2, [r7, #2]	@ movhi
 1348 00b2 9A86     		strh	r2, [r3, #52]	@ movhi
1231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /*Init field not used in handle to zero */
1233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxISR       = NULL;
 1349              		.loc 1 1233 21
 1350 00b4 FB68     		ldr	r3, [r7, #12]
 1351 00b6 0022     		movs	r2, #0
 1352 00b8 1A64     		str	r2, [r3, #64]
1234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 1353              		.loc 1 1234 21
 1354 00ba FB68     		ldr	r3, [r7, #12]
 1355 00bc 0022     		movs	r2, #0
 1356 00be 5A64     		str	r2, [r3, #68]
1235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset CRC Calculation */
1238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 1357              		.loc 1 1245 12
 1358 00c0 FB68     		ldr	r3, [r7, #12]
 1359 00c2 1B68     		ldr	r3, [r3]
 1360              		.loc 1 1245 22
 1361 00c4 1B68     		ldr	r3, [r3]
 1362              		.loc 1 1245 28
 1363 00c6 03F04003 		and	r3, r3, #64
 1364              		.loc 1 1245 6
 1365 00ca 402B     		cmp	r3, #64
 1366 00cc 07D0     		beq	.L74
1246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Enable SPI peripheral */
1248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 1367              		.loc 1 1248 5
 1368 00ce FB68     		ldr	r3, [r7, #12]
 1369 00d0 1B68     		ldr	r3, [r3]
 1370 00d2 1A68     		ldr	r2, [r3]
 1371 00d4 FB68     		ldr	r3, [r7, #12]
 1372 00d6 1B68     		ldr	r3, [r3]
 1373 00d8 42F04002 		orr	r2, r2, #64
 1374 00dc 1A60     		str	r2, [r3]
 1375              	.L74:
1249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Transmit and Receive data in 16 Bit mode */
1252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
ARM GAS  /tmp/ccFW5O3y.s 			page 47


 1376              		.loc 1 1252 17
 1377 00de FB68     		ldr	r3, [r7, #12]
 1378 00e0 DB68     		ldr	r3, [r3, #12]
 1379              		.loc 1 1252 6
 1380 00e2 B3F5006F 		cmp	r3, #2048
 1381 00e6 7ED1     		bne	.L75
1253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 1382              		.loc 1 1254 20
 1383 00e8 FB68     		ldr	r3, [r7, #12]
 1384 00ea 5B68     		ldr	r3, [r3, #4]
 1385              		.loc 1 1254 8
 1386 00ec 002B     		cmp	r3, #0
 1387 00ee 02D0     		beq	.L76
 1388              		.loc 1 1254 45 discriminator 1
 1389 00f0 FB8A     		ldrh	r3, [r7, #22]
 1390 00f2 012B     		cmp	r3, #1
 1391 00f4 6CD1     		bne	.L78
 1392              	.L76:
1255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 1393              		.loc 1 1256 52
 1394 00f6 FB68     		ldr	r3, [r7, #12]
 1395 00f8 1B6B     		ldr	r3, [r3, #48]
 1396              		.loc 1 1256 28
 1397 00fa 1A88     		ldrh	r2, [r3]
 1398              		.loc 1 1256 11
 1399 00fc FB68     		ldr	r3, [r7, #12]
 1400 00fe 1B68     		ldr	r3, [r3]
 1401              		.loc 1 1256 26
 1402 0100 DA60     		str	r2, [r3, #12]
1257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint16_t);
 1403              		.loc 1 1257 11
 1404 0102 FB68     		ldr	r3, [r7, #12]
 1405 0104 1B6B     		ldr	r3, [r3, #48]
 1406              		.loc 1 1257 24
 1407 0106 9A1C     		adds	r2, r3, #2
 1408 0108 FB68     		ldr	r3, [r7, #12]
 1409 010a 1A63     		str	r2, [r3, #48]
1258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->TxXferCount--;
 1410              		.loc 1 1258 11
 1411 010c FB68     		ldr	r3, [r7, #12]
 1412 010e DB8E     		ldrh	r3, [r3, #54]	@ movhi
 1413 0110 9BB2     		uxth	r3, r3
 1414              		.loc 1 1258 24
 1415 0112 013B     		subs	r3, r3, #1
 1416 0114 9AB2     		uxth	r2, r3
 1417 0116 FB68     		ldr	r3, [r7, #12]
 1418 0118 DA86     		strh	r2, [r3, #54]	@ movhi
1259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Enable CRC Transmission */
1262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if ((hspi->TxXferCount == 0U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
1263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
1264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
1265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
ARM GAS  /tmp/ccFW5O3y.s 			page 48


1267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 1419              		.loc 1 1269 11
 1420 011a 59E0     		b	.L78
 1421              	.L82:
1270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Check TXE flag */
1272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U)
 1422              		.loc 1 1272 12
 1423 011c FB68     		ldr	r3, [r7, #12]
 1424 011e 1B68     		ldr	r3, [r3]
 1425 0120 9B68     		ldr	r3, [r3, #8]
 1426 0122 03F00203 		and	r3, r3, #2
 1427              		.loc 1 1272 10
 1428 0126 022B     		cmp	r3, #2
 1429 0128 1BD1     		bne	.L79
 1430              		.loc 1 1272 60 discriminator 1
 1431 012a FB68     		ldr	r3, [r7, #12]
 1432 012c DB8E     		ldrh	r3, [r3, #54]	@ movhi
 1433 012e 9BB2     		uxth	r3, r3
 1434              		.loc 1 1272 52 discriminator 1
 1435 0130 002B     		cmp	r3, #0
 1436 0132 16D0     		beq	.L79
 1437              		.loc 1 1272 80 discriminator 2
 1438 0134 7B6A     		ldr	r3, [r7, #36]
 1439 0136 012B     		cmp	r3, #1
 1440 0138 13D1     		bne	.L79
1273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
1274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 1441              		.loc 1 1274 54
 1442 013a FB68     		ldr	r3, [r7, #12]
 1443 013c 1B6B     		ldr	r3, [r3, #48]
 1444              		.loc 1 1274 30
 1445 013e 1A88     		ldrh	r2, [r3]
 1446              		.loc 1 1274 13
 1447 0140 FB68     		ldr	r3, [r7, #12]
 1448 0142 1B68     		ldr	r3, [r3]
 1449              		.loc 1 1274 28
 1450 0144 DA60     		str	r2, [r3, #12]
1275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->pTxBuffPtr += sizeof(uint16_t);
 1451              		.loc 1 1275 13
 1452 0146 FB68     		ldr	r3, [r7, #12]
 1453 0148 1B6B     		ldr	r3, [r3, #48]
 1454              		.loc 1 1275 26
 1455 014a 9A1C     		adds	r2, r3, #2
 1456 014c FB68     		ldr	r3, [r7, #12]
 1457 014e 1A63     		str	r2, [r3, #48]
1276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxXferCount--;
 1458              		.loc 1 1276 13
 1459 0150 FB68     		ldr	r3, [r7, #12]
 1460 0152 DB8E     		ldrh	r3, [r3, #54]	@ movhi
 1461 0154 9BB2     		uxth	r3, r3
 1462              		.loc 1 1276 26
 1463 0156 013B     		subs	r3, r3, #1
 1464 0158 9AB2     		uxth	r2, r3
 1465 015a FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccFW5O3y.s 			page 49


 1466 015c DA86     		strh	r2, [r3, #54]	@ movhi
1277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */
1278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         txallowed = 0U;
 1467              		.loc 1 1278 19
 1468 015e 0023     		movs	r3, #0
 1469 0160 7B62     		str	r3, [r7, #36]
 1470              	.L79:
1279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Enable CRC Transmission */
1282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if ((hspi->TxXferCount == 0U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
1283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
1284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
1285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
1286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Check RXNE flag */
1290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 1471              		.loc 1 1290 12
 1472 0162 FB68     		ldr	r3, [r7, #12]
 1473 0164 1B68     		ldr	r3, [r3]
 1474 0166 9B68     		ldr	r3, [r3, #8]
 1475 0168 03F00103 		and	r3, r3, #1
 1476              		.loc 1 1290 10
 1477 016c 012B     		cmp	r3, #1
 1478 016e 19D1     		bne	.L80
 1479              		.loc 1 1290 61 discriminator 1
 1480 0170 FB68     		ldr	r3, [r7, #12]
 1481 0172 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1482 0174 9BB2     		uxth	r3, r3
 1483              		.loc 1 1290 53 discriminator 1
 1484 0176 002B     		cmp	r3, #0
 1485 0178 14D0     		beq	.L80
1291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
1292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 1486              		.loc 1 1292 57
 1487 017a FB68     		ldr	r3, [r7, #12]
 1488 017c 1B68     		ldr	r3, [r3]
 1489              		.loc 1 1292 67
 1490 017e DA68     		ldr	r2, [r3, #12]
 1491              		.loc 1 1292 27
 1492 0180 FB68     		ldr	r3, [r7, #12]
 1493 0182 9B6B     		ldr	r3, [r3, #56]
 1494              		.loc 1 1292 43
 1495 0184 92B2     		uxth	r2, r2
 1496              		.loc 1 1292 41
 1497 0186 1A80     		strh	r2, [r3]	@ movhi
1293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->pRxBuffPtr += sizeof(uint16_t);
 1498              		.loc 1 1293 13
 1499 0188 FB68     		ldr	r3, [r7, #12]
 1500 018a 9B6B     		ldr	r3, [r3, #56]
 1501              		.loc 1 1293 26
 1502 018c 9A1C     		adds	r2, r3, #2
 1503 018e FB68     		ldr	r3, [r7, #12]
 1504 0190 9A63     		str	r2, [r3, #56]
1294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->RxXferCount--;
ARM GAS  /tmp/ccFW5O3y.s 			page 50


 1505              		.loc 1 1294 13
 1506 0192 FB68     		ldr	r3, [r7, #12]
 1507 0194 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1508 0196 9BB2     		uxth	r3, r3
 1509              		.loc 1 1294 26
 1510 0198 013B     		subs	r3, r3, #1
 1511 019a 9AB2     		uxth	r2, r3
 1512 019c FB68     		ldr	r3, [r7, #12]
 1513 019e DA87     		strh	r2, [r3, #62]	@ movhi
1295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */
1296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         txallowed = 1U;
 1514              		.loc 1 1296 19
 1515 01a0 0123     		movs	r3, #1
 1516 01a2 7B62     		str	r3, [r7, #36]
 1517              	.L80:
1297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 1518              		.loc 1 1298 13
 1519 01a4 FFF7FEFF 		bl	HAL_GetTick
 1520 01a8 0246     		mov	r2, r0
 1521              		.loc 1 1298 27 discriminator 1
 1522 01aa 3B6A     		ldr	r3, [r7, #32]
 1523 01ac D31A     		subs	r3, r2, r3
 1524              		.loc 1 1298 10 discriminator 1
 1525 01ae 3A6B     		ldr	r2, [r7, #48]
 1526 01b0 9A42     		cmp	r2, r3
 1527 01b2 0DD8     		bhi	.L78
 1528              		.loc 1 1298 53 discriminator 1
 1529 01b4 3B6B     		ldr	r3, [r7, #48]
 1530 01b6 B3F1FF3F 		cmp	r3, #-1
 1531 01ba 09D0     		beq	.L78
1299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
1300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
 1532              		.loc 1 1300 21
 1533 01bc FB68     		ldr	r3, [r7, #12]
 1534 01be 0122     		movs	r2, #1
 1535 01c0 83F85120 		strb	r2, [r3, #81]
1301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         __HAL_UNLOCK(hspi);
 1536              		.loc 1 1301 9
 1537 01c4 FB68     		ldr	r3, [r7, #12]
 1538 01c6 0022     		movs	r2, #0
 1539 01c8 83F85020 		strb	r2, [r3, #80]
1302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         return HAL_TIMEOUT;
 1540              		.loc 1 1302 16
 1541 01cc 0323     		movs	r3, #3
 1542 01ce BCE0     		b	.L69
 1543              	.L78:
1269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 1544              		.loc 1 1269 17
 1545 01d0 FB68     		ldr	r3, [r7, #12]
 1546 01d2 DB8E     		ldrh	r3, [r3, #54]	@ movhi
 1547 01d4 9BB2     		uxth	r3, r3
1269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 1548              		.loc 1 1269 37
 1549 01d6 002B     		cmp	r3, #0
 1550 01d8 A0D1     		bne	.L82
1269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
ARM GAS  /tmp/ccFW5O3y.s 			page 51


 1551              		.loc 1 1269 45 discriminator 1
 1552 01da FB68     		ldr	r3, [r7, #12]
 1553 01dc DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1554 01de 9BB2     		uxth	r3, r3
1269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 1555              		.loc 1 1269 37 discriminator 1
 1556 01e0 002B     		cmp	r3, #0
 1557 01e2 9BD1     		bne	.L82
 1558 01e4 82E0     		b	.L83
 1559              	.L75:
1303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Transmit and Receive data in 8 Bit mode */
1307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
1308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 1560              		.loc 1 1309 20
 1561 01e6 FB68     		ldr	r3, [r7, #12]
 1562 01e8 5B68     		ldr	r3, [r3, #4]
 1563              		.loc 1 1309 8
 1564 01ea 002B     		cmp	r3, #0
 1565 01ec 02D0     		beq	.L84
 1566              		.loc 1 1309 45 discriminator 1
 1567 01ee FB8A     		ldrh	r3, [r7, #22]
 1568 01f0 012B     		cmp	r3, #1
 1569 01f2 71D1     		bne	.L86
 1570              	.L84:
1310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 1571              		.loc 1 1311 71
 1572 01f4 FB68     		ldr	r3, [r7, #12]
 1573 01f6 1A6B     		ldr	r2, [r3, #48]
 1574              		.loc 1 1311 30
 1575 01f8 FB68     		ldr	r3, [r7, #12]
 1576 01fa 1B68     		ldr	r3, [r3]
 1577              		.loc 1 1311 25
 1578 01fc 0C33     		adds	r3, r3, #12
 1579              		.loc 1 1311 48
 1580 01fe 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1581              		.loc 1 1311 46
 1582 0200 1A70     		strb	r2, [r3]
1312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->pTxBuffPtr += sizeof(uint8_t);
 1583              		.loc 1 1312 11
 1584 0202 FB68     		ldr	r3, [r7, #12]
 1585 0204 1B6B     		ldr	r3, [r3, #48]
 1586              		.loc 1 1312 24
 1587 0206 5A1C     		adds	r2, r3, #1
 1588 0208 FB68     		ldr	r3, [r7, #12]
 1589 020a 1A63     		str	r2, [r3, #48]
1313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->TxXferCount--;
 1590              		.loc 1 1313 11
 1591 020c FB68     		ldr	r3, [r7, #12]
 1592 020e DB8E     		ldrh	r3, [r3, #54]	@ movhi
 1593 0210 9BB2     		uxth	r3, r3
 1594              		.loc 1 1313 24
 1595 0212 013B     		subs	r3, r3, #1
ARM GAS  /tmp/ccFW5O3y.s 			page 52


 1596 0214 9AB2     		uxth	r2, r3
 1597 0216 FB68     		ldr	r3, [r7, #12]
 1598 0218 DA86     		strh	r2, [r3, #54]	@ movhi
1314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Enable CRC Transmission */
1317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if ((hspi->TxXferCount == 0U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
1318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
1319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
1320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 1599              		.loc 1 1323 11
 1600 021a 5DE0     		b	.L86
 1601              	.L91:
1324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Check TXE flag */
1326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U)
 1602              		.loc 1 1326 12
 1603 021c FB68     		ldr	r3, [r7, #12]
 1604 021e 1B68     		ldr	r3, [r3]
 1605 0220 9B68     		ldr	r3, [r3, #8]
 1606 0222 03F00203 		and	r3, r3, #2
 1607              		.loc 1 1326 10
 1608 0226 022B     		cmp	r3, #2
 1609 0228 1CD1     		bne	.L87
 1610              		.loc 1 1326 60 discriminator 1
 1611 022a FB68     		ldr	r3, [r7, #12]
 1612 022c DB8E     		ldrh	r3, [r3, #54]	@ movhi
 1613 022e 9BB2     		uxth	r3, r3
 1614              		.loc 1 1326 52 discriminator 1
 1615 0230 002B     		cmp	r3, #0
 1616 0232 17D0     		beq	.L87
 1617              		.loc 1 1326 80 discriminator 2
 1618 0234 7B6A     		ldr	r3, [r7, #36]
 1619 0236 012B     		cmp	r3, #1
 1620 0238 14D1     		bne	.L87
1327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
1328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         *(__IO uint8_t *)&hspi->Instance->DR = *((const uint8_t *)hspi->pTxBuffPtr);
 1621              		.loc 1 1328 71
 1622 023a FB68     		ldr	r3, [r7, #12]
 1623 023c 1A6B     		ldr	r2, [r3, #48]
 1624              		.loc 1 1328 31
 1625 023e FB68     		ldr	r3, [r7, #12]
 1626 0240 1B68     		ldr	r3, [r3]
 1627              		.loc 1 1328 26
 1628 0242 0C33     		adds	r3, r3, #12
 1629              		.loc 1 1328 48
 1630 0244 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1631              		.loc 1 1328 46
 1632 0246 1A70     		strb	r2, [r3]
1329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->pTxBuffPtr++;
 1633              		.loc 1 1329 13
 1634 0248 FB68     		ldr	r3, [r7, #12]
 1635 024a 1B6B     		ldr	r3, [r3, #48]
 1636              		.loc 1 1329 25
ARM GAS  /tmp/ccFW5O3y.s 			page 53


 1637 024c 5A1C     		adds	r2, r3, #1
 1638 024e FB68     		ldr	r3, [r7, #12]
 1639 0250 1A63     		str	r2, [r3, #48]
1330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxXferCount--;
 1640              		.loc 1 1330 13
 1641 0252 FB68     		ldr	r3, [r7, #12]
 1642 0254 DB8E     		ldrh	r3, [r3, #54]	@ movhi
 1643 0256 9BB2     		uxth	r3, r3
 1644              		.loc 1 1330 26
 1645 0258 013B     		subs	r3, r3, #1
 1646 025a 9AB2     		uxth	r2, r3
 1647 025c FB68     		ldr	r3, [r7, #12]
 1648 025e DA86     		strh	r2, [r3, #54]	@ movhi
1331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Next Data is a reception (Rx). Tx not allowed */
1332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         txallowed = 0U;
 1649              		.loc 1 1332 19
 1650 0260 0023     		movs	r3, #0
 1651 0262 7B62     		str	r3, [r7, #36]
 1652              	.L87:
1333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Enable CRC Transmission */
1336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if ((hspi->TxXferCount == 0U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
1337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
1338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
1339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
1340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Wait until RXNE flag is reset */
1344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 1653              		.loc 1 1344 12
 1654 0264 FB68     		ldr	r3, [r7, #12]
 1655 0266 1B68     		ldr	r3, [r3]
 1656 0268 9B68     		ldr	r3, [r3, #8]
 1657 026a 03F00103 		and	r3, r3, #1
 1658              		.loc 1 1344 10
 1659 026e 012B     		cmp	r3, #1
 1660 0270 19D1     		bne	.L88
 1661              		.loc 1 1344 61 discriminator 1
 1662 0272 FB68     		ldr	r3, [r7, #12]
 1663 0274 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1664 0276 9BB2     		uxth	r3, r3
 1665              		.loc 1 1344 53 discriminator 1
 1666 0278 002B     		cmp	r3, #0
 1667 027a 14D0     		beq	.L88
1345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
1346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 1668              		.loc 1 1346 46
 1669 027c FB68     		ldr	r3, [r7, #12]
 1670 027e 1B68     		ldr	r3, [r3]
 1671              		.loc 1 1346 56
 1672 0280 DA68     		ldr	r2, [r3, #12]
 1673              		.loc 1 1346 26
 1674 0282 FB68     		ldr	r3, [r7, #12]
 1675 0284 9B6B     		ldr	r3, [r3, #56]
 1676              		.loc 1 1346 40
ARM GAS  /tmp/ccFW5O3y.s 			page 54


 1677 0286 D2B2     		uxtb	r2, r2
 1678 0288 1A70     		strb	r2, [r3]
1347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->pRxBuffPtr++;
 1679              		.loc 1 1347 13
 1680 028a FB68     		ldr	r3, [r7, #12]
 1681 028c 9B6B     		ldr	r3, [r3, #56]
 1682              		.loc 1 1347 25
 1683 028e 5A1C     		adds	r2, r3, #1
 1684 0290 FB68     		ldr	r3, [r7, #12]
 1685 0292 9A63     		str	r2, [r3, #56]
1348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->RxXferCount--;
 1686              		.loc 1 1348 13
 1687 0294 FB68     		ldr	r3, [r7, #12]
 1688 0296 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1689 0298 9BB2     		uxth	r3, r3
 1690              		.loc 1 1348 26
 1691 029a 013B     		subs	r3, r3, #1
 1692 029c 9AB2     		uxth	r2, r3
 1693 029e FB68     		ldr	r3, [r7, #12]
 1694 02a0 DA87     		strh	r2, [r3, #62]	@ movhi
1349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Next Data is a Transmission (Tx). Tx is allowed */
1350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         txallowed = 1U;
 1695              		.loc 1 1350 19
 1696 02a2 0123     		movs	r3, #1
 1697 02a4 7B62     		str	r3, [r7, #36]
 1698              	.L88:
1351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout =
 1699              		.loc 1 1352 14
 1700 02a6 FFF7FEFF 		bl	HAL_GetTick
 1701 02aa 0246     		mov	r2, r0
 1702              		.loc 1 1352 28 discriminator 1
 1703 02ac 3B6A     		ldr	r3, [r7, #32]
 1704 02ae D31A     		subs	r3, r2, r3
 1705              		.loc 1 1352 10 discriminator 1
 1706 02b0 3A6B     		ldr	r2, [r7, #48]
 1707 02b2 9A42     		cmp	r2, r3
 1708 02b4 03D8     		bhi	.L89
 1709              		.loc 1 1352 54 discriminator 1
 1710 02b6 3B6B     		ldr	r3, [r7, #48]
 1711 02b8 B3F1FF3F 		cmp	r3, #-1
 1712 02bc 02D1     		bne	.L90
 1713              	.L89:
 1714              		.loc 1 1352 87 discriminator 3
 1715 02be 3B6B     		ldr	r3, [r7, #48]
 1716 02c0 002B     		cmp	r3, #0
 1717 02c2 09D1     		bne	.L86
 1718              	.L90:
1353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
1354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
 1719              		.loc 1 1354 21
 1720 02c4 FB68     		ldr	r3, [r7, #12]
 1721 02c6 0122     		movs	r2, #1
 1722 02c8 83F85120 		strb	r2, [r3, #81]
1355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         __HAL_UNLOCK(hspi);
 1723              		.loc 1 1355 9
 1724 02cc FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccFW5O3y.s 			page 55


 1725 02ce 0022     		movs	r2, #0
 1726 02d0 83F85020 		strb	r2, [r3, #80]
1356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         return HAL_TIMEOUT;
 1727              		.loc 1 1356 16
 1728 02d4 0323     		movs	r3, #3
 1729 02d6 38E0     		b	.L69
 1730              	.L86:
1323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 1731              		.loc 1 1323 17
 1732 02d8 FB68     		ldr	r3, [r7, #12]
 1733 02da DB8E     		ldrh	r3, [r3, #54]	@ movhi
 1734 02dc 9BB2     		uxth	r3, r3
1323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 1735              		.loc 1 1323 37
 1736 02de 002B     		cmp	r3, #0
 1737 02e0 9CD1     		bne	.L91
1323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 1738              		.loc 1 1323 45 discriminator 1
 1739 02e2 FB68     		ldr	r3, [r7, #12]
 1740 02e4 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 1741 02e6 9BB2     		uxth	r3, r3
1323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
 1742              		.loc 1 1323 37 discriminator 1
 1743 02e8 002B     		cmp	r3, #0
 1744 02ea 97D1     		bne	.L91
 1745              	.L83:
1357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
1358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Read CRC from DR to close CRC calculation process */
1363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Wait until TXE flag */
1366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, Timeout, tickstart) != HAL_OK)
1367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Error on the CRC reception */
1369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_READY;
1371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_UNLOCK(hspi);
1372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return HAL_TIMEOUT;
1373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Read CRC */
1375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     tmpreg = READ_REG(hspi->Instance->DR);
1376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* To avoid GCC warning */
1377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     UNUSED(tmpreg);
1378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if CRC error occurred */
1381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
1382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check if CRC error is valid or not (workaround to be applied or not) */
1384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_ISCRCErrorValid(hspi) == SPI_VALID_CRC_ERROR)
1385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
1387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
ARM GAS  /tmp/ccFW5O3y.s 			page 56


1388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Reset CRC Calculation */
1389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SPI_RESET_CRC(hspi);
1390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_UNLOCK(hspi);
1391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return HAL_ERROR;
1392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
1394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
1395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
1396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
1397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the end of the transaction */
1401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 1746              		.loc 1 1401 7
 1747 02ec 3A6A     		ldr	r2, [r7, #32]
 1748 02ee 396B     		ldr	r1, [r7, #48]
 1749 02f0 F868     		ldr	r0, [r7, #12]
 1750 02f2 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 1751 02f6 0346     		mov	r3, r0
 1752              		.loc 1 1401 6 discriminator 1
 1753 02f8 002B     		cmp	r3, #0
 1754 02fa 08D0     		beq	.L92
1402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 1755              		.loc 1 1403 21
 1756 02fc FB68     		ldr	r3, [r7, #12]
 1757 02fe 2022     		movs	r2, #32
 1758 0300 5A65     		str	r2, [r3, #84]
1404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
 1759              		.loc 1 1404 5
 1760 0302 FB68     		ldr	r3, [r7, #12]
 1761 0304 0022     		movs	r2, #0
 1762 0306 83F85020 		strb	r2, [r3, #80]
1405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_ERROR;
 1763              		.loc 1 1405 12
 1764 030a 0123     		movs	r3, #1
 1765 030c 1DE0     		b	.L69
 1766              	.L92:
1406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
1409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 1767              		.loc 1 1409 17
 1768 030e FB68     		ldr	r3, [r7, #12]
 1769 0310 9B68     		ldr	r3, [r3, #8]
 1770              		.loc 1 1409 6
 1771 0312 002B     		cmp	r3, #0
 1772 0314 0AD1     		bne	.L93
 1773              	.LBB3:
1410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
 1774              		.loc 1 1411 5
 1775 0316 0023     		movs	r3, #0
 1776 0318 3B61     		str	r3, [r7, #16]
 1777 031a FB68     		ldr	r3, [r7, #12]
 1778 031c 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccFW5O3y.s 			page 57


 1779 031e DB68     		ldr	r3, [r3, #12]
 1780 0320 3B61     		str	r3, [r7, #16]
 1781 0322 FB68     		ldr	r3, [r7, #12]
 1782 0324 1B68     		ldr	r3, [r3]
 1783 0326 9B68     		ldr	r3, [r3, #8]
 1784 0328 3B61     		str	r3, [r7, #16]
 1785 032a 3B69     		ldr	r3, [r7, #16]
 1786              	.L93:
 1787              	.LBE3:
1412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 1788              		.loc 1 1415 15
 1789 032c FB68     		ldr	r3, [r7, #12]
 1790 032e 0122     		movs	r2, #1
 1791 0330 83F85120 		strb	r2, [r3, #81]
1416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Unlock the process */
1417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 1792              		.loc 1 1417 3
 1793 0334 FB68     		ldr	r3, [r7, #12]
 1794 0336 0022     		movs	r2, #0
 1795 0338 83F85020 		strb	r2, [r3, #80]
1418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 1796              		.loc 1 1419 11
 1797 033c FB68     		ldr	r3, [r7, #12]
 1798 033e 5B6D     		ldr	r3, [r3, #84]
 1799              		.loc 1 1419 6
 1800 0340 002B     		cmp	r3, #0
 1801 0342 01D0     		beq	.L94
1420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_ERROR;
 1802              		.loc 1 1421 12
 1803 0344 0123     		movs	r3, #1
 1804 0346 00E0     		b	.L69
 1805              	.L94:
1422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
1424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_OK;
 1806              		.loc 1 1425 12
 1807 0348 0023     		movs	r3, #0
 1808              	.L69:
1426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 1809              		.loc 1 1427 1
 1810 034a 1846     		mov	r0, r3
 1811 034c 2837     		adds	r7, r7, #40
 1812              	.LCFI35:
 1813              		.cfi_def_cfa_offset 8
 1814 034e BD46     		mov	sp, r7
 1815              	.LCFI36:
 1816              		.cfi_def_cfa_register 13
 1817              		@ sp needed
 1818 0350 80BD     		pop	{r7, pc}
 1819              		.cfi_endproc
ARM GAS  /tmp/ccFW5O3y.s 			page 58


 1820              	.LFE71:
 1822              		.section	.text.HAL_SPI_Transmit_IT,"ax",%progbits
 1823              		.align	1
 1824              		.global	HAL_SPI_Transmit_IT
 1825              		.syntax unified
 1826              		.thumb
 1827              		.thumb_func
 1829              	HAL_SPI_Transmit_IT:
 1830              	.LFB72:
1428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
1430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Transmit an amount of data in non-blocking mode with Interrupt.
1431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
1433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pData pointer to data buffer
1434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Size amount of data to be sent
1435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
1436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
1437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit_IT(SPI_HandleTypeDef *hspi, const uint8_t *pData, uint16_t Size)
1438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 1831              		.loc 1 1438 1
 1832              		.cfi_startproc
 1833              		@ args = 0, pretend = 0, frame = 16
 1834              		@ frame_needed = 1, uses_anonymous_args = 0
 1835              		@ link register save eliminated.
 1836 0000 80B4     		push	{r7}
 1837              	.LCFI37:
 1838              		.cfi_def_cfa_offset 4
 1839              		.cfi_offset 7, -4
 1840 0002 85B0     		sub	sp, sp, #20
 1841              	.LCFI38:
 1842              		.cfi_def_cfa_offset 24
 1843 0004 00AF     		add	r7, sp, #0
 1844              	.LCFI39:
 1845              		.cfi_def_cfa_register 7
 1846 0006 F860     		str	r0, [r7, #12]
 1847 0008 B960     		str	r1, [r7, #8]
 1848 000a 1346     		mov	r3, r2
 1849 000c FB80     		strh	r3, [r7, #6]	@ movhi
1439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check Direction parameter */
1441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
1442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
 1850              		.loc 1 1444 6
 1851 000e BB68     		ldr	r3, [r7, #8]
 1852 0010 002B     		cmp	r3, #0
 1853 0012 02D0     		beq	.L96
 1854              		.loc 1 1444 23 discriminator 1
 1855 0014 FB88     		ldrh	r3, [r7, #6]
 1856 0016 002B     		cmp	r3, #0
 1857 0018 01D1     		bne	.L97
 1858              	.L96:
1445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_ERROR;
 1859              		.loc 1 1446 12
ARM GAS  /tmp/ccFW5O3y.s 			page 59


 1860 001a 0123     		movs	r3, #1
 1861 001c 6AE0     		b	.L98
 1862              	.L97:
1447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 1863              		.loc 1 1449 11
 1864 001e FB68     		ldr	r3, [r7, #12]
 1865 0020 93F85130 		ldrb	r3, [r3, #81]
 1866 0024 DBB2     		uxtb	r3, r3
 1867              		.loc 1 1449 6
 1868 0026 012B     		cmp	r3, #1
 1869 0028 01D0     		beq	.L99
1450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_BUSY;
 1870              		.loc 1 1451 12
 1871 002a 0223     		movs	r3, #2
 1872 002c 62E0     		b	.L98
 1873              	.L99:
1452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Locked */
1455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
 1874              		.loc 1 1455 3
 1875 002e FB68     		ldr	r3, [r7, #12]
 1876 0030 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 1877 0034 012B     		cmp	r3, #1
 1878 0036 01D1     		bne	.L100
 1879              		.loc 1 1455 3 is_stmt 0 discriminator 1
 1880 0038 0223     		movs	r3, #2
 1881              		.loc 1 1455 3
 1882 003a 5BE0     		b	.L98
 1883              	.L100:
 1884              		.loc 1 1455 3 discriminator 2
 1885 003c FB68     		ldr	r3, [r7, #12]
 1886 003e 0122     		movs	r2, #1
 1887 0040 83F85020 		strb	r2, [r3, #80]
1456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the transaction information */
1458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
 1888              		.loc 1 1458 21 is_stmt 1
 1889 0044 FB68     		ldr	r3, [r7, #12]
 1890 0046 0322     		movs	r2, #3
 1891 0048 83F85120 		strb	r2, [r3, #81]
1459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 1892              		.loc 1 1459 21
 1893 004c FB68     		ldr	r3, [r7, #12]
 1894 004e 0022     		movs	r2, #0
 1895 0050 5A65     		str	r2, [r3, #84]
1460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (const uint8_t *)pData;
 1896              		.loc 1 1460 21
 1897 0052 FB68     		ldr	r3, [r7, #12]
 1898 0054 BA68     		ldr	r2, [r7, #8]
 1899 0056 1A63     		str	r2, [r3, #48]
1461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 1900              		.loc 1 1461 21
 1901 0058 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccFW5O3y.s 			page 60


 1902 005a FA88     		ldrh	r2, [r7, #6]	@ movhi
 1903 005c 9A86     		strh	r2, [r3, #52]	@ movhi
1462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 1904              		.loc 1 1462 21
 1905 005e FB68     		ldr	r3, [r7, #12]
 1906 0060 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1907 0062 DA86     		strh	r2, [r3, #54]	@ movhi
1463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init field not used in handle to zero */
1465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)NULL;
 1908              		.loc 1 1465 21
 1909 0064 FB68     		ldr	r3, [r7, #12]
 1910 0066 0022     		movs	r2, #0
 1911 0068 9A63     		str	r2, [r3, #56]
1466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 1912              		.loc 1 1466 21
 1913 006a FB68     		ldr	r3, [r7, #12]
 1914 006c 0022     		movs	r2, #0
 1915 006e 9A87     		strh	r2, [r3, #60]	@ movhi
1467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 1916              		.loc 1 1467 21
 1917 0070 FB68     		ldr	r3, [r7, #12]
 1918 0072 0022     		movs	r2, #0
 1919 0074 DA87     		strh	r2, [r3, #62]	@ movhi
1468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxISR       = NULL;
 1920              		.loc 1 1468 21
 1921 0076 FB68     		ldr	r3, [r7, #12]
 1922 0078 0022     		movs	r2, #0
 1923 007a 1A64     		str	r2, [r3, #64]
1469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the function for IT treatment */
1471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 1924              		.loc 1 1471 17
 1925 007c FB68     		ldr	r3, [r7, #12]
 1926 007e DB68     		ldr	r3, [r3, #12]
 1927              		.loc 1 1471 6
 1928 0080 002B     		cmp	r3, #0
 1929 0082 03D0     		beq	.L101
1472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxISR = SPI_TxISR_16BIT;
 1930              		.loc 1 1473 17
 1931 0084 FB68     		ldr	r3, [r7, #12]
 1932 0086 1E4A     		ldr	r2, .L105
 1933 0088 5A64     		str	r2, [r3, #68]
 1934 008a 02E0     		b	.L102
 1935              	.L101:
1474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
1476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxISR = SPI_TxISR_8BIT;
 1936              		.loc 1 1477 17
 1937 008c FB68     		ldr	r3, [r7, #12]
 1938 008e 1D4A     		ldr	r2, .L105+4
 1939 0090 5A64     		str	r2, [r3, #68]
 1940              	.L102:
1478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
ARM GAS  /tmp/ccFW5O3y.s 			page 61


1480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 1941              		.loc 1 1481 17
 1942 0092 FB68     		ldr	r3, [r7, #12]
 1943 0094 9B68     		ldr	r3, [r3, #8]
 1944              		.loc 1 1481 6
 1945 0096 B3F5004F 		cmp	r3, #32768
 1946 009a 0FD1     		bne	.L103
1482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
1484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE(hspi);
 1947              		.loc 1 1484 5
 1948 009c FB68     		ldr	r3, [r7, #12]
 1949 009e 1B68     		ldr	r3, [r3]
 1950 00a0 1A68     		ldr	r2, [r3]
 1951 00a2 FB68     		ldr	r3, [r7, #12]
 1952 00a4 1B68     		ldr	r3, [r3]
 1953 00a6 22F04002 		bic	r2, r2, #64
 1954 00aa 1A60     		str	r2, [r3]
1485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
 1955              		.loc 1 1485 5
 1956 00ac FB68     		ldr	r3, [r7, #12]
 1957 00ae 1B68     		ldr	r3, [r3]
 1958 00b0 1A68     		ldr	r2, [r3]
 1959 00b2 FB68     		ldr	r3, [r7, #12]
 1960 00b4 1B68     		ldr	r3, [r3]
 1961 00b6 42F48042 		orr	r2, r2, #16384
 1962 00ba 1A60     		str	r2, [r3]
 1963              	.L103:
1486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset CRC Calculation */
1490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 1964              		.loc 1 1497 12
 1965 00bc FB68     		ldr	r3, [r7, #12]
 1966 00be 1B68     		ldr	r3, [r3]
 1967              		.loc 1 1497 22
 1968 00c0 1B68     		ldr	r3, [r3]
 1969              		.loc 1 1497 28
 1970 00c2 03F04003 		and	r3, r3, #64
 1971              		.loc 1 1497 6
 1972 00c6 402B     		cmp	r3, #64
 1973 00c8 07D0     		beq	.L104
1498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Enable SPI peripheral */
1500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 1974              		.loc 1 1500 5
 1975 00ca FB68     		ldr	r3, [r7, #12]
 1976 00cc 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccFW5O3y.s 			page 62


 1977 00ce 1A68     		ldr	r2, [r3]
 1978 00d0 FB68     		ldr	r3, [r7, #12]
 1979 00d2 1B68     		ldr	r3, [r3]
 1980 00d4 42F04002 		orr	r2, r2, #64
 1981 00d8 1A60     		str	r2, [r3]
 1982              	.L104:
1501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Unlocked */
1504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 1983              		.loc 1 1504 3
 1984 00da FB68     		ldr	r3, [r7, #12]
 1985 00dc 0022     		movs	r2, #0
 1986 00de 83F85020 		strb	r2, [r3, #80]
1505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable TXE and ERR interrupt */
1506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_ERR));
 1987              		.loc 1 1506 3
 1988 00e2 FB68     		ldr	r3, [r7, #12]
 1989 00e4 1B68     		ldr	r3, [r3]
 1990 00e6 5A68     		ldr	r2, [r3, #4]
 1991 00e8 FB68     		ldr	r3, [r7, #12]
 1992 00ea 1B68     		ldr	r3, [r3]
 1993 00ec 42F0A002 		orr	r2, r2, #160
 1994 00f0 5A60     		str	r2, [r3, #4]
1507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return HAL_OK;
 1995              		.loc 1 1508 10
 1996 00f2 0023     		movs	r3, #0
 1997              	.L98:
1509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 1998              		.loc 1 1509 1
 1999 00f4 1846     		mov	r0, r3
 2000 00f6 1437     		adds	r7, r7, #20
 2001              	.LCFI40:
 2002              		.cfi_def_cfa_offset 4
 2003 00f8 BD46     		mov	sp, r7
 2004              	.LCFI41:
 2005              		.cfi_def_cfa_register 13
 2006              		@ sp needed
 2007 00fa 80BC     		pop	{r7}
 2008              	.LCFI42:
 2009              		.cfi_restore 7
 2010              		.cfi_def_cfa_offset 0
 2011 00fc 7047     		bx	lr
 2012              	.L106:
 2013 00fe 00BF     		.align	2
 2014              	.L105:
 2015 0100 00000000 		.word	SPI_TxISR_16BIT
 2016 0104 00000000 		.word	SPI_TxISR_8BIT
 2017              		.cfi_endproc
 2018              	.LFE72:
 2020              		.section	.text.HAL_SPI_Receive_IT,"ax",%progbits
 2021              		.align	1
 2022              		.global	HAL_SPI_Receive_IT
 2023              		.syntax unified
 2024              		.thumb
 2025              		.thumb_func
ARM GAS  /tmp/ccFW5O3y.s 			page 63


 2027              	HAL_SPI_Receive_IT:
 2028              	.LFB73:
1510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
1512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Receive an amount of data in non-blocking mode with Interrupt.
1513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
1515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pData pointer to data buffer
1516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Size amount of data to be sent
1517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
1518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
1519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive_IT(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 2029              		.loc 1 1520 1
 2030              		.cfi_startproc
 2031              		@ args = 0, pretend = 0, frame = 16
 2032              		@ frame_needed = 1, uses_anonymous_args = 0
 2033 0000 80B5     		push	{r7, lr}
 2034              	.LCFI43:
 2035              		.cfi_def_cfa_offset 8
 2036              		.cfi_offset 7, -8
 2037              		.cfi_offset 14, -4
 2038 0002 84B0     		sub	sp, sp, #16
 2039              	.LCFI44:
 2040              		.cfi_def_cfa_offset 24
 2041 0004 00AF     		add	r7, sp, #0
 2042              	.LCFI45:
 2043              		.cfi_def_cfa_register 7
 2044 0006 F860     		str	r0, [r7, #12]
 2045 0008 B960     		str	r1, [r7, #8]
 2046 000a 1346     		mov	r3, r2
 2047 000c FB80     		strh	r3, [r7, #6]	@ movhi
1521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 2048              		.loc 1 1522 11
 2049 000e FB68     		ldr	r3, [r7, #12]
 2050 0010 93F85130 		ldrb	r3, [r3, #81]
 2051 0014 DBB2     		uxtb	r3, r3
 2052              		.loc 1 1522 6
 2053 0016 012B     		cmp	r3, #1
 2054 0018 01D0     		beq	.L108
1523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_BUSY;
 2055              		.loc 1 1524 12
 2056 001a 0223     		movs	r3, #2
 2057 001c 7FE0     		b	.L109
 2058              	.L108:
1525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hspi->Init.Mode == SPI_MODE_MASTER))
 2059              		.loc 1 1527 18
 2060 001e FB68     		ldr	r3, [r7, #12]
 2061 0020 9B68     		ldr	r3, [r3, #8]
 2062              		.loc 1 1527 6
 2063 0022 002B     		cmp	r3, #0
 2064 0024 10D1     		bne	.L110
 2065              		.loc 1 1527 68 discriminator 1
ARM GAS  /tmp/ccFW5O3y.s 			page 64


 2066 0026 FB68     		ldr	r3, [r7, #12]
 2067 0028 5B68     		ldr	r3, [r3, #4]
 2068              		.loc 1 1527 54 discriminator 1
 2069 002a B3F5827F 		cmp	r3, #260
 2070 002e 0BD1     		bne	.L110
1528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
 2071              		.loc 1 1529 17
 2072 0030 FB68     		ldr	r3, [r7, #12]
 2073 0032 0422     		movs	r2, #4
 2074 0034 83F85120 		strb	r2, [r3, #81]
1530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
1531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_SPI_TransmitReceive_IT(hspi, pData, pData, Size);
 2075              		.loc 1 1531 12
 2076 0038 FB88     		ldrh	r3, [r7, #6]
 2077 003a BA68     		ldr	r2, [r7, #8]
 2078 003c B968     		ldr	r1, [r7, #8]
 2079 003e F868     		ldr	r0, [r7, #12]
 2080 0040 FFF7FEFF 		bl	HAL_SPI_TransmitReceive_IT
 2081 0044 0346     		mov	r3, r0
 2082 0046 6AE0     		b	.L109
 2083              	.L110:
1532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
 2084              		.loc 1 1535 6
 2085 0048 BB68     		ldr	r3, [r7, #8]
 2086 004a 002B     		cmp	r3, #0
 2087 004c 02D0     		beq	.L111
 2088              		.loc 1 1535 23 discriminator 1
 2089 004e FB88     		ldrh	r3, [r7, #6]
 2090 0050 002B     		cmp	r3, #0
 2091 0052 01D1     		bne	.L112
 2092              	.L111:
1536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_ERROR;
 2093              		.loc 1 1537 12
 2094 0054 0123     		movs	r3, #1
 2095 0056 62E0     		b	.L109
 2096              	.L112:
1538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Locked */
1541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
 2097              		.loc 1 1541 3
 2098 0058 FB68     		ldr	r3, [r7, #12]
 2099 005a 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 2100 005e 012B     		cmp	r3, #1
 2101 0060 01D1     		bne	.L113
 2102              		.loc 1 1541 3 is_stmt 0 discriminator 1
 2103 0062 0223     		movs	r3, #2
 2104              		.loc 1 1541 3
 2105 0064 5BE0     		b	.L109
 2106              	.L113:
 2107              		.loc 1 1541 3 discriminator 2
 2108 0066 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccFW5O3y.s 			page 65


 2109 0068 0122     		movs	r2, #1
 2110 006a 83F85020 		strb	r2, [r3, #80]
1542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the transaction information */
1544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
 2111              		.loc 1 1544 21 is_stmt 1
 2112 006e FB68     		ldr	r3, [r7, #12]
 2113 0070 0422     		movs	r2, #4
 2114 0072 83F85120 		strb	r2, [r3, #81]
1545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2115              		.loc 1 1545 21
 2116 0076 FB68     		ldr	r3, [r7, #12]
 2117 0078 0022     		movs	r2, #0
 2118 007a 5A65     		str	r2, [r3, #84]
1546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 2119              		.loc 1 1546 21
 2120 007c FB68     		ldr	r3, [r7, #12]
 2121 007e BA68     		ldr	r2, [r7, #8]
 2122 0080 9A63     		str	r2, [r3, #56]
1547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 2123              		.loc 1 1547 21
 2124 0082 FB68     		ldr	r3, [r7, #12]
 2125 0084 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2126 0086 9A87     		strh	r2, [r3, #60]	@ movhi
1548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2127              		.loc 1 1548 21
 2128 0088 FB68     		ldr	r3, [r7, #12]
 2129 008a FA88     		ldrh	r2, [r7, #6]	@ movhi
 2130 008c DA87     		strh	r2, [r3, #62]	@ movhi
1549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init field not used in handle to zero */
1551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (uint8_t *)NULL;
 2131              		.loc 1 1551 21
 2132 008e FB68     		ldr	r3, [r7, #12]
 2133 0090 0022     		movs	r2, #0
 2134 0092 1A63     		str	r2, [r3, #48]
1552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 2135              		.loc 1 1552 21
 2136 0094 FB68     		ldr	r3, [r7, #12]
 2137 0096 0022     		movs	r2, #0
 2138 0098 9A86     		strh	r2, [r3, #52]	@ movhi
1553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 2139              		.loc 1 1553 21
 2140 009a FB68     		ldr	r3, [r7, #12]
 2141 009c 0022     		movs	r2, #0
 2142 009e DA86     		strh	r2, [r3, #54]	@ movhi
1554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2143              		.loc 1 1554 21
 2144 00a0 FB68     		ldr	r3, [r7, #12]
 2145 00a2 0022     		movs	r2, #0
 2146 00a4 5A64     		str	r2, [r3, #68]
1555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the function for IT treatment */
1557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 2147              		.loc 1 1557 17
 2148 00a6 FB68     		ldr	r3, [r7, #12]
 2149 00a8 DB68     		ldr	r3, [r3, #12]
ARM GAS  /tmp/ccFW5O3y.s 			page 66


 2150              		.loc 1 1557 6
 2151 00aa 002B     		cmp	r3, #0
 2152 00ac 03D0     		beq	.L114
1558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_16BIT;
 2153              		.loc 1 1559 17
 2154 00ae FB68     		ldr	r3, [r7, #12]
 2155 00b0 1D4A     		ldr	r2, .L118
 2156 00b2 1A64     		str	r2, [r3, #64]
 2157 00b4 02E0     		b	.L115
 2158              	.L114:
1560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
1562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxISR = SPI_RxISR_8BIT;
 2159              		.loc 1 1563 17
 2160 00b6 FB68     		ldr	r3, [r7, #12]
 2161 00b8 1C4A     		ldr	r2, .L118+4
 2162 00ba 1A64     		str	r2, [r3, #64]
 2163              	.L115:
1564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 2164              		.loc 1 1567 17
 2165 00bc FB68     		ldr	r3, [r7, #12]
 2166 00be 9B68     		ldr	r3, [r3, #8]
 2167              		.loc 1 1567 6
 2168 00c0 B3F5004F 		cmp	r3, #32768
 2169 00c4 0FD1     		bne	.L116
1568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
1570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE(hspi);
 2170              		.loc 1 1570 5
 2171 00c6 FB68     		ldr	r3, [r7, #12]
 2172 00c8 1B68     		ldr	r3, [r3]
 2173 00ca 1A68     		ldr	r2, [r3]
 2174 00cc FB68     		ldr	r3, [r7, #12]
 2175 00ce 1B68     		ldr	r3, [r3]
 2176 00d0 22F04002 		bic	r2, r2, #64
 2177 00d4 1A60     		str	r2, [r3]
1571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
 2178              		.loc 1 1571 5
 2179 00d6 FB68     		ldr	r3, [r7, #12]
 2180 00d8 1B68     		ldr	r3, [r3]
 2181 00da 1A68     		ldr	r2, [r3]
 2182 00dc FB68     		ldr	r3, [r7, #12]
 2183 00de 1B68     		ldr	r3, [r3]
 2184 00e0 22F48042 		bic	r2, r2, #16384
 2185 00e4 1A60     		str	r2, [r3]
 2186              	.L116:
1572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset CRC Calculation */
1576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
ARM GAS  /tmp/ccFW5O3y.s 			page 67


1578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Note : The SPI must be enabled after unlocking current process
1583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             to avoid the risk of SPI interrupt handle execution before current
1584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             process unlock */
1585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 2187              		.loc 1 1587 12
 2188 00e6 FB68     		ldr	r3, [r7, #12]
 2189 00e8 1B68     		ldr	r3, [r3]
 2190              		.loc 1 1587 22
 2191 00ea 1B68     		ldr	r3, [r3]
 2192              		.loc 1 1587 28
 2193 00ec 03F04003 		and	r3, r3, #64
 2194              		.loc 1 1587 6
 2195 00f0 402B     		cmp	r3, #64
 2196 00f2 07D0     		beq	.L117
1588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Enable SPI peripheral */
1590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 2197              		.loc 1 1590 5
 2198 00f4 FB68     		ldr	r3, [r7, #12]
 2199 00f6 1B68     		ldr	r3, [r3]
 2200 00f8 1A68     		ldr	r2, [r3]
 2201 00fa FB68     		ldr	r3, [r7, #12]
 2202 00fc 1B68     		ldr	r3, [r3]
 2203 00fe 42F04002 		orr	r2, r2, #64
 2204 0102 1A60     		str	r2, [r3]
 2205              	.L117:
1591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Unlocked */
1594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 2206              		.loc 1 1594 3
 2207 0104 FB68     		ldr	r3, [r7, #12]
 2208 0106 0022     		movs	r2, #0
 2209 0108 83F85020 		strb	r2, [r3, #80]
1595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable RXNE and ERR interrupt */
1596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
 2210              		.loc 1 1596 3
 2211 010c FB68     		ldr	r3, [r7, #12]
 2212 010e 1B68     		ldr	r3, [r3]
 2213 0110 5A68     		ldr	r2, [r3, #4]
 2214 0112 FB68     		ldr	r3, [r7, #12]
 2215 0114 1B68     		ldr	r3, [r3]
 2216 0116 42F06002 		orr	r2, r2, #96
 2217 011a 5A60     		str	r2, [r3, #4]
1597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return HAL_OK;
 2218              		.loc 1 1598 10
 2219 011c 0023     		movs	r3, #0
 2220              	.L109:
1599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 2221              		.loc 1 1599 1
ARM GAS  /tmp/ccFW5O3y.s 			page 68


 2222 011e 1846     		mov	r0, r3
 2223 0120 1037     		adds	r7, r7, #16
 2224              	.LCFI46:
 2225              		.cfi_def_cfa_offset 8
 2226 0122 BD46     		mov	sp, r7
 2227              	.LCFI47:
 2228              		.cfi_def_cfa_register 13
 2229              		@ sp needed
 2230 0124 80BD     		pop	{r7, pc}
 2231              	.L119:
 2232 0126 00BF     		.align	2
 2233              	.L118:
 2234 0128 00000000 		.word	SPI_RxISR_16BIT
 2235 012c 00000000 		.word	SPI_RxISR_8BIT
 2236              		.cfi_endproc
 2237              	.LFE73:
 2239              		.section	.text.HAL_SPI_TransmitReceive_IT,"ax",%progbits
 2240              		.align	1
 2241              		.global	HAL_SPI_TransmitReceive_IT
 2242              		.syntax unified
 2243              		.thumb
 2244              		.thumb_func
 2246              	HAL_SPI_TransmitReceive_IT:
 2247              	.LFB74:
1600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
1602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in non-blocking mode with Interrupt.
1603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
1605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pTxData pointer to transmission data buffer
1606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pRxData pointer to reception data buffer
1607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Size amount of data to be sent and received
1608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
1609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
1610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive_IT(SPI_HandleTypeDef *hspi, const uint8_t *pTxData, uint8
1611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                              uint16_t Size)
1612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 2248              		.loc 1 1612 1
 2249              		.cfi_startproc
 2250              		@ args = 0, pretend = 0, frame = 24
 2251              		@ frame_needed = 1, uses_anonymous_args = 0
 2252              		@ link register save eliminated.
 2253 0000 80B4     		push	{r7}
 2254              	.LCFI48:
 2255              		.cfi_def_cfa_offset 4
 2256              		.cfi_offset 7, -4
 2257 0002 87B0     		sub	sp, sp, #28
 2258              	.LCFI49:
 2259              		.cfi_def_cfa_offset 32
 2260 0004 00AF     		add	r7, sp, #0
 2261              	.LCFI50:
 2262              		.cfi_def_cfa_register 7
 2263 0006 F860     		str	r0, [r7, #12]
 2264 0008 B960     		str	r1, [r7, #8]
 2265 000a 7A60     		str	r2, [r7, #4]
 2266 000c 7B80     		strh	r3, [r7, #2]	@ movhi
1613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t             tmp_mode;
ARM GAS  /tmp/ccFW5O3y.s 			page 69


1614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_StateTypeDef tmp_state;
1615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check Direction parameter */
1617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
1618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init temporary variables */
1620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmp_state           = hspi->State;
 2267              		.loc 1 1620 23
 2268 000e FB68     		ldr	r3, [r7, #12]
 2269 0010 93F85130 		ldrb	r3, [r3, #81]
 2270 0014 FB75     		strb	r3, [r7, #23]
1621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
 2271              		.loc 1 1621 23
 2272 0016 FB68     		ldr	r3, [r7, #12]
 2273 0018 5B68     		ldr	r3, [r3, #4]
 2274 001a 3B61     		str	r3, [r7, #16]
1622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (!((tmp_state == HAL_SPI_STATE_READY) || \
 2275              		.loc 1 1623 6
 2276 001c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2277 001e 012B     		cmp	r3, #1
 2278 0020 0CD0     		beq	.L121
 2279              		.loc 1 1623 7 discriminator 1
 2280 0022 3B69     		ldr	r3, [r7, #16]
 2281 0024 B3F5827F 		cmp	r3, #260
 2282 0028 06D1     		bne	.L122
1624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) &&
 2283              		.loc 1 1624 54
 2284 002a FB68     		ldr	r3, [r7, #12]
 2285 002c 9B68     		ldr	r3, [r3, #8]
 2286              		.loc 1 1624 40
 2287 002e 002B     		cmp	r3, #0
 2288 0030 02D1     		bne	.L122
 2289              		.loc 1 1624 90 discriminator 1
 2290 0032 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2291 0034 042B     		cmp	r3, #4
 2292 0036 01D0     		beq	.L121
 2293              	.L122:
1625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****          (tmp_state == HAL_SPI_STATE_BUSY_RX))))
1626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_BUSY;
 2294              		.loc 1 1627 12
 2295 0038 0223     		movs	r3, #2
 2296 003a 61E0     		b	.L123
 2297              	.L121:
1628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 2298              		.loc 1 1630 6
 2299 003c BB68     		ldr	r3, [r7, #8]
 2300 003e 002B     		cmp	r3, #0
 2301 0040 05D0     		beq	.L124
 2302              		.loc 1 1630 25 discriminator 1
 2303 0042 7B68     		ldr	r3, [r7, #4]
 2304 0044 002B     		cmp	r3, #0
 2305 0046 02D0     		beq	.L124
 2306              		.loc 1 1630 46 discriminator 2
ARM GAS  /tmp/ccFW5O3y.s 			page 70


 2307 0048 7B88     		ldrh	r3, [r7, #2]
 2308 004a 002B     		cmp	r3, #0
 2309 004c 01D1     		bne	.L125
 2310              	.L124:
1631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_ERROR;
 2311              		.loc 1 1632 12
 2312 004e 0123     		movs	r3, #1
 2313 0050 56E0     		b	.L123
 2314              	.L125:
1633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process locked */
1636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
 2315              		.loc 1 1636 3
 2316 0052 FB68     		ldr	r3, [r7, #12]
 2317 0054 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 2318 0058 012B     		cmp	r3, #1
 2319 005a 01D1     		bne	.L126
 2320              		.loc 1 1636 3 is_stmt 0 discriminator 1
 2321 005c 0223     		movs	r3, #2
 2322              		.loc 1 1636 3
 2323 005e 4FE0     		b	.L123
 2324              	.L126:
 2325              		.loc 1 1636 3 discriminator 2
 2326 0060 FB68     		ldr	r3, [r7, #12]
 2327 0062 0122     		movs	r2, #1
 2328 0064 83F85020 		strb	r2, [r3, #80]
1637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
1639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 2329              		.loc 1 1639 11 is_stmt 1
 2330 0068 FB68     		ldr	r3, [r7, #12]
 2331 006a 93F85130 		ldrb	r3, [r3, #81]
 2332 006e DBB2     		uxtb	r3, r3
 2333              		.loc 1 1639 6
 2334 0070 042B     		cmp	r3, #4
 2335 0072 03D0     		beq	.L127
1640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 2336              		.loc 1 1641 17
 2337 0074 FB68     		ldr	r3, [r7, #12]
 2338 0076 0522     		movs	r2, #5
 2339 0078 83F85120 		strb	r2, [r3, #81]
 2340              	.L127:
1642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the transaction information */
1645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2341              		.loc 1 1645 21
 2342 007c FB68     		ldr	r3, [r7, #12]
 2343 007e 0022     		movs	r2, #0
 2344 0080 5A65     		str	r2, [r3, #84]
1646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (const uint8_t *)pTxData;
 2345              		.loc 1 1646 21
 2346 0082 FB68     		ldr	r3, [r7, #12]
 2347 0084 BA68     		ldr	r2, [r7, #8]
ARM GAS  /tmp/ccFW5O3y.s 			page 71


 2348 0086 1A63     		str	r2, [r3, #48]
1647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 2349              		.loc 1 1647 21
 2350 0088 FB68     		ldr	r3, [r7, #12]
 2351 008a 7A88     		ldrh	r2, [r7, #2]	@ movhi
 2352 008c 9A86     		strh	r2, [r3, #52]	@ movhi
1648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 2353              		.loc 1 1648 21
 2354 008e FB68     		ldr	r3, [r7, #12]
 2355 0090 7A88     		ldrh	r2, [r7, #2]	@ movhi
 2356 0092 DA86     		strh	r2, [r3, #54]	@ movhi
1649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 2357              		.loc 1 1649 21
 2358 0094 FB68     		ldr	r3, [r7, #12]
 2359 0096 7A68     		ldr	r2, [r7, #4]
 2360 0098 9A63     		str	r2, [r3, #56]
1650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 2361              		.loc 1 1650 21
 2362 009a FB68     		ldr	r3, [r7, #12]
 2363 009c 7A88     		ldrh	r2, [r7, #2]	@ movhi
 2364 009e 9A87     		strh	r2, [r3, #60]	@ movhi
1651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2365              		.loc 1 1651 21
 2366 00a0 FB68     		ldr	r3, [r7, #12]
 2367 00a2 7A88     		ldrh	r2, [r7, #2]	@ movhi
 2368 00a4 DA87     		strh	r2, [r3, #62]	@ movhi
1652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the function for IT treatment */
1654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 2369              		.loc 1 1654 17
 2370 00a6 FB68     		ldr	r3, [r7, #12]
 2371 00a8 DB68     		ldr	r3, [r3, #12]
 2372              		.loc 1 1654 6
 2373 00aa 002B     		cmp	r3, #0
 2374 00ac 06D0     		beq	.L128
1655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxISR     = SPI_2linesRxISR_16BIT;
 2375              		.loc 1 1656 21
 2376 00ae FB68     		ldr	r3, [r7, #12]
 2377 00b0 164A     		ldr	r2, .L131
 2378 00b2 1A64     		str	r2, [r3, #64]
1657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_16BIT;
 2379              		.loc 1 1657 21
 2380 00b4 FB68     		ldr	r3, [r7, #12]
 2381 00b6 164A     		ldr	r2, .L131+4
 2382 00b8 5A64     		str	r2, [r3, #68]
 2383 00ba 05E0     		b	.L129
 2384              	.L128:
1658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
1660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxISR     = SPI_2linesRxISR_8BIT;
 2385              		.loc 1 1661 21
 2386 00bc FB68     		ldr	r3, [r7, #12]
 2387 00be 154A     		ldr	r2, .L131+8
 2388 00c0 1A64     		str	r2, [r3, #64]
1662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxISR     = SPI_2linesTxISR_8BIT;
ARM GAS  /tmp/ccFW5O3y.s 			page 72


 2389              		.loc 1 1662 21
 2390 00c2 FB68     		ldr	r3, [r7, #12]
 2391 00c4 144A     		ldr	r2, .L131+12
 2392 00c6 5A64     		str	r2, [r3, #68]
 2393              	.L129:
1663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset CRC Calculation */
1667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 2394              		.loc 1 1675 12
 2395 00c8 FB68     		ldr	r3, [r7, #12]
 2396 00ca 1B68     		ldr	r3, [r3]
 2397              		.loc 1 1675 22
 2398 00cc 1B68     		ldr	r3, [r3]
 2399              		.loc 1 1675 28
 2400 00ce 03F04003 		and	r3, r3, #64
 2401              		.loc 1 1675 6
 2402 00d2 402B     		cmp	r3, #64
 2403 00d4 07D0     		beq	.L130
1676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Enable SPI peripheral */
1678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 2404              		.loc 1 1678 5
 2405 00d6 FB68     		ldr	r3, [r7, #12]
 2406 00d8 1B68     		ldr	r3, [r3]
 2407 00da 1A68     		ldr	r2, [r3]
 2408 00dc FB68     		ldr	r3, [r7, #12]
 2409 00de 1B68     		ldr	r3, [r3]
 2410 00e0 42F04002 		orr	r2, r2, #64
 2411 00e4 1A60     		str	r2, [r3]
 2412              	.L130:
1679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Unlocked */
1682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 2413              		.loc 1 1682 3
 2414 00e6 FB68     		ldr	r3, [r7, #12]
 2415 00e8 0022     		movs	r2, #0
 2416 00ea 83F85020 		strb	r2, [r3, #80]
1683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable TXE, RXNE and ERR interrupt */
1684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 2417              		.loc 1 1684 3
 2418 00ee FB68     		ldr	r3, [r7, #12]
 2419 00f0 1B68     		ldr	r3, [r3]
 2420 00f2 5A68     		ldr	r2, [r3, #4]
 2421 00f4 FB68     		ldr	r3, [r7, #12]
 2422 00f6 1B68     		ldr	r3, [r3]
 2423 00f8 42F0E002 		orr	r2, r2, #224
ARM GAS  /tmp/ccFW5O3y.s 			page 73


 2424 00fc 5A60     		str	r2, [r3, #4]
1685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return HAL_OK;
 2425              		.loc 1 1686 10
 2426 00fe 0023     		movs	r3, #0
 2427              	.L123:
1687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 2428              		.loc 1 1687 1
 2429 0100 1846     		mov	r0, r3
 2430 0102 1C37     		adds	r7, r7, #28
 2431              	.LCFI51:
 2432              		.cfi_def_cfa_offset 4
 2433 0104 BD46     		mov	sp, r7
 2434              	.LCFI52:
 2435              		.cfi_def_cfa_register 13
 2436              		@ sp needed
 2437 0106 80BC     		pop	{r7}
 2438              	.LCFI53:
 2439              		.cfi_restore 7
 2440              		.cfi_def_cfa_offset 0
 2441 0108 7047     		bx	lr
 2442              	.L132:
 2443 010a 00BF     		.align	2
 2444              	.L131:
 2445 010c 00000000 		.word	SPI_2linesRxISR_16BIT
 2446 0110 00000000 		.word	SPI_2linesTxISR_16BIT
 2447 0114 00000000 		.word	SPI_2linesRxISR_8BIT
 2448 0118 00000000 		.word	SPI_2linesTxISR_8BIT
 2449              		.cfi_endproc
 2450              	.LFE74:
 2452              		.section	.text.HAL_SPI_Transmit_DMA,"ax",%progbits
 2453              		.align	1
 2454              		.global	HAL_SPI_Transmit_DMA
 2455              		.syntax unified
 2456              		.thumb
 2457              		.thumb_func
 2459              	HAL_SPI_Transmit_DMA:
 2460              	.LFB75:
1688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
1690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Transmit an amount of data in non-blocking mode with DMA.
1691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
1693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pData pointer to data buffer
1694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Size amount of data to be sent
1695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
1696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
1697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Transmit_DMA(SPI_HandleTypeDef *hspi, const uint8_t *pData, uint16_t Size
1698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 2461              		.loc 1 1698 1
 2462              		.cfi_startproc
 2463              		@ args = 0, pretend = 0, frame = 16
 2464              		@ frame_needed = 1, uses_anonymous_args = 0
 2465 0000 80B5     		push	{r7, lr}
 2466              	.LCFI54:
 2467              		.cfi_def_cfa_offset 8
 2468              		.cfi_offset 7, -8
ARM GAS  /tmp/ccFW5O3y.s 			page 74


 2469              		.cfi_offset 14, -4
 2470 0002 84B0     		sub	sp, sp, #16
 2471              	.LCFI55:
 2472              		.cfi_def_cfa_offset 24
 2473 0004 00AF     		add	r7, sp, #0
 2474              	.LCFI56:
 2475              		.cfi_def_cfa_register 7
 2476 0006 F860     		str	r0, [r7, #12]
 2477 0008 B960     		str	r1, [r7, #8]
 2478 000a 1346     		mov	r3, r2
 2479 000c FB80     		strh	r3, [r7, #6]	@ movhi
1699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check tx dma handle */
1701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmatx));
1702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check Direction parameter */
1704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));
1705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 2480              		.loc 1 1706 11
 2481 000e FB68     		ldr	r3, [r7, #12]
 2482 0010 93F85130 		ldrb	r3, [r3, #81]
 2483 0014 DBB2     		uxtb	r3, r3
 2484              		.loc 1 1706 6
 2485 0016 012B     		cmp	r3, #1
 2486 0018 01D0     		beq	.L134
1707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_BUSY;
 2487              		.loc 1 1708 12
 2488 001a 0223     		movs	r3, #2
 2489 001c 97E0     		b	.L135
 2490              	.L134:
1709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
 2491              		.loc 1 1711 6
 2492 001e BB68     		ldr	r3, [r7, #8]
 2493 0020 002B     		cmp	r3, #0
 2494 0022 02D0     		beq	.L136
 2495              		.loc 1 1711 23 discriminator 1
 2496 0024 FB88     		ldrh	r3, [r7, #6]
 2497 0026 002B     		cmp	r3, #0
 2498 0028 01D1     		bne	.L137
 2499              	.L136:
1712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_ERROR;
 2500              		.loc 1 1713 12
 2501 002a 0123     		movs	r3, #1
 2502 002c 8FE0     		b	.L135
 2503              	.L137:
1714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Locked */
1717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
 2504              		.loc 1 1717 3
 2505 002e FB68     		ldr	r3, [r7, #12]
 2506 0030 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
ARM GAS  /tmp/ccFW5O3y.s 			page 75


 2507 0034 012B     		cmp	r3, #1
 2508 0036 01D1     		bne	.L138
 2509              		.loc 1 1717 3 is_stmt 0 discriminator 1
 2510 0038 0223     		movs	r3, #2
 2511              		.loc 1 1717 3
 2512 003a 88E0     		b	.L135
 2513              	.L138:
 2514              		.loc 1 1717 3 discriminator 2
 2515 003c FB68     		ldr	r3, [r7, #12]
 2516 003e 0122     		movs	r2, #1
 2517 0040 83F85020 		strb	r2, [r3, #80]
1718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the transaction information */
1720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_TX;
 2518              		.loc 1 1720 21 is_stmt 1
 2519 0044 FB68     		ldr	r3, [r7, #12]
 2520 0046 0322     		movs	r2, #3
 2521 0048 83F85120 		strb	r2, [r3, #81]
1721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2522              		.loc 1 1721 21
 2523 004c FB68     		ldr	r3, [r7, #12]
 2524 004e 0022     		movs	r2, #0
 2525 0050 5A65     		str	r2, [r3, #84]
1722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (const uint8_t *)pData;
 2526              		.loc 1 1722 21
 2527 0052 FB68     		ldr	r3, [r7, #12]
 2528 0054 BA68     		ldr	r2, [r7, #8]
 2529 0056 1A63     		str	r2, [r3, #48]
1723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 2530              		.loc 1 1723 21
 2531 0058 FB68     		ldr	r3, [r7, #12]
 2532 005a FA88     		ldrh	r2, [r7, #6]	@ movhi
 2533 005c 9A86     		strh	r2, [r3, #52]	@ movhi
1724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 2534              		.loc 1 1724 21
 2535 005e FB68     		ldr	r3, [r7, #12]
 2536 0060 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2537 0062 DA86     		strh	r2, [r3, #54]	@ movhi
1725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init field not used in handle to zero */
1727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)NULL;
 2538              		.loc 1 1727 21
 2539 0064 FB68     		ldr	r3, [r7, #12]
 2540 0066 0022     		movs	r2, #0
 2541 0068 9A63     		str	r2, [r3, #56]
1728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2542              		.loc 1 1728 21
 2543 006a FB68     		ldr	r3, [r7, #12]
 2544 006c 0022     		movs	r2, #0
 2545 006e 5A64     		str	r2, [r3, #68]
1729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxISR       = NULL;
 2546              		.loc 1 1729 21
 2547 0070 FB68     		ldr	r3, [r7, #12]
 2548 0072 0022     		movs	r2, #0
 2549 0074 1A64     		str	r2, [r3, #64]
1730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = 0U;
 2550              		.loc 1 1730 21
ARM GAS  /tmp/ccFW5O3y.s 			page 76


 2551 0076 FB68     		ldr	r3, [r7, #12]
 2552 0078 0022     		movs	r2, #0
 2553 007a 9A87     		strh	r2, [r3, #60]	@ movhi
1731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 2554              		.loc 1 1731 21
 2555 007c FB68     		ldr	r3, [r7, #12]
 2556 007e 0022     		movs	r2, #0
 2557 0080 DA87     		strh	r2, [r3, #62]	@ movhi
1732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 2558              		.loc 1 1734 17
 2559 0082 FB68     		ldr	r3, [r7, #12]
 2560 0084 9B68     		ldr	r3, [r3, #8]
 2561              		.loc 1 1734 6
 2562 0086 B3F5004F 		cmp	r3, #32768
 2563 008a 0FD1     		bne	.L139
1735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
1737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE(hspi);
 2564              		.loc 1 1737 5
 2565 008c FB68     		ldr	r3, [r7, #12]
 2566 008e 1B68     		ldr	r3, [r3]
 2567 0090 1A68     		ldr	r2, [r3]
 2568 0092 FB68     		ldr	r3, [r7, #12]
 2569 0094 1B68     		ldr	r3, [r3]
 2570 0096 22F04002 		bic	r2, r2, #64
 2571 009a 1A60     		str	r2, [r3]
1738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_1LINE_TX(hspi);
 2572              		.loc 1 1738 5
 2573 009c FB68     		ldr	r3, [r7, #12]
 2574 009e 1B68     		ldr	r3, [r3]
 2575 00a0 1A68     		ldr	r2, [r3]
 2576 00a2 FB68     		ldr	r3, [r7, #12]
 2577 00a4 1B68     		ldr	r3, [r3]
 2578 00a6 42F48042 		orr	r2, r2, #16384
 2579 00aa 1A60     		str	r2, [r3]
 2580              	.L139:
1739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset CRC Calculation */
1743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the SPI TxDMA Half transfer complete callback */
1750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferHalfCpltCallback = SPI_DMAHalfTransmitCplt;
 2581              		.loc 1 1750 7
 2582 00ac FB68     		ldr	r3, [r7, #12]
 2583 00ae 9B6C     		ldr	r3, [r3, #72]
 2584              		.loc 1 1750 38
 2585 00b0 294A     		ldr	r2, .L142
 2586 00b2 DA62     		str	r2, [r3, #44]
1751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
ARM GAS  /tmp/ccFW5O3y.s 			page 77


1752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the SPI TxDMA transfer complete callback */
1753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback = SPI_DMATransmitCplt;
 2587              		.loc 1 1753 7
 2588 00b4 FB68     		ldr	r3, [r7, #12]
 2589 00b6 9B6C     		ldr	r3, [r3, #72]
 2590              		.loc 1 1753 34
 2591 00b8 284A     		ldr	r2, .L142+4
 2592 00ba 9A62     		str	r2, [r3, #40]
1754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the DMA error callback */
1756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback = SPI_DMAError;
 2593              		.loc 1 1756 7
 2594 00bc FB68     		ldr	r3, [r7, #12]
 2595 00be 9B6C     		ldr	r3, [r3, #72]
 2596              		.loc 1 1756 35
 2597 00c0 274A     		ldr	r2, .L142+8
 2598 00c2 1A63     		str	r2, [r3, #48]
1757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
1759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback = NULL;
 2599              		.loc 1 1759 7
 2600 00c4 FB68     		ldr	r3, [r7, #12]
 2601 00c6 9B6C     		ldr	r3, [r3, #72]
 2602              		.loc 1 1759 35
 2603 00c8 0022     		movs	r2, #0
 2604 00ca 5A63     		str	r2, [r3, #52]
1760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable the Tx DMA Stream/Channel */
1762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instanc
 2605              		.loc 1 1762 17
 2606 00cc FB68     		ldr	r3, [r7, #12]
 2607 00ce 986C     		ldr	r0, [r3, #72]
 2608              		.loc 1 1762 62
 2609 00d0 FB68     		ldr	r3, [r7, #12]
 2610 00d2 1B6B     		ldr	r3, [r3, #48]
 2611              		.loc 1 1762 17
 2612 00d4 1946     		mov	r1, r3
 2613              		.loc 1 1762 91
 2614 00d6 FB68     		ldr	r3, [r7, #12]
 2615 00d8 1B68     		ldr	r3, [r3]
 2616              		.loc 1 1762 86
 2617 00da 0C33     		adds	r3, r3, #12
 2618              		.loc 1 1762 17
 2619 00dc 1A46     		mov	r2, r3
1763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                  hspi->TxXferCount))
 2620              		.loc 1 1763 38
 2621 00de FB68     		ldr	r3, [r7, #12]
 2622 00e0 DB8E     		ldrh	r3, [r3, #54]	@ movhi
 2623 00e2 9BB2     		uxth	r3, r3
1762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                  hspi->TxXferCount))
 2624              		.loc 1 1762 17
 2625 00e4 FFF7FEFF 		bl	HAL_DMA_Start_IT
 2626 00e8 0346     		mov	r3, r0
1762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                  hspi->TxXferCount))
 2627              		.loc 1 1762 6 discriminator 1
 2628 00ea 002B     		cmp	r3, #0
 2629 00ec 0BD0     		beq	.L140
ARM GAS  /tmp/ccFW5O3y.s 			page 78


1764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Update SPI error code */
1766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 2630              		.loc 1 1766 5
 2631 00ee FB68     		ldr	r3, [r7, #12]
 2632 00f0 5B6D     		ldr	r3, [r3, #84]
 2633 00f2 43F01002 		orr	r2, r3, #16
 2634 00f6 FB68     		ldr	r3, [r7, #12]
 2635 00f8 5A65     		str	r2, [r3, #84]
1767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Process Unlocked */
1768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
 2636              		.loc 1 1768 5
 2637 00fa FB68     		ldr	r3, [r7, #12]
 2638 00fc 0022     		movs	r2, #0
 2639 00fe 83F85020 		strb	r2, [r3, #80]
1769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_ERROR;
 2640              		.loc 1 1769 12
 2641 0102 0123     		movs	r3, #1
 2642 0104 23E0     		b	.L135
 2643              	.L140:
1770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 2644              		.loc 1 1773 12
 2645 0106 FB68     		ldr	r3, [r7, #12]
 2646 0108 1B68     		ldr	r3, [r3]
 2647              		.loc 1 1773 22
 2648 010a 1B68     		ldr	r3, [r3]
 2649              		.loc 1 1773 28
 2650 010c 03F04003 		and	r3, r3, #64
 2651              		.loc 1 1773 6
 2652 0110 402B     		cmp	r3, #64
 2653 0112 07D0     		beq	.L141
1774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Enable SPI peripheral */
1776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 2654              		.loc 1 1776 5
 2655 0114 FB68     		ldr	r3, [r7, #12]
 2656 0116 1B68     		ldr	r3, [r3]
 2657 0118 1A68     		ldr	r2, [r3]
 2658 011a FB68     		ldr	r3, [r7, #12]
 2659 011c 1B68     		ldr	r3, [r3]
 2660 011e 42F04002 		orr	r2, r2, #64
 2661 0122 1A60     		str	r2, [r3]
 2662              	.L141:
1777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Unlocked */
1780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 2663              		.loc 1 1780 3
 2664 0124 FB68     		ldr	r3, [r7, #12]
 2665 0126 0022     		movs	r2, #0
 2666 0128 83F85020 		strb	r2, [r3, #80]
1781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
1783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
ARM GAS  /tmp/ccFW5O3y.s 			page 79


 2667              		.loc 1 1783 3
 2668 012c FB68     		ldr	r3, [r7, #12]
 2669 012e 1B68     		ldr	r3, [r3]
 2670 0130 5A68     		ldr	r2, [r3, #4]
 2671 0132 FB68     		ldr	r3, [r7, #12]
 2672 0134 1B68     		ldr	r3, [r3]
 2673 0136 42F02002 		orr	r2, r2, #32
 2674 013a 5A60     		str	r2, [r3, #4]
1784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable Tx DMA Request */
1786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 2675              		.loc 1 1786 3
 2676 013c FB68     		ldr	r3, [r7, #12]
 2677 013e 1B68     		ldr	r3, [r3]
 2678 0140 5A68     		ldr	r2, [r3, #4]
 2679 0142 FB68     		ldr	r3, [r7, #12]
 2680 0144 1B68     		ldr	r3, [r3]
 2681 0146 42F00202 		orr	r2, r2, #2
 2682 014a 5A60     		str	r2, [r3, #4]
1787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return HAL_OK;
 2683              		.loc 1 1788 10
 2684 014c 0023     		movs	r3, #0
 2685              	.L135:
1789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 2686              		.loc 1 1789 1
 2687 014e 1846     		mov	r0, r3
 2688 0150 1037     		adds	r7, r7, #16
 2689              	.LCFI57:
 2690              		.cfi_def_cfa_offset 8
 2691 0152 BD46     		mov	sp, r7
 2692              	.LCFI58:
 2693              		.cfi_def_cfa_register 13
 2694              		@ sp needed
 2695 0154 80BD     		pop	{r7, pc}
 2696              	.L143:
 2697 0156 00BF     		.align	2
 2698              	.L142:
 2699 0158 00000000 		.word	SPI_DMAHalfTransmitCplt
 2700 015c 00000000 		.word	SPI_DMATransmitCplt
 2701 0160 00000000 		.word	SPI_DMAError
 2702              		.cfi_endproc
 2703              	.LFE75:
 2705              		.section	.text.HAL_SPI_Receive_DMA,"ax",%progbits
 2706              		.align	1
 2707              		.global	HAL_SPI_Receive_DMA
 2708              		.syntax unified
 2709              		.thumb
 2710              		.thumb_func
 2712              	HAL_SPI_Receive_DMA:
 2713              	.LFB76:
1790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
1792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Receive an amount of data in non-blocking mode with DMA.
1793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @note   In case of MASTER mode and SPI_DIRECTION_2LINES direction, hdmatx shall be defined.
1794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
ARM GAS  /tmp/ccFW5O3y.s 			page 80


1796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pData pointer to data buffer
1797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @note   When the CRC feature is enabled the pData Length must be Size + 1.
1798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Size amount of data to be sent
1799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
1800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
1801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Receive_DMA(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size)
1802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 2714              		.loc 1 1802 1
 2715              		.cfi_startproc
 2716              		@ args = 0, pretend = 0, frame = 16
 2717              		@ frame_needed = 1, uses_anonymous_args = 0
 2718 0000 80B5     		push	{r7, lr}
 2719              	.LCFI59:
 2720              		.cfi_def_cfa_offset 8
 2721              		.cfi_offset 7, -8
 2722              		.cfi_offset 14, -4
 2723 0002 84B0     		sub	sp, sp, #16
 2724              	.LCFI60:
 2725              		.cfi_def_cfa_offset 24
 2726 0004 00AF     		add	r7, sp, #0
 2727              	.LCFI61:
 2728              		.cfi_def_cfa_register 7
 2729 0006 F860     		str	r0, [r7, #12]
 2730 0008 B960     		str	r1, [r7, #8]
 2731 000a 1346     		mov	r3, r2
 2732 000c FB80     		strh	r3, [r7, #6]	@ movhi
1803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check rx dma handle */
1804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmarx));
1805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_READY)
 2733              		.loc 1 1806 11
 2734 000e FB68     		ldr	r3, [r7, #12]
 2735 0010 93F85130 		ldrb	r3, [r3, #81]
 2736 0014 DBB2     		uxtb	r3, r3
 2737              		.loc 1 1806 6
 2738 0016 012B     		cmp	r3, #1
 2739 0018 01D0     		beq	.L145
1807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_BUSY;
 2740              		.loc 1 1808 12
 2741 001a 0223     		movs	r3, #2
 2742 001c A9E0     		b	.L146
 2743              	.L145:
1809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hspi->Init.Mode == SPI_MODE_MASTER))
 2744              		.loc 1 1811 18
 2745 001e FB68     		ldr	r3, [r7, #12]
 2746 0020 9B68     		ldr	r3, [r3, #8]
 2747              		.loc 1 1811 6
 2748 0022 002B     		cmp	r3, #0
 2749 0024 10D1     		bne	.L147
 2750              		.loc 1 1811 68 discriminator 1
 2751 0026 FB68     		ldr	r3, [r7, #12]
 2752 0028 5B68     		ldr	r3, [r3, #4]
 2753              		.loc 1 1811 54 discriminator 1
 2754 002a B3F5827F 		cmp	r3, #260
ARM GAS  /tmp/ccFW5O3y.s 			page 81


 2755 002e 0BD1     		bne	.L147
1812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_RX;
 2756              		.loc 1 1813 17
 2757 0030 FB68     		ldr	r3, [r7, #12]
 2758 0032 0422     		movs	r2, #4
 2759 0034 83F85120 		strb	r2, [r3, #81]
1814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check tx dma handle */
1816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     assert_param(IS_SPI_DMA_HANDLE(hspi->hdmatx));
1817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line 
1819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_SPI_TransmitReceive_DMA(hspi, pData, pData, Size);
 2760              		.loc 1 1819 12
 2761 0038 FB88     		ldrh	r3, [r7, #6]
 2762 003a BA68     		ldr	r2, [r7, #8]
 2763 003c B968     		ldr	r1, [r7, #8]
 2764 003e F868     		ldr	r0, [r7, #12]
 2765 0040 FFF7FEFF 		bl	HAL_SPI_TransmitReceive_DMA
 2766 0044 0346     		mov	r3, r0
 2767 0046 94E0     		b	.L146
 2768              	.L147:
1820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((pData == NULL) || (Size == 0U))
 2769              		.loc 1 1822 6
 2770 0048 BB68     		ldr	r3, [r7, #8]
 2771 004a 002B     		cmp	r3, #0
 2772 004c 02D0     		beq	.L148
 2773              		.loc 1 1822 23 discriminator 1
 2774 004e FB88     		ldrh	r3, [r7, #6]
 2775 0050 002B     		cmp	r3, #0
 2776 0052 01D1     		bne	.L149
 2777              	.L148:
1823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_ERROR;
 2778              		.loc 1 1824 12
 2779 0054 0123     		movs	r3, #1
 2780 0056 8CE0     		b	.L146
 2781              	.L149:
1825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Locked */
1828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
 2782              		.loc 1 1828 3
 2783 0058 FB68     		ldr	r3, [r7, #12]
 2784 005a 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 2785 005e 012B     		cmp	r3, #1
 2786 0060 01D1     		bne	.L150
 2787              		.loc 1 1828 3 is_stmt 0 discriminator 1
 2788 0062 0223     		movs	r3, #2
 2789              		.loc 1 1828 3
 2790 0064 85E0     		b	.L146
 2791              	.L150:
 2792              		.loc 1 1828 3 discriminator 2
 2793 0066 FB68     		ldr	r3, [r7, #12]
 2794 0068 0122     		movs	r2, #1
ARM GAS  /tmp/ccFW5O3y.s 			page 82


 2795 006a 83F85020 		strb	r2, [r3, #80]
1829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the transaction information */
1831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State       = HAL_SPI_STATE_BUSY_RX;
 2796              		.loc 1 1831 21 is_stmt 1
 2797 006e FB68     		ldr	r3, [r7, #12]
 2798 0070 0422     		movs	r2, #4
 2799 0072 83F85120 		strb	r2, [r3, #81]
1832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 2800              		.loc 1 1832 21
 2801 0076 FB68     		ldr	r3, [r7, #12]
 2802 0078 0022     		movs	r2, #0
 2803 007a 5A65     		str	r2, [r3, #84]
1833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pData;
 2804              		.loc 1 1833 21
 2805 007c FB68     		ldr	r3, [r7, #12]
 2806 007e BA68     		ldr	r2, [r7, #8]
 2807 0080 9A63     		str	r2, [r3, #56]
1834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 2808              		.loc 1 1834 21
 2809 0082 FB68     		ldr	r3, [r7, #12]
 2810 0084 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2811 0086 9A87     		strh	r2, [r3, #60]	@ movhi
1835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 2812              		.loc 1 1835 21
 2813 0088 FB68     		ldr	r3, [r7, #12]
 2814 008a FA88     		ldrh	r2, [r7, #6]	@ movhi
 2815 008c DA87     		strh	r2, [r3, #62]	@ movhi
1836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /*Init field not used in handle to zero */
1838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxISR       = NULL;
 2816              		.loc 1 1838 21
 2817 008e FB68     		ldr	r3, [r7, #12]
 2818 0090 0022     		movs	r2, #0
 2819 0092 1A64     		str	r2, [r3, #64]
1839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 2820              		.loc 1 1839 21
 2821 0094 FB68     		ldr	r3, [r7, #12]
 2822 0096 0022     		movs	r2, #0
 2823 0098 5A64     		str	r2, [r3, #68]
1840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = 0U;
 2824              		.loc 1 1840 21
 2825 009a FB68     		ldr	r3, [r7, #12]
 2826 009c 0022     		movs	r2, #0
 2827 009e 9A86     		strh	r2, [r3, #52]	@ movhi
1841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 2828              		.loc 1 1841 21
 2829 00a0 FB68     		ldr	r3, [r7, #12]
 2830 00a2 0022     		movs	r2, #0
 2831 00a4 DA86     		strh	r2, [r3, #54]	@ movhi
1842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Configure communication direction : 1Line */
1844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 2832              		.loc 1 1844 17
 2833 00a6 FB68     		ldr	r3, [r7, #12]
 2834 00a8 9B68     		ldr	r3, [r3, #8]
 2835              		.loc 1 1844 6
ARM GAS  /tmp/ccFW5O3y.s 			page 83


 2836 00aa B3F5004F 		cmp	r3, #32768
 2837 00ae 0FD1     		bne	.L151
1845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
1847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE(hspi);
 2838              		.loc 1 1847 5
 2839 00b0 FB68     		ldr	r3, [r7, #12]
 2840 00b2 1B68     		ldr	r3, [r3]
 2841 00b4 1A68     		ldr	r2, [r3]
 2842 00b6 FB68     		ldr	r3, [r7, #12]
 2843 00b8 1B68     		ldr	r3, [r3]
 2844 00ba 22F04002 		bic	r2, r2, #64
 2845 00be 1A60     		str	r2, [r3]
1848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_1LINE_RX(hspi);
 2846              		.loc 1 1848 5
 2847 00c0 FB68     		ldr	r3, [r7, #12]
 2848 00c2 1B68     		ldr	r3, [r3]
 2849 00c4 1A68     		ldr	r2, [r3]
 2850 00c6 FB68     		ldr	r3, [r7, #12]
 2851 00c8 1B68     		ldr	r3, [r3]
 2852 00ca 22F48042 		bic	r2, r2, #16384
 2853 00ce 1A60     		str	r2, [r3]
 2854              	.L151:
1849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
1852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset CRC Calculation */
1853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the SPI RxDMA Half transfer complete callback */
1860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfReceiveCplt;
 2855              		.loc 1 1860 7
 2856 00d0 FB68     		ldr	r3, [r7, #12]
 2857 00d2 DB6C     		ldr	r3, [r3, #76]
 2858              		.loc 1 1860 38
 2859 00d4 294A     		ldr	r2, .L154
 2860 00d6 DA62     		str	r2, [r3, #44]
1861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the SPI Rx DMA transfer complete callback */
1863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmarx->XferCpltCallback = SPI_DMAReceiveCplt;
 2861              		.loc 1 1863 7
 2862 00d8 FB68     		ldr	r3, [r7, #12]
 2863 00da DB6C     		ldr	r3, [r3, #76]
 2864              		.loc 1 1863 34
 2865 00dc 284A     		ldr	r2, .L154+4
 2866 00de 9A62     		str	r2, [r3, #40]
1864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the DMA error callback */
1866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmarx->XferErrorCallback = SPI_DMAError;
 2867              		.loc 1 1866 7
 2868 00e0 FB68     		ldr	r3, [r7, #12]
 2869 00e2 DB6C     		ldr	r3, [r3, #76]
 2870              		.loc 1 1866 35
ARM GAS  /tmp/ccFW5O3y.s 			page 84


 2871 00e4 274A     		ldr	r2, .L154+8
 2872 00e6 1A63     		str	r2, [r3, #48]
1867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
1869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
 2873              		.loc 1 1869 7
 2874 00e8 FB68     		ldr	r3, [r7, #12]
 2875 00ea DB6C     		ldr	r3, [r3, #76]
 2876              		.loc 1 1869 35
 2877 00ec 0022     		movs	r2, #0
 2878 00ee 5A63     		str	r2, [r3, #52]
1870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable the Rx DMA Stream/Channel  */
1872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmarx, (uint32_t)&hspi->Instance->DR, (uint32_t)hspi->pRxBu
 2879              		.loc 1 1872 17
 2880 00f0 FB68     		ldr	r3, [r7, #12]
 2881 00f2 D86C     		ldr	r0, [r3, #76]
 2882              		.loc 1 1872 63
 2883 00f4 FB68     		ldr	r3, [r7, #12]
 2884 00f6 1B68     		ldr	r3, [r3]
 2885              		.loc 1 1872 58
 2886 00f8 0C33     		adds	r3, r3, #12
 2887              		.loc 1 1872 17
 2888 00fa 1946     		mov	r1, r3
 2889              		.loc 1 1872 93
 2890 00fc FB68     		ldr	r3, [r7, #12]
 2891 00fe 9B6B     		ldr	r3, [r3, #56]
 2892              		.loc 1 1872 17
 2893 0100 1A46     		mov	r2, r3
1873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                  hspi->RxXferCount))
 2894              		.loc 1 1873 38
 2895 0102 FB68     		ldr	r3, [r7, #12]
 2896 0104 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 2897 0106 9BB2     		uxth	r3, r3
1872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                  hspi->RxXferCount))
 2898              		.loc 1 1872 17
 2899 0108 FFF7FEFF 		bl	HAL_DMA_Start_IT
 2900 010c 0346     		mov	r3, r0
1872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                  hspi->RxXferCount))
 2901              		.loc 1 1872 6 discriminator 1
 2902 010e 002B     		cmp	r3, #0
 2903 0110 0BD0     		beq	.L152
1874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Update SPI error code */
1876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 2904              		.loc 1 1876 5
 2905 0112 FB68     		ldr	r3, [r7, #12]
 2906 0114 5B6D     		ldr	r3, [r3, #84]
 2907 0116 43F01002 		orr	r2, r3, #16
 2908 011a FB68     		ldr	r3, [r7, #12]
 2909 011c 5A65     		str	r2, [r3, #84]
1877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Process Unlocked */
1878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
 2910              		.loc 1 1878 5
 2911 011e FB68     		ldr	r3, [r7, #12]
 2912 0120 0022     		movs	r2, #0
 2913 0122 83F85020 		strb	r2, [r3, #80]
ARM GAS  /tmp/ccFW5O3y.s 			page 85


1879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_ERROR;
 2914              		.loc 1 1879 12
 2915 0126 0123     		movs	r3, #1
 2916 0128 23E0     		b	.L146
 2917              	.L152:
1880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
1883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 2918              		.loc 1 1883 12
 2919 012a FB68     		ldr	r3, [r7, #12]
 2920 012c 1B68     		ldr	r3, [r3]
 2921              		.loc 1 1883 22
 2922 012e 1B68     		ldr	r3, [r3]
 2923              		.loc 1 1883 28
 2924 0130 03F04003 		and	r3, r3, #64
 2925              		.loc 1 1883 6
 2926 0134 402B     		cmp	r3, #64
 2927 0136 07D0     		beq	.L153
1884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Enable SPI peripheral */
1886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 2928              		.loc 1 1886 5
 2929 0138 FB68     		ldr	r3, [r7, #12]
 2930 013a 1B68     		ldr	r3, [r3]
 2931 013c 1A68     		ldr	r2, [r3]
 2932 013e FB68     		ldr	r3, [r7, #12]
 2933 0140 1B68     		ldr	r3, [r3]
 2934 0142 42F04002 		orr	r2, r2, #64
 2935 0146 1A60     		str	r2, [r3]
 2936              	.L153:
1887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Unlocked */
1890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 2937              		.loc 1 1890 3
 2938 0148 FB68     		ldr	r3, [r7, #12]
 2939 014a 0022     		movs	r2, #0
 2940 014c 83F85020 		strb	r2, [r3, #80]
1891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
1893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
 2941              		.loc 1 1893 3
 2942 0150 FB68     		ldr	r3, [r7, #12]
 2943 0152 1B68     		ldr	r3, [r3]
 2944 0154 5A68     		ldr	r2, [r3, #4]
 2945 0156 FB68     		ldr	r3, [r7, #12]
 2946 0158 1B68     		ldr	r3, [r3]
 2947 015a 42F02002 		orr	r2, r2, #32
 2948 015e 5A60     		str	r2, [r3, #4]
1894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable Rx DMA Request */
1896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
 2949              		.loc 1 1896 3
 2950 0160 FB68     		ldr	r3, [r7, #12]
 2951 0162 1B68     		ldr	r3, [r3]
 2952 0164 5A68     		ldr	r2, [r3, #4]
ARM GAS  /tmp/ccFW5O3y.s 			page 86


 2953 0166 FB68     		ldr	r3, [r7, #12]
 2954 0168 1B68     		ldr	r3, [r3]
 2955 016a 42F00102 		orr	r2, r2, #1
 2956 016e 5A60     		str	r2, [r3, #4]
1897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return HAL_OK;
 2957              		.loc 1 1898 10
 2958 0170 0023     		movs	r3, #0
 2959              	.L146:
1899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 2960              		.loc 1 1899 1
 2961 0172 1846     		mov	r0, r3
 2962 0174 1037     		adds	r7, r7, #16
 2963              	.LCFI62:
 2964              		.cfi_def_cfa_offset 8
 2965 0176 BD46     		mov	sp, r7
 2966              	.LCFI63:
 2967              		.cfi_def_cfa_register 13
 2968              		@ sp needed
 2969 0178 80BD     		pop	{r7, pc}
 2970              	.L155:
 2971 017a 00BF     		.align	2
 2972              	.L154:
 2973 017c 00000000 		.word	SPI_DMAHalfReceiveCplt
 2974 0180 00000000 		.word	SPI_DMAReceiveCplt
 2975 0184 00000000 		.word	SPI_DMAError
 2976              		.cfi_endproc
 2977              	.LFE76:
 2979              		.section	.text.HAL_SPI_TransmitReceive_DMA,"ax",%progbits
 2980              		.align	1
 2981              		.global	HAL_SPI_TransmitReceive_DMA
 2982              		.syntax unified
 2983              		.thumb
 2984              		.thumb_func
 2986              	HAL_SPI_TransmitReceive_DMA:
 2987              	.LFB77:
1900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
1902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Transmit and Receive an amount of data in non-blocking mode with DMA.
1903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
1904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
1905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pTxData pointer to transmission data buffer
1906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  pRxData pointer to reception data buffer
1907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @note   When the CRC feature is enabled the pRxData Length must be Size + 1
1908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Size amount of data to be sent
1909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
1910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
1911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_TransmitReceive_DMA(SPI_HandleTypeDef *hspi, const uint8_t *pTxData, uint
1912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                               uint16_t Size)
1913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 2988              		.loc 1 1913 1
 2989              		.cfi_startproc
 2990              		@ args = 0, pretend = 0, frame = 24
 2991              		@ frame_needed = 1, uses_anonymous_args = 0
 2992 0000 80B5     		push	{r7, lr}
 2993              	.LCFI64:
 2994              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccFW5O3y.s 			page 87


 2995              		.cfi_offset 7, -8
 2996              		.cfi_offset 14, -4
 2997 0002 86B0     		sub	sp, sp, #24
 2998              	.LCFI65:
 2999              		.cfi_def_cfa_offset 32
 3000 0004 00AF     		add	r7, sp, #0
 3001              	.LCFI66:
 3002              		.cfi_def_cfa_register 7
 3003 0006 F860     		str	r0, [r7, #12]
 3004 0008 B960     		str	r1, [r7, #8]
 3005 000a 7A60     		str	r2, [r7, #4]
 3006 000c 7B80     		strh	r3, [r7, #2]	@ movhi
1914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t             tmp_mode;
1915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_StateTypeDef tmp_state;
1916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check rx & tx dma handles */
1918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmarx));
1919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DMA_HANDLE(hspi->hdmatx));
1920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check Direction parameter */
1922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));
1923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init temporary variables */
1925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmp_state           = hspi->State;
 3007              		.loc 1 1925 23
 3008 000e FB68     		ldr	r3, [r7, #12]
 3009 0010 93F85130 		ldrb	r3, [r3, #81]
 3010 0014 FB75     		strb	r3, [r7, #23]
1926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmp_mode            = hspi->Init.Mode;
 3011              		.loc 1 1926 23
 3012 0016 FB68     		ldr	r3, [r7, #12]
 3013 0018 5B68     		ldr	r3, [r3, #4]
 3014 001a 3B61     		str	r3, [r7, #16]
1927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (!((tmp_state == HAL_SPI_STATE_READY) ||
 3015              		.loc 1 1928 6
 3016 001c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3017 001e 012B     		cmp	r3, #1
 3018 0020 0CD0     		beq	.L157
 3019              		.loc 1 1928 7 discriminator 1
 3020 0022 3B69     		ldr	r3, [r7, #16]
 3021 0024 B3F5827F 		cmp	r3, #260
 3022 0028 06D1     		bne	.L158
1929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) &&
 3023              		.loc 1 1929 54
 3024 002a FB68     		ldr	r3, [r7, #12]
 3025 002c 9B68     		ldr	r3, [r3, #8]
 3026              		.loc 1 1929 40
 3027 002e 002B     		cmp	r3, #0
 3028 0030 02D1     		bne	.L158
 3029              		.loc 1 1929 90 discriminator 1
 3030 0032 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3031 0034 042B     		cmp	r3, #4
 3032 0036 01D0     		beq	.L157
 3033              	.L158:
1930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****          (tmp_state == HAL_SPI_STATE_BUSY_RX))))
1931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
ARM GAS  /tmp/ccFW5O3y.s 			page 88


1932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_BUSY;
 3034              		.loc 1 1932 12
 3035 0038 0223     		movs	r3, #2
 3036 003a CFE0     		b	.L159
 3037              	.L157:
1933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 3038              		.loc 1 1935 6
 3039 003c BB68     		ldr	r3, [r7, #8]
 3040 003e 002B     		cmp	r3, #0
 3041 0040 05D0     		beq	.L160
 3042              		.loc 1 1935 25 discriminator 1
 3043 0042 7B68     		ldr	r3, [r7, #4]
 3044 0044 002B     		cmp	r3, #0
 3045 0046 02D0     		beq	.L160
 3046              		.loc 1 1935 46 discriminator 2
 3047 0048 7B88     		ldrh	r3, [r7, #2]
 3048 004a 002B     		cmp	r3, #0
 3049 004c 01D1     		bne	.L161
 3050              	.L160:
1936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_ERROR;
 3051              		.loc 1 1937 12
 3052 004e 0123     		movs	r3, #1
 3053 0050 C4E0     		b	.L159
 3054              	.L161:
1938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process locked */
1941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
 3055              		.loc 1 1941 3
 3056 0052 FB68     		ldr	r3, [r7, #12]
 3057 0054 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 3058 0058 012B     		cmp	r3, #1
 3059 005a 01D1     		bne	.L162
 3060              		.loc 1 1941 3 is_stmt 0 discriminator 1
 3061 005c 0223     		movs	r3, #2
 3062              		.loc 1 1941 3
 3063 005e BDE0     		b	.L159
 3064              	.L162:
 3065              		.loc 1 1941 3 discriminator 2
 3066 0060 FB68     		ldr	r3, [r7, #12]
 3067 0062 0122     		movs	r2, #1
 3068 0064 83F85020 		strb	r2, [r3, #80]
1942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
1944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 3069              		.loc 1 1944 11 is_stmt 1
 3070 0068 FB68     		ldr	r3, [r7, #12]
 3071 006a 93F85130 		ldrb	r3, [r3, #81]
 3072 006e DBB2     		uxtb	r3, r3
 3073              		.loc 1 1944 6
 3074 0070 042B     		cmp	r3, #4
 3075 0072 03D0     		beq	.L163
1945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
ARM GAS  /tmp/ccFW5O3y.s 			page 89


 3076              		.loc 1 1946 17
 3077 0074 FB68     		ldr	r3, [r7, #12]
 3078 0076 0522     		movs	r2, #5
 3079 0078 83F85120 		strb	r2, [r3, #81]
 3080              	.L163:
1947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the transaction information */
1950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 3081              		.loc 1 1950 21
 3082 007c FB68     		ldr	r3, [r7, #12]
 3083 007e 0022     		movs	r2, #0
 3084 0080 5A65     		str	r2, [r3, #84]
1951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr  = (const uint8_t *)pTxData;
 3085              		.loc 1 1951 21
 3086 0082 FB68     		ldr	r3, [r7, #12]
 3087 0084 BA68     		ldr	r2, [r7, #8]
 3088 0086 1A63     		str	r2, [r3, #48]
1952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferSize  = Size;
 3089              		.loc 1 1952 21
 3090 0088 FB68     		ldr	r3, [r7, #12]
 3091 008a 7A88     		ldrh	r2, [r7, #2]	@ movhi
 3092 008c 9A86     		strh	r2, [r3, #52]	@ movhi
1953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = Size;
 3093              		.loc 1 1953 21
 3094 008e FB68     		ldr	r3, [r7, #12]
 3095 0090 7A88     		ldrh	r2, [r7, #2]	@ movhi
 3096 0092 DA86     		strh	r2, [r3, #54]	@ movhi
1954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 3097              		.loc 1 1954 21
 3098 0094 FB68     		ldr	r3, [r7, #12]
 3099 0096 7A68     		ldr	r2, [r7, #4]
 3100 0098 9A63     		str	r2, [r3, #56]
1955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferSize  = Size;
 3101              		.loc 1 1955 21
 3102 009a FB68     		ldr	r3, [r7, #12]
 3103 009c 7A88     		ldrh	r2, [r7, #2]	@ movhi
 3104 009e 9A87     		strh	r2, [r3, #60]	@ movhi
1956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = Size;
 3105              		.loc 1 1956 21
 3106 00a0 FB68     		ldr	r3, [r7, #12]
 3107 00a2 7A88     		ldrh	r2, [r7, #2]	@ movhi
 3108 00a4 DA87     		strh	r2, [r3, #62]	@ movhi
1957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init field not used in handle to zero */
1959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxISR       = NULL;
 3109              		.loc 1 1959 21
 3110 00a6 FB68     		ldr	r3, [r7, #12]
 3111 00a8 0022     		movs	r2, #0
 3112 00aa 1A64     		str	r2, [r3, #64]
1960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxISR       = NULL;
 3113              		.loc 1 1960 21
 3114 00ac FB68     		ldr	r3, [r7, #12]
 3115 00ae 0022     		movs	r2, #0
 3116 00b0 5A64     		str	r2, [r3, #68]
1961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
ARM GAS  /tmp/ccFW5O3y.s 			page 90


1963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset CRC Calculation */
1964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
1965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_RESET_CRC(hspi);
1967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
1969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if we are in Rx only or in Rx/Tx Mode and configure the DMA transfer complete callback *
1971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->State == HAL_SPI_STATE_BUSY_RX)
 3117              		.loc 1 1971 11
 3118 00b2 FB68     		ldr	r3, [r7, #12]
 3119 00b4 93F85130 		ldrb	r3, [r3, #81]
 3120 00b8 DBB2     		uxtb	r3, r3
 3121              		.loc 1 1971 6
 3122 00ba 042B     		cmp	r3, #4
 3123 00bc 08D1     		bne	.L164
1972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Set the SPI Rx DMA Half transfer complete callback */
1974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfReceiveCplt;
 3124              		.loc 1 1974 9
 3125 00be FB68     		ldr	r3, [r7, #12]
 3126 00c0 DB6C     		ldr	r3, [r3, #76]
 3127              		.loc 1 1974 40
 3128 00c2 484A     		ldr	r2, .L169
 3129 00c4 DA62     		str	r2, [r3, #44]
1975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMAReceiveCplt;
 3130              		.loc 1 1975 9
 3131 00c6 FB68     		ldr	r3, [r7, #12]
 3132 00c8 DB6C     		ldr	r3, [r3, #76]
 3133              		.loc 1 1975 40
 3134 00ca 474A     		ldr	r2, .L169+4
 3135 00cc 9A62     		str	r2, [r3, #40]
 3136 00ce 07E0     		b	.L165
 3137              	.L164:
1976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
1978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Set the SPI Tx/Rx DMA Half transfer complete callback */
1980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->hdmarx->XferHalfCpltCallback = SPI_DMAHalfTransmitReceiveCplt;
 3138              		.loc 1 1980 9
 3139 00d0 FB68     		ldr	r3, [r7, #12]
 3140 00d2 DB6C     		ldr	r3, [r3, #76]
 3141              		.loc 1 1980 40
 3142 00d4 454A     		ldr	r2, .L169+8
 3143 00d6 DA62     		str	r2, [r3, #44]
1981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->hdmarx->XferCpltCallback     = SPI_DMATransmitReceiveCplt;
 3144              		.loc 1 1981 9
 3145 00d8 FB68     		ldr	r3, [r7, #12]
 3146 00da DB6C     		ldr	r3, [r3, #76]
 3147              		.loc 1 1981 40
 3148 00dc 444A     		ldr	r2, .L169+12
 3149 00de 9A62     		str	r2, [r3, #40]
 3150              	.L165:
1982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
1983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the DMA error callback */
1985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmarx->XferErrorCallback = SPI_DMAError;
ARM GAS  /tmp/ccFW5O3y.s 			page 91


 3151              		.loc 1 1985 7
 3152 00e0 FB68     		ldr	r3, [r7, #12]
 3153 00e2 DB6C     		ldr	r3, [r3, #76]
 3154              		.loc 1 1985 35
 3155 00e4 434A     		ldr	r2, .L169+16
 3156 00e6 1A63     		str	r2, [r3, #48]
1986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the DMA AbortCpltCallback */
1988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
 3157              		.loc 1 1988 7
 3158 00e8 FB68     		ldr	r3, [r7, #12]
 3159 00ea DB6C     		ldr	r3, [r3, #76]
 3160              		.loc 1 1988 35
 3161 00ec 0022     		movs	r2, #0
 3162 00ee 5A63     		str	r2, [r3, #52]
1989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
1990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable the Rx DMA Stream/Channel  */
1991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmarx, (uint32_t)&hspi->Instance->DR, (uint32_t)hspi->pRxBu
 3163              		.loc 1 1991 17
 3164 00f0 FB68     		ldr	r3, [r7, #12]
 3165 00f2 D86C     		ldr	r0, [r3, #76]
 3166              		.loc 1 1991 63
 3167 00f4 FB68     		ldr	r3, [r7, #12]
 3168 00f6 1B68     		ldr	r3, [r3]
 3169              		.loc 1 1991 58
 3170 00f8 0C33     		adds	r3, r3, #12
 3171              		.loc 1 1991 17
 3172 00fa 1946     		mov	r1, r3
 3173              		.loc 1 1991 93
 3174 00fc FB68     		ldr	r3, [r7, #12]
 3175 00fe 9B6B     		ldr	r3, [r3, #56]
 3176              		.loc 1 1991 17
 3177 0100 1A46     		mov	r2, r3
1992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                  hspi->RxXferCount))
 3178              		.loc 1 1992 38
 3179 0102 FB68     		ldr	r3, [r7, #12]
 3180 0104 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 3181 0106 9BB2     		uxth	r3, r3
1991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                  hspi->RxXferCount))
 3182              		.loc 1 1991 17
 3183 0108 FFF7FEFF 		bl	HAL_DMA_Start_IT
 3184 010c 0346     		mov	r3, r0
1991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                  hspi->RxXferCount))
 3185              		.loc 1 1991 6 discriminator 1
 3186 010e 002B     		cmp	r3, #0
 3187 0110 0BD0     		beq	.L166
1993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
1994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Update SPI error code */
1995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 3188              		.loc 1 1995 5
 3189 0112 FB68     		ldr	r3, [r7, #12]
 3190 0114 5B6D     		ldr	r3, [r3, #84]
 3191 0116 43F01002 		orr	r2, r3, #16
 3192 011a FB68     		ldr	r3, [r7, #12]
 3193 011c 5A65     		str	r2, [r3, #84]
1996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Process Unlocked */
1997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
ARM GAS  /tmp/ccFW5O3y.s 			page 92


 3194              		.loc 1 1997 5
 3195 011e FB68     		ldr	r3, [r7, #12]
 3196 0120 0022     		movs	r2, #0
 3197 0122 83F85020 		strb	r2, [r3, #80]
1998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_ERROR;
 3198              		.loc 1 1998 12
 3199 0126 0123     		movs	r3, #1
 3200 0128 58E0     		b	.L159
 3201              	.L166:
1999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable Rx DMA Request */
2002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
 3202              		.loc 1 2002 3
 3203 012a FB68     		ldr	r3, [r7, #12]
 3204 012c 1B68     		ldr	r3, [r3]
 3205 012e 5A68     		ldr	r2, [r3, #4]
 3206 0130 FB68     		ldr	r3, [r7, #12]
 3207 0132 1B68     		ldr	r3, [r3]
 3208 0134 42F00102 		orr	r2, r2, #1
 3209 0138 5A60     		str	r2, [r3, #4]
2003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Set the SPI Tx DMA transfer complete callback as NULL because the communication closing
2005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   is performed in DMA reception complete callback  */
2006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferHalfCpltCallback = NULL;
 3210              		.loc 1 2006 7
 3211 013a FB68     		ldr	r3, [r7, #12]
 3212 013c 9B6C     		ldr	r3, [r3, #72]
 3213              		.loc 1 2006 38
 3214 013e 0022     		movs	r2, #0
 3215 0140 DA62     		str	r2, [r3, #44]
2007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferCpltCallback     = NULL;
 3216              		.loc 1 2007 7
 3217 0142 FB68     		ldr	r3, [r7, #12]
 3218 0144 9B6C     		ldr	r3, [r3, #72]
 3219              		.loc 1 2007 38
 3220 0146 0022     		movs	r2, #0
 3221 0148 9A62     		str	r2, [r3, #40]
2008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferErrorCallback    = NULL;
 3222              		.loc 1 2008 7
 3223 014a FB68     		ldr	r3, [r7, #12]
 3224 014c 9B6C     		ldr	r3, [r3, #72]
 3225              		.loc 1 2008 38
 3226 014e 0022     		movs	r2, #0
 3227 0150 1A63     		str	r2, [r3, #48]
2009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback    = NULL;
 3228              		.loc 1 2009 7
 3229 0152 FB68     		ldr	r3, [r7, #12]
 3230 0154 9B6C     		ldr	r3, [r3, #72]
 3231              		.loc 1 2009 38
 3232 0156 0022     		movs	r2, #0
 3233 0158 5A63     		str	r2, [r3, #52]
2010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable the Tx DMA Stream/Channel  */
2012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instanc
 3234              		.loc 1 2012 17
 3235 015a FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccFW5O3y.s 			page 93


 3236 015c 986C     		ldr	r0, [r3, #72]
 3237              		.loc 1 2012 62
 3238 015e FB68     		ldr	r3, [r7, #12]
 3239 0160 1B6B     		ldr	r3, [r3, #48]
 3240              		.loc 1 2012 17
 3241 0162 1946     		mov	r1, r3
 3242              		.loc 1 2012 91
 3243 0164 FB68     		ldr	r3, [r7, #12]
 3244 0166 1B68     		ldr	r3, [r3]
 3245              		.loc 1 2012 86
 3246 0168 0C33     		adds	r3, r3, #12
 3247              		.loc 1 2012 17
 3248 016a 1A46     		mov	r2, r3
2013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                  hspi->TxXferCount))
 3249              		.loc 1 2013 38
 3250 016c FB68     		ldr	r3, [r7, #12]
 3251 016e DB8E     		ldrh	r3, [r3, #54]	@ movhi
 3252 0170 9BB2     		uxth	r3, r3
2012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                  hspi->TxXferCount))
 3253              		.loc 1 2012 17
 3254 0172 FFF7FEFF 		bl	HAL_DMA_Start_IT
 3255 0176 0346     		mov	r3, r0
2012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                  hspi->TxXferCount))
 3256              		.loc 1 2012 6 discriminator 1
 3257 0178 002B     		cmp	r3, #0
 3258 017a 0BD0     		beq	.L167
2014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Update SPI error code */
2016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 3259              		.loc 1 2016 5
 3260 017c FB68     		ldr	r3, [r7, #12]
 3261 017e 5B6D     		ldr	r3, [r3, #84]
 3262 0180 43F01002 		orr	r2, r3, #16
 3263 0184 FB68     		ldr	r3, [r7, #12]
 3264 0186 5A65     		str	r2, [r3, #84]
2017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Process Unlocked */
2018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_UNLOCK(hspi);
 3265              		.loc 1 2018 5
 3266 0188 FB68     		ldr	r3, [r7, #12]
 3267 018a 0022     		movs	r2, #0
 3268 018c 83F85020 		strb	r2, [r3, #80]
2019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_ERROR;
 3269              		.loc 1 2019 12
 3270 0190 0123     		movs	r3, #1
 3271 0192 23E0     		b	.L159
 3272              	.L167:
2020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if the SPI is already enabled */
2023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 3273              		.loc 1 2023 12
 3274 0194 FB68     		ldr	r3, [r7, #12]
 3275 0196 1B68     		ldr	r3, [r3]
 3276              		.loc 1 2023 22
 3277 0198 1B68     		ldr	r3, [r3]
 3278              		.loc 1 2023 28
 3279 019a 03F04003 		and	r3, r3, #64
ARM GAS  /tmp/ccFW5O3y.s 			page 94


 3280              		.loc 1 2023 6
 3281 019e 402B     		cmp	r3, #64
 3282 01a0 07D0     		beq	.L168
2024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Enable SPI peripheral */
2026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_ENABLE(hspi);
 3283              		.loc 1 2026 5
 3284 01a2 FB68     		ldr	r3, [r7, #12]
 3285 01a4 1B68     		ldr	r3, [r3]
 3286 01a6 1A68     		ldr	r2, [r3]
 3287 01a8 FB68     		ldr	r3, [r7, #12]
 3288 01aa 1B68     		ldr	r3, [r3]
 3289 01ac 42F04002 		orr	r2, r2, #64
 3290 01b0 1A60     		str	r2, [r3]
 3291              	.L168:
2027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Unlocked */
2030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 3292              		.loc 1 2030 3
 3293 01b2 FB68     		ldr	r3, [r7, #12]
 3294 01b4 0022     		movs	r2, #0
 3295 01b6 83F85020 		strb	r2, [r3, #80]
2031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable the SPI Error Interrupt Bit */
2033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
 3296              		.loc 1 2033 3
 3297 01ba FB68     		ldr	r3, [r7, #12]
 3298 01bc 1B68     		ldr	r3, [r3]
 3299 01be 5A68     		ldr	r2, [r3, #4]
 3300 01c0 FB68     		ldr	r3, [r7, #12]
 3301 01c2 1B68     		ldr	r3, [r3]
 3302 01c4 42F02002 		orr	r2, r2, #32
 3303 01c8 5A60     		str	r2, [r3, #4]
2034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable Tx DMA Request */
2036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 3304              		.loc 1 2036 3
 3305 01ca FB68     		ldr	r3, [r7, #12]
 3306 01cc 1B68     		ldr	r3, [r3]
 3307 01ce 5A68     		ldr	r2, [r3, #4]
 3308 01d0 FB68     		ldr	r3, [r7, #12]
 3309 01d2 1B68     		ldr	r3, [r3]
 3310 01d4 42F00202 		orr	r2, r2, #2
 3311 01d8 5A60     		str	r2, [r3, #4]
2037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return HAL_OK;
 3312              		.loc 1 2038 10
 3313 01da 0023     		movs	r3, #0
 3314              	.L159:
2039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 3315              		.loc 1 2039 1
 3316 01dc 1846     		mov	r0, r3
 3317 01de 1837     		adds	r7, r7, #24
 3318              	.LCFI67:
 3319              		.cfi_def_cfa_offset 8
 3320 01e0 BD46     		mov	sp, r7
ARM GAS  /tmp/ccFW5O3y.s 			page 95


 3321              	.LCFI68:
 3322              		.cfi_def_cfa_register 13
 3323              		@ sp needed
 3324 01e2 80BD     		pop	{r7, pc}
 3325              	.L170:
 3326              		.align	2
 3327              	.L169:
 3328 01e4 00000000 		.word	SPI_DMAHalfReceiveCplt
 3329 01e8 00000000 		.word	SPI_DMAReceiveCplt
 3330 01ec 00000000 		.word	SPI_DMAHalfTransmitReceiveCplt
 3331 01f0 00000000 		.word	SPI_DMATransmitReceiveCplt
 3332 01f4 00000000 		.word	SPI_DMAError
 3333              		.cfi_endproc
 3334              	.LFE77:
 3336              		.section	.text.HAL_SPI_Abort,"ax",%progbits
 3337              		.align	1
 3338              		.global	HAL_SPI_Abort
 3339              		.syntax unified
 3340              		.thumb
 3341              		.thumb_func
 3343              	HAL_SPI_Abort:
 3344              	.LFB78:
2040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Abort ongoing transfer (blocking mode).
2043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi SPI handle.
2044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @note   This procedure could be used for aborting any ongoing transfer (Tx and Rx),
2045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         started in Interrupt or DMA mode.
2046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         This procedure performs following operations :
2047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           - Disable SPI Interrupts (depending of transfer direction)
2048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
2050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           - Set handle State to READY
2051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
2052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
2053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Abort(SPI_HandleTypeDef *hspi)
2055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 3345              		.loc 1 2055 1
 3346              		.cfi_startproc
 3347              		@ args = 0, pretend = 0, frame = 24
 3348              		@ frame_needed = 1, uses_anonymous_args = 0
 3349 0000 80B5     		push	{r7, lr}
 3350              	.LCFI69:
 3351              		.cfi_def_cfa_offset 8
 3352              		.cfi_offset 7, -8
 3353              		.cfi_offset 14, -4
 3354 0002 86B0     		sub	sp, sp, #24
 3355              	.LCFI70:
 3356              		.cfi_def_cfa_offset 32
 3357 0004 00AF     		add	r7, sp, #0
 3358              	.LCFI71:
 3359              		.cfi_def_cfa_register 7
 3360 0006 7860     		str	r0, [r7, #4]
2056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
2057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t count;
2058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t resetcount;
ARM GAS  /tmp/ccFW5O3y.s 			page 96


2059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Initialized local variable  */
2061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   errorcode = HAL_OK;
 3361              		.loc 1 2061 13
 3362 0008 0023     		movs	r3, #0
 3363 000a FB75     		strb	r3, [r7, #23]
2062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 3364              		.loc 1 2062 61
 3365 000c 6A4B     		ldr	r3, .L189
 3366 000e 1B68     		ldr	r3, [r3]
 3367 0010 6A4A     		ldr	r2, .L189+4
 3368 0012 A2FB0323 		umull	r2, r3, r2, r3
 3369 0016 5B0A     		lsrs	r3, r3, #9
 3370              		.loc 1 2062 36
 3371 0018 6422     		movs	r2, #100
 3372 001a 02FB03F3 		mul	r3, r2, r3
 3373              		.loc 1 2062 14
 3374 001e FB60     		str	r3, [r7, #12]
2063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   count = resetcount;
 3375              		.loc 1 2063 9
 3376 0020 FB68     		ldr	r3, [r7, #12]
 3377 0022 3B61     		str	r3, [r7, #16]
2064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Clear ERRIE interrupt to avoid error interrupts generation during Abort procedure */
2066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_ERRIE);
 3378              		.loc 1 2066 3
 3379 0024 7B68     		ldr	r3, [r7, #4]
 3380 0026 1B68     		ldr	r3, [r3]
 3381 0028 5A68     		ldr	r2, [r3, #4]
 3382 002a 7B68     		ldr	r3, [r7, #4]
 3383 002c 1B68     		ldr	r3, [r3]
 3384 002e 22F02002 		bic	r2, r2, #32
 3385 0032 5A60     		str	r2, [r3, #4]
2067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable TXEIE, RXNEIE and ERRIE(mode fault event, overrun error, TI frame error) interrupts */
2069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXEIE))
 3386              		.loc 1 2069 7
 3387 0034 7B68     		ldr	r3, [r7, #4]
 3388 0036 1B68     		ldr	r3, [r3]
 3389 0038 5B68     		ldr	r3, [r3, #4]
 3390 003a 03F08003 		and	r3, r3, #128
 3391              		.loc 1 2069 6
 3392 003e 002B     		cmp	r3, #0
 3393 0040 17D0     		beq	.L172
2070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxISR = SPI_AbortTx_ISR;
 3394              		.loc 1 2071 17
 3395 0042 7B68     		ldr	r3, [r7, #4]
 3396 0044 5E4A     		ldr	r2, .L189+8
 3397 0046 5A64     		str	r2, [r3, #68]
 3398              	.L175:
2072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
2073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     do
2074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (count == 0U)
 3399              		.loc 1 2075 17
 3400 0048 3B69     		ldr	r3, [r7, #16]
ARM GAS  /tmp/ccFW5O3y.s 			page 97


 3401              		.loc 1 2075 10
 3402 004a 002B     		cmp	r3, #0
 3403 004c 06D1     		bne	.L173
2076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 3404              		.loc 1 2077 9
 3405 004e 7B68     		ldr	r3, [r7, #4]
 3406 0050 5B6D     		ldr	r3, [r3, #84]
 3407 0052 43F04002 		orr	r2, r3, #64
 3408 0056 7B68     		ldr	r3, [r7, #4]
 3409 0058 5A65     		str	r2, [r3, #84]
2078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 3410              		.loc 1 2078 9
 3411 005a 08E0     		b	.L174
 3412              	.L173:
2079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       count--;
 3413              		.loc 1 2080 12
 3414 005c 3B69     		ldr	r3, [r7, #16]
 3415 005e 013B     		subs	r3, r3, #1
 3416 0060 3B61     		str	r3, [r7, #16]
2081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
 3417              		.loc 1 2081 18
 3418 0062 7B68     		ldr	r3, [r7, #4]
 3419 0064 93F85130 		ldrb	r3, [r3, #81]
 3420 0068 DBB2     		uxtb	r3, r3
 3421              		.loc 1 2081 26
 3422 006a 072B     		cmp	r3, #7
 3423 006c ECD1     		bne	.L175
 3424              	.L174:
2082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Reset Timeout Counter */
2083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     count = resetcount;
 3425              		.loc 1 2083 11
 3426 006e FB68     		ldr	r3, [r7, #12]
 3427 0070 3B61     		str	r3, [r7, #16]
 3428              	.L172:
2084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE))
 3429              		.loc 1 2086 7
 3430 0072 7B68     		ldr	r3, [r7, #4]
 3431 0074 1B68     		ldr	r3, [r3]
 3432 0076 5B68     		ldr	r3, [r3, #4]
 3433 0078 03F04003 		and	r3, r3, #64
 3434              		.loc 1 2086 6
 3435 007c 002B     		cmp	r3, #0
 3436 007e 17D0     		beq	.L176
2087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxISR = SPI_AbortRx_ISR;
 3437              		.loc 1 2088 17
 3438 0080 7B68     		ldr	r3, [r7, #4]
 3439 0082 504A     		ldr	r2, .L189+12
 3440 0084 1A64     		str	r2, [r3, #64]
 3441              	.L179:
2089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
2090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     do
2091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
ARM GAS  /tmp/ccFW5O3y.s 			page 98


2092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (count == 0U)
 3442              		.loc 1 2092 17
 3443 0086 3B69     		ldr	r3, [r7, #16]
 3444              		.loc 1 2092 10
 3445 0088 002B     		cmp	r3, #0
 3446 008a 06D1     		bne	.L177
2093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 3447              		.loc 1 2094 9
 3448 008c 7B68     		ldr	r3, [r7, #4]
 3449 008e 5B6D     		ldr	r3, [r3, #84]
 3450 0090 43F04002 		orr	r2, r3, #64
 3451 0094 7B68     		ldr	r3, [r7, #4]
 3452 0096 5A65     		str	r2, [r3, #84]
2095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 3453              		.loc 1 2095 9
 3454 0098 08E0     		b	.L178
 3455              	.L177:
2096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       count--;
 3456              		.loc 1 2097 12
 3457 009a 3B69     		ldr	r3, [r7, #16]
 3458 009c 013B     		subs	r3, r3, #1
 3459 009e 3B61     		str	r3, [r7, #16]
2098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
 3460              		.loc 1 2098 18
 3461 00a0 7B68     		ldr	r3, [r7, #4]
 3462 00a2 93F85130 		ldrb	r3, [r3, #81]
 3463 00a6 DBB2     		uxtb	r3, r3
 3464              		.loc 1 2098 26
 3465 00a8 072B     		cmp	r3, #7
 3466 00aa ECD1     		bne	.L179
 3467              	.L178:
2099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Reset Timeout Counter */
2100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     count = resetcount;
 3468              		.loc 1 2100 11
 3469 00ac FB68     		ldr	r3, [r7, #12]
 3470 00ae 3B61     		str	r3, [r7, #16]
 3471              	.L176:
2101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable the SPI DMA Tx request if enabled */
2104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN))
 3472              		.loc 1 2104 7
 3473 00b0 7B68     		ldr	r3, [r7, #4]
 3474 00b2 1B68     		ldr	r3, [r3]
 3475 00b4 5B68     		ldr	r3, [r3, #4]
 3476 00b6 03F00203 		and	r3, r3, #2
 3477              		.loc 1 2104 6
 3478 00ba 002B     		cmp	r3, #0
 3479 00bc 2ED0     		beq	.L180
2105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Abort the SPI DMA Tx Stream/Channel : use blocking DMA Abort API (no callback) */
2107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->hdmatx != NULL)
 3480              		.loc 1 2107 13
 3481 00be 7B68     		ldr	r3, [r7, #4]
 3482 00c0 9B6C     		ldr	r3, [r3, #72]
ARM GAS  /tmp/ccFW5O3y.s 			page 99


 3483              		.loc 1 2107 8
 3484 00c2 002B     		cmp	r3, #0
 3485 00c4 2AD0     		beq	.L180
2108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Set the SPI DMA Abort callback :
2110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       will lead to call HAL_SPI_AbortCpltCallback() at end of DMA abort procedure */
2111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = NULL;
 3486              		.loc 1 2111 11
 3487 00c6 7B68     		ldr	r3, [r7, #4]
 3488 00c8 9B6C     		ldr	r3, [r3, #72]
 3489              		.loc 1 2111 39
 3490 00ca 0022     		movs	r2, #0
 3491 00cc 5A63     		str	r2, [r3, #52]
2112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Abort DMA Tx Handle linked to SPI Peripheral */
2114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (HAL_DMA_Abort(hspi->hdmatx) != HAL_OK)
 3492              		.loc 1 2114 11
 3493 00ce 7B68     		ldr	r3, [r7, #4]
 3494 00d0 9B6C     		ldr	r3, [r3, #72]
 3495 00d2 1846     		mov	r0, r3
 3496 00d4 FFF7FEFF 		bl	HAL_DMA_Abort
 3497 00d8 0346     		mov	r3, r0
 3498              		.loc 1 2114 10 discriminator 1
 3499 00da 002B     		cmp	r3, #0
 3500 00dc 02D0     		beq	.L181
2115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 3501              		.loc 1 2116 25
 3502 00de 7B68     		ldr	r3, [r7, #4]
 3503 00e0 4022     		movs	r2, #64
 3504 00e2 5A65     		str	r2, [r3, #84]
 3505              	.L181:
2117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Disable Tx DMA Request */
2120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN));
 3506              		.loc 1 2120 7
 3507 00e4 7B68     		ldr	r3, [r7, #4]
 3508 00e6 1B68     		ldr	r3, [r3]
 3509 00e8 5A68     		ldr	r2, [r3, #4]
 3510 00ea 7B68     		ldr	r3, [r7, #4]
 3511 00ec 1B68     		ldr	r3, [r3]
 3512 00ee 22F00202 		bic	r2, r2, #2
 3513 00f2 5A60     		str	r2, [r3, #4]
 3514              	.L183:
2121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Wait until TXE flag is set */
2123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       do
2124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if (count == 0U)
 3515              		.loc 1 2125 19
 3516 00f4 3B69     		ldr	r3, [r7, #16]
 3517              		.loc 1 2125 12
 3518 00f6 002B     		cmp	r3, #0
 3519 00f8 06D1     		bne	.L182
2126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
2127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
ARM GAS  /tmp/ccFW5O3y.s 			page 100


 3520              		.loc 1 2127 11
 3521 00fa 7B68     		ldr	r3, [r7, #4]
 3522 00fc 5B6D     		ldr	r3, [r3, #84]
 3523 00fe 43F04002 		orr	r2, r3, #64
 3524 0102 7B68     		ldr	r3, [r7, #4]
 3525 0104 5A65     		str	r2, [r3, #84]
2128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           break;
 3526              		.loc 1 2128 11
 3527 0106 09E0     		b	.L180
 3528              	.L182:
2129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
2130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         count--;
 3529              		.loc 1 2130 14
 3530 0108 3B69     		ldr	r3, [r7, #16]
 3531 010a 013B     		subs	r3, r3, #1
 3532 010c 3B61     		str	r3, [r7, #16]
2131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
 3533              		.loc 1 2131 21
 3534 010e 7B68     		ldr	r3, [r7, #4]
 3535 0110 1B68     		ldr	r3, [r3]
 3536              		.loc 1 2131 31
 3537 0112 9B68     		ldr	r3, [r3, #8]
 3538              		.loc 1 2131 36
 3539 0114 03F00203 		and	r3, r3, #2
 3540              		.loc 1 2131 52
 3541 0118 002B     		cmp	r3, #0
 3542 011a EBD0     		beq	.L183
 3543              	.L180:
2132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable the SPI DMA Rx request if enabled */
2136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXDMAEN))
 3544              		.loc 1 2136 7
 3545 011c 7B68     		ldr	r3, [r7, #4]
 3546 011e 1B68     		ldr	r3, [r3]
 3547 0120 5B68     		ldr	r3, [r3, #4]
 3548 0122 03F00103 		and	r3, r3, #1
 3549              		.loc 1 2136 6
 3550 0126 002B     		cmp	r3, #0
 3551 0128 22D0     		beq	.L184
2137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Abort the SPI DMA Rx Stream/Channel : use blocking DMA Abort API (no callback) */
2139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->hdmarx != NULL)
 3552              		.loc 1 2139 13
 3553 012a 7B68     		ldr	r3, [r7, #4]
 3554 012c DB6C     		ldr	r3, [r3, #76]
 3555              		.loc 1 2139 8
 3556 012e 002B     		cmp	r3, #0
 3557 0130 1ED0     		beq	.L184
2140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Set the SPI DMA Abort callback :
2142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       will lead to call HAL_SPI_AbortCpltCallback() at end of DMA abort procedure */
2143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = NULL;
 3558              		.loc 1 2143 11
 3559 0132 7B68     		ldr	r3, [r7, #4]
 3560 0134 DB6C     		ldr	r3, [r3, #76]
ARM GAS  /tmp/ccFW5O3y.s 			page 101


 3561              		.loc 1 2143 39
 3562 0136 0022     		movs	r2, #0
 3563 0138 5A63     		str	r2, [r3, #52]
2144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Abort DMA Rx Handle linked to SPI Peripheral */
2146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (HAL_DMA_Abort(hspi->hdmarx) != HAL_OK)
 3564              		.loc 1 2146 11
 3565 013a 7B68     		ldr	r3, [r7, #4]
 3566 013c DB6C     		ldr	r3, [r3, #76]
 3567 013e 1846     		mov	r0, r3
 3568 0140 FFF7FEFF 		bl	HAL_DMA_Abort
 3569 0144 0346     		mov	r3, r0
 3570              		.loc 1 2146 10 discriminator 1
 3571 0146 002B     		cmp	r3, #0
 3572 0148 02D0     		beq	.L185
2147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 3573              		.loc 1 2148 25
 3574 014a 7B68     		ldr	r3, [r7, #4]
 3575 014c 4022     		movs	r2, #64
 3576 014e 5A65     		str	r2, [r3, #84]
 3577              	.L185:
2149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Disable peripheral */
2152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_DISABLE(hspi);
 3578              		.loc 1 2152 7
 3579 0150 7B68     		ldr	r3, [r7, #4]
 3580 0152 1B68     		ldr	r3, [r3]
 3581 0154 1A68     		ldr	r2, [r3]
 3582 0156 7B68     		ldr	r3, [r7, #4]
 3583 0158 1B68     		ldr	r3, [r3]
 3584 015a 22F04002 		bic	r2, r2, #64
 3585 015e 1A60     		str	r2, [r3]
2153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Disable Rx DMA Request */
2155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_RXDMAEN));
 3586              		.loc 1 2155 7
 3587 0160 7B68     		ldr	r3, [r7, #4]
 3588 0162 1B68     		ldr	r3, [r3]
 3589 0164 5A68     		ldr	r2, [r3, #4]
 3590 0166 7B68     		ldr	r3, [r7, #4]
 3591 0168 1B68     		ldr	r3, [r3]
 3592 016a 22F00102 		bic	r2, r2, #1
 3593 016e 5A60     		str	r2, [r3, #4]
 3594              	.L184:
2156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Reset Tx and Rx transfer counters */
2159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 3595              		.loc 1 2159 21
 3596 0170 7B68     		ldr	r3, [r7, #4]
 3597 0172 0022     		movs	r2, #0
 3598 0174 DA87     		strh	r2, [r3, #62]	@ movhi
2160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 3599              		.loc 1 2160 21
 3600 0176 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccFW5O3y.s 			page 102


 3601 0178 0022     		movs	r2, #0
 3602 017a DA86     		strh	r2, [r3, #54]	@ movhi
2161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check error during Abort procedure */
2163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->ErrorCode == HAL_SPI_ERROR_ABORT)
 3603              		.loc 1 2163 11
 3604 017c 7B68     		ldr	r3, [r7, #4]
 3605 017e 5B6D     		ldr	r3, [r3, #84]
 3606              		.loc 1 2163 6
 3607 0180 402B     		cmp	r3, #64
 3608 0182 02D1     		bne	.L186
2164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* return HAL_Error in case of error during Abort procedure */
2166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     errorcode = HAL_ERROR;
 3609              		.loc 1 2166 15
 3610 0184 0123     		movs	r3, #1
 3611 0186 FB75     		strb	r3, [r7, #23]
 3612 0188 02E0     		b	.L187
 3613              	.L186:
2167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
2169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Reset errorCode */
2171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 3614              		.loc 1 2171 21
 3615 018a 7B68     		ldr	r3, [r7, #4]
 3616 018c 0022     		movs	r2, #0
 3617 018e 5A65     		str	r2, [r3, #84]
 3618              	.L187:
 3619              	.LBB4:
2172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
2175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
 3620              		.loc 1 2175 3
 3621 0190 0023     		movs	r3, #0
 3622 0192 BB60     		str	r3, [r7, #8]
 3623 0194 7B68     		ldr	r3, [r7, #4]
 3624 0196 1B68     		ldr	r3, [r3]
 3625 0198 DB68     		ldr	r3, [r3, #12]
 3626 019a BB60     		str	r3, [r7, #8]
 3627 019c 7B68     		ldr	r3, [r7, #4]
 3628 019e 1B68     		ldr	r3, [r3]
 3629 01a0 9B68     		ldr	r3, [r3, #8]
 3630 01a2 BB60     		str	r3, [r7, #8]
 3631 01a4 BB68     		ldr	r3, [r7, #8]
 3632              	.LBE4:
2176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Restore hspi->state to ready */
2178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 3633              		.loc 1 2178 15
 3634 01a6 7B68     		ldr	r3, [r7, #4]
 3635 01a8 0122     		movs	r2, #1
 3636 01aa 83F85120 		strb	r2, [r3, #81]
2179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
 3637              		.loc 1 2180 10
ARM GAS  /tmp/ccFW5O3y.s 			page 103


 3638 01ae FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
2181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 3639              		.loc 1 2181 1
 3640 01b0 1846     		mov	r0, r3
 3641 01b2 1837     		adds	r7, r7, #24
 3642              	.LCFI72:
 3643              		.cfi_def_cfa_offset 8
 3644 01b4 BD46     		mov	sp, r7
 3645              	.LCFI73:
 3646              		.cfi_def_cfa_register 13
 3647              		@ sp needed
 3648 01b6 80BD     		pop	{r7, pc}
 3649              	.L190:
 3650              		.align	2
 3651              	.L189:
 3652 01b8 00000000 		.word	SystemCoreClock
 3653 01bc F1197605 		.word	91625969
 3654 01c0 00000000 		.word	SPI_AbortTx_ISR
 3655 01c4 00000000 		.word	SPI_AbortRx_ISR
 3656              		.cfi_endproc
 3657              	.LFE78:
 3659              		.section	.text.HAL_SPI_Abort_IT,"ax",%progbits
 3660              		.align	1
 3661              		.global	HAL_SPI_Abort_IT
 3662              		.syntax unified
 3663              		.thumb
 3664              		.thumb_func
 3666              	HAL_SPI_Abort_IT:
 3667              	.LFB79:
2182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Abort ongoing transfer (Interrupt mode).
2185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi SPI handle.
2186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @note   This procedure could be used for aborting any ongoing transfer (Tx and Rx),
2187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         started in Interrupt or DMA mode.
2188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         This procedure performs following operations :
2189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           - Disable SPI Interrupts (depending of transfer direction)
2190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           - Set handle State to READY
2193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *           - At abort completion, call user abort complete callback
2194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
2197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_Abort_IT(SPI_HandleTypeDef *hspi)
2199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 3668              		.loc 1 2199 1
 3669              		.cfi_startproc
 3670              		@ args = 0, pretend = 0, frame = 32
 3671              		@ frame_needed = 1, uses_anonymous_args = 0
 3672 0000 80B5     		push	{r7, lr}
 3673              	.LCFI74:
 3674              		.cfi_def_cfa_offset 8
 3675              		.cfi_offset 7, -8
 3676              		.cfi_offset 14, -4
 3677 0002 88B0     		sub	sp, sp, #32
ARM GAS  /tmp/ccFW5O3y.s 			page 104


 3678              	.LCFI75:
 3679              		.cfi_def_cfa_offset 40
 3680 0004 00AF     		add	r7, sp, #0
 3681              	.LCFI76:
 3682              		.cfi_def_cfa_register 7
 3683 0006 7860     		str	r0, [r7, #4]
2200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode;
2201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t abortcplt ;
2202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t count;
2203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t resetcount;
2204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Initialized local variable  */
2206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   errorcode = HAL_OK;
 3684              		.loc 1 2206 13
 3685 0008 0023     		movs	r3, #0
 3686 000a FB77     		strb	r3, [r7, #31]
2207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   abortcplt = 1U;
 3687              		.loc 1 2207 13
 3688 000c 0123     		movs	r3, #1
 3689 000e BB61     		str	r3, [r7, #24]
2208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   resetcount = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 3690              		.loc 1 2208 61
 3691 0010 6E4B     		ldr	r3, .L212
 3692 0012 1B68     		ldr	r3, [r3]
 3693 0014 6E4A     		ldr	r2, .L212+4
 3694 0016 A2FB0323 		umull	r2, r3, r2, r3
 3695 001a 5B0A     		lsrs	r3, r3, #9
 3696              		.loc 1 2208 36
 3697 001c 6422     		movs	r2, #100
 3698 001e 02FB03F3 		mul	r3, r2, r3
 3699              		.loc 1 2208 14
 3700 0022 3B61     		str	r3, [r7, #16]
2209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   count = resetcount;
 3701              		.loc 1 2209 9
 3702 0024 3B69     		ldr	r3, [r7, #16]
 3703 0026 7B61     		str	r3, [r7, #20]
2210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Clear ERRIE interrupt to avoid error interrupts generation during Abort procedure */
2212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_ERRIE);
 3704              		.loc 1 2212 3
 3705 0028 7B68     		ldr	r3, [r7, #4]
 3706 002a 1B68     		ldr	r3, [r3]
 3707 002c 5A68     		ldr	r2, [r3, #4]
 3708 002e 7B68     		ldr	r3, [r7, #4]
 3709 0030 1B68     		ldr	r3, [r3]
 3710 0032 22F02002 		bic	r2, r2, #32
 3711 0036 5A60     		str	r2, [r3, #4]
2213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Change Rx and Tx Irq Handler to Disable TXEIE, RXNEIE and ERRIE interrupts */
2215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXEIE))
 3712              		.loc 1 2215 7
 3713 0038 7B68     		ldr	r3, [r7, #4]
 3714 003a 1B68     		ldr	r3, [r3]
 3715 003c 5B68     		ldr	r3, [r3, #4]
 3716 003e 03F08003 		and	r3, r3, #128
 3717              		.loc 1 2215 6
 3718 0042 002B     		cmp	r3, #0
ARM GAS  /tmp/ccFW5O3y.s 			page 105


 3719 0044 17D0     		beq	.L192
2216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxISR = SPI_AbortTx_ISR;
 3720              		.loc 1 2217 17
 3721 0046 7B68     		ldr	r3, [r7, #4]
 3722 0048 624A     		ldr	r2, .L212+8
 3723 004a 5A64     		str	r2, [r3, #68]
 3724              	.L195:
2218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
2219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     do
2220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (count == 0U)
 3725              		.loc 1 2221 17
 3726 004c 7B69     		ldr	r3, [r7, #20]
 3727              		.loc 1 2221 10
 3728 004e 002B     		cmp	r3, #0
 3729 0050 06D1     		bne	.L193
2222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 3730              		.loc 1 2223 9
 3731 0052 7B68     		ldr	r3, [r7, #4]
 3732 0054 5B6D     		ldr	r3, [r3, #84]
 3733 0056 43F04002 		orr	r2, r3, #64
 3734 005a 7B68     		ldr	r3, [r7, #4]
 3735 005c 5A65     		str	r2, [r3, #84]
2224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 3736              		.loc 1 2224 9
 3737 005e 08E0     		b	.L194
 3738              	.L193:
2225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       count--;
 3739              		.loc 1 2226 12
 3740 0060 7B69     		ldr	r3, [r7, #20]
 3741 0062 013B     		subs	r3, r3, #1
 3742 0064 7B61     		str	r3, [r7, #20]
2227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
 3743              		.loc 1 2227 18
 3744 0066 7B68     		ldr	r3, [r7, #4]
 3745 0068 93F85130 		ldrb	r3, [r3, #81]
 3746 006c DBB2     		uxtb	r3, r3
 3747              		.loc 1 2227 26
 3748 006e 072B     		cmp	r3, #7
 3749 0070 ECD1     		bne	.L195
 3750              	.L194:
2228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Reset Timeout Counter */
2229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     count = resetcount;
 3751              		.loc 1 2229 11
 3752 0072 3B69     		ldr	r3, [r7, #16]
 3753 0074 7B61     		str	r3, [r7, #20]
 3754              	.L192:
2230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXNEIE))
 3755              		.loc 1 2232 7
 3756 0076 7B68     		ldr	r3, [r7, #4]
 3757 0078 1B68     		ldr	r3, [r3]
 3758 007a 5B68     		ldr	r3, [r3, #4]
ARM GAS  /tmp/ccFW5O3y.s 			page 106


 3759 007c 03F04003 		and	r3, r3, #64
 3760              		.loc 1 2232 6
 3761 0080 002B     		cmp	r3, #0
 3762 0082 17D0     		beq	.L196
2233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxISR = SPI_AbortRx_ISR;
 3763              		.loc 1 2234 17
 3764 0084 7B68     		ldr	r3, [r7, #4]
 3765 0086 544A     		ldr	r2, .L212+12
 3766 0088 1A64     		str	r2, [r3, #64]
 3767              	.L199:
2235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Wait HAL_SPI_STATE_ABORT state */
2236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     do
2237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (count == 0U)
 3768              		.loc 1 2238 17
 3769 008a 7B69     		ldr	r3, [r7, #20]
 3770              		.loc 1 2238 10
 3771 008c 002B     		cmp	r3, #0
 3772 008e 06D1     		bne	.L197
2239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 3773              		.loc 1 2240 9
 3774 0090 7B68     		ldr	r3, [r7, #4]
 3775 0092 5B6D     		ldr	r3, [r3, #84]
 3776 0094 43F04002 		orr	r2, r3, #64
 3777 0098 7B68     		ldr	r3, [r7, #4]
 3778 009a 5A65     		str	r2, [r3, #84]
2241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         break;
 3779              		.loc 1 2241 9
 3780 009c 08E0     		b	.L198
 3781              	.L197:
2242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       count--;
 3782              		.loc 1 2243 12
 3783 009e 7B69     		ldr	r3, [r7, #20]
 3784 00a0 013B     		subs	r3, r3, #1
 3785 00a2 7B61     		str	r3, [r7, #20]
2244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     } while (hspi->State != HAL_SPI_STATE_ABORT);
 3786              		.loc 1 2244 18
 3787 00a4 7B68     		ldr	r3, [r7, #4]
 3788 00a6 93F85130 		ldrb	r3, [r3, #81]
 3789 00aa DBB2     		uxtb	r3, r3
 3790              		.loc 1 2244 26
 3791 00ac 072B     		cmp	r3, #7
 3792 00ae ECD1     		bne	.L199
 3793              	.L198:
2245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Reset Timeout Counter */
2246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     count = resetcount;
 3794              		.loc 1 2246 11
 3795 00b0 3B69     		ldr	r3, [r7, #16]
 3796 00b2 7B61     		str	r3, [r7, #20]
 3797              	.L196:
2247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to SPI Handle, DMA Abort complete callbacks sho
2250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      before any call to DMA Abort functions */
ARM GAS  /tmp/ccFW5O3y.s 			page 107


2251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* DMA Tx Handle is valid */
2252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->hdmatx != NULL)
 3798              		.loc 1 2252 11
 3799 00b4 7B68     		ldr	r3, [r7, #4]
 3800 00b6 9B6C     		ldr	r3, [r3, #72]
 3801              		.loc 1 2252 6
 3802 00b8 002B     		cmp	r3, #0
 3803 00ba 0FD0     		beq	.L200
2253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
2255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        Otherwise, set it to NULL */
2256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN))
 3804              		.loc 1 2256 9
 3805 00bc 7B68     		ldr	r3, [r7, #4]
 3806 00be 1B68     		ldr	r3, [r3]
 3807 00c0 5B68     		ldr	r3, [r3, #4]
 3808 00c2 03F00203 		and	r3, r3, #2
 3809              		.loc 1 2256 8
 3810 00c6 002B     		cmp	r3, #0
 3811 00c8 04D0     		beq	.L201
2257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = SPI_DMATxAbortCallback;
 3812              		.loc 1 2258 11
 3813 00ca 7B68     		ldr	r3, [r7, #4]
 3814 00cc 9B6C     		ldr	r3, [r3, #72]
 3815              		.loc 1 2258 39
 3816 00ce 434A     		ldr	r2, .L212+16
 3817 00d0 5A63     		str	r2, [r3, #52]
 3818 00d2 03E0     		b	.L200
 3819              	.L201:
2259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
2261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->hdmatx->XferAbortCallback = NULL;
 3820              		.loc 1 2262 11
 3821 00d4 7B68     		ldr	r3, [r7, #4]
 3822 00d6 9B6C     		ldr	r3, [r3, #72]
 3823              		.loc 1 2262 39
 3824 00d8 0022     		movs	r2, #0
 3825 00da 5A63     		str	r2, [r3, #52]
 3826              	.L200:
2263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* DMA Rx Handle is valid */
2266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->hdmarx != NULL)
 3827              		.loc 1 2266 11
 3828 00dc 7B68     		ldr	r3, [r7, #4]
 3829 00de DB6C     		ldr	r3, [r3, #76]
 3830              		.loc 1 2266 6
 3831 00e0 002B     		cmp	r3, #0
 3832 00e2 0FD0     		beq	.L202
2267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
2269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****        Otherwise, set it to NULL */
2270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXDMAEN))
 3833              		.loc 1 2270 9
 3834 00e4 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccFW5O3y.s 			page 108


 3835 00e6 1B68     		ldr	r3, [r3]
 3836 00e8 5B68     		ldr	r3, [r3, #4]
 3837 00ea 03F00103 		and	r3, r3, #1
 3838              		.loc 1 2270 8
 3839 00ee 002B     		cmp	r3, #0
 3840 00f0 04D0     		beq	.L203
2271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = SPI_DMARxAbortCallback;
 3841              		.loc 1 2272 11
 3842 00f2 7B68     		ldr	r3, [r7, #4]
 3843 00f4 DB6C     		ldr	r3, [r3, #76]
 3844              		.loc 1 2272 39
 3845 00f6 3A4A     		ldr	r2, .L212+20
 3846 00f8 5A63     		str	r2, [r3, #52]
 3847 00fa 03E0     		b	.L202
 3848              	.L203:
2273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
2275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->hdmarx->XferAbortCallback = NULL;
 3849              		.loc 1 2276 11
 3850 00fc 7B68     		ldr	r3, [r7, #4]
 3851 00fe DB6C     		ldr	r3, [r3, #76]
 3852              		.loc 1 2276 39
 3853 0100 0022     		movs	r2, #0
 3854 0102 5A63     		str	r2, [r3, #52]
 3855              	.L202:
2277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable the SPI DMA Tx request if enabled */
2281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_TXDMAEN))
 3856              		.loc 1 2281 7
 3857 0104 7B68     		ldr	r3, [r7, #4]
 3858 0106 1B68     		ldr	r3, [r3]
 3859 0108 5B68     		ldr	r3, [r3, #4]
 3860 010a 03F00203 		and	r3, r3, #2
 3861              		.loc 1 2281 6
 3862 010e 002B     		cmp	r3, #0
 3863 0110 15D0     		beq	.L204
2282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Abort the SPI DMA Tx Stream/Channel */
2284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->hdmatx != NULL)
 3864              		.loc 1 2284 13
 3865 0112 7B68     		ldr	r3, [r7, #4]
 3866 0114 9B6C     		ldr	r3, [r3, #72]
 3867              		.loc 1 2284 8
 3868 0116 002B     		cmp	r3, #0
 3869 0118 11D0     		beq	.L204
2285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Abort DMA Tx Handle linked to SPI Peripheral */
2287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (HAL_DMA_Abort_IT(hspi->hdmatx) != HAL_OK)
 3870              		.loc 1 2287 11
 3871 011a 7B68     		ldr	r3, [r7, #4]
 3872 011c 9B6C     		ldr	r3, [r3, #72]
 3873 011e 1846     		mov	r0, r3
 3874 0120 FFF7FEFF 		bl	HAL_DMA_Abort_IT
ARM GAS  /tmp/ccFW5O3y.s 			page 109


 3875 0124 0346     		mov	r3, r0
 3876              		.loc 1 2287 10 discriminator 1
 3877 0126 002B     		cmp	r3, #0
 3878 0128 07D0     		beq	.L205
2288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->hdmatx->XferAbortCallback = NULL;
 3879              		.loc 1 2289 13
 3880 012a 7B68     		ldr	r3, [r7, #4]
 3881 012c 9B6C     		ldr	r3, [r3, #72]
 3882              		.loc 1 2289 41
 3883 012e 0022     		movs	r2, #0
 3884 0130 5A63     		str	r2, [r3, #52]
2290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 3885              		.loc 1 2290 25
 3886 0132 7B68     		ldr	r3, [r7, #4]
 3887 0134 4022     		movs	r2, #64
 3888 0136 5A65     		str	r2, [r3, #84]
 3889 0138 01E0     		b	.L204
 3890              	.L205:
2291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
2293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         abortcplt = 0U;
 3891              		.loc 1 2294 19
 3892 013a 0023     		movs	r3, #0
 3893 013c BB61     		str	r3, [r7, #24]
 3894              	.L204:
2295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable the SPI DMA Rx request if enabled */
2299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (HAL_IS_BIT_SET(hspi->Instance->CR2, SPI_CR2_RXDMAEN))
 3895              		.loc 1 2299 7
 3896 013e 7B68     		ldr	r3, [r7, #4]
 3897 0140 1B68     		ldr	r3, [r3]
 3898 0142 5B68     		ldr	r3, [r3, #4]
 3899 0144 03F00103 		and	r3, r3, #1
 3900              		.loc 1 2299 6
 3901 0148 002B     		cmp	r3, #0
 3902 014a 15D0     		beq	.L206
2300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Abort the SPI DMA Rx Stream/Channel */
2302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->hdmarx != NULL)
 3903              		.loc 1 2302 13
 3904 014c 7B68     		ldr	r3, [r7, #4]
 3905 014e DB6C     		ldr	r3, [r3, #76]
 3906              		.loc 1 2302 8
 3907 0150 002B     		cmp	r3, #0
 3908 0152 11D0     		beq	.L206
2303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Abort DMA Rx Handle linked to SPI Peripheral */
2305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (HAL_DMA_Abort_IT(hspi->hdmarx) !=  HAL_OK)
 3909              		.loc 1 2305 11
 3910 0154 7B68     		ldr	r3, [r7, #4]
 3911 0156 DB6C     		ldr	r3, [r3, #76]
 3912 0158 1846     		mov	r0, r3
 3913 015a FFF7FEFF 		bl	HAL_DMA_Abort_IT
ARM GAS  /tmp/ccFW5O3y.s 			page 110


 3914 015e 0346     		mov	r3, r0
 3915              		.loc 1 2305 10 discriminator 1
 3916 0160 002B     		cmp	r3, #0
 3917 0162 07D0     		beq	.L207
2306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->hdmarx->XferAbortCallback = NULL;
 3918              		.loc 1 2307 13
 3919 0164 7B68     		ldr	r3, [r7, #4]
 3920 0166 DB6C     		ldr	r3, [r3, #76]
 3921              		.loc 1 2307 41
 3922 0168 0022     		movs	r2, #0
 3923 016a 5A63     		str	r2, [r3, #52]
2308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->ErrorCode = HAL_SPI_ERROR_ABORT;
 3924              		.loc 1 2308 25
 3925 016c 7B68     		ldr	r3, [r7, #4]
 3926 016e 4022     		movs	r2, #64
 3927 0170 5A65     		str	r2, [r3, #84]
 3928 0172 01E0     		b	.L206
 3929              	.L207:
2309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
2311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         abortcplt = 0U;
 3930              		.loc 1 2312 19
 3931 0174 0023     		movs	r3, #0
 3932 0176 BB61     		str	r3, [r7, #24]
 3933              	.L206:
2313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (abortcplt == 1U)
 3934              		.loc 1 2317 6
 3935 0178 BB69     		ldr	r3, [r7, #24]
 3936 017a 012B     		cmp	r3, #1
 3937 017c 21D1     		bne	.L208
2318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Reset Tx and Rx transfer counters */
2320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxXferCount = 0U;
 3938              		.loc 1 2320 23
 3939 017e 7B68     		ldr	r3, [r7, #4]
 3940 0180 0022     		movs	r2, #0
 3941 0182 DA87     		strh	r2, [r3, #62]	@ movhi
2321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxXferCount = 0U;
 3942              		.loc 1 2321 23
 3943 0184 7B68     		ldr	r3, [r7, #4]
 3944 0186 0022     		movs	r2, #0
 3945 0188 DA86     		strh	r2, [r3, #54]	@ movhi
2322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check error during Abort procedure */
2324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->ErrorCode == HAL_SPI_ERROR_ABORT)
 3946              		.loc 1 2324 13
 3947 018a 7B68     		ldr	r3, [r7, #4]
 3948 018c 5B6D     		ldr	r3, [r3, #84]
 3949              		.loc 1 2324 8
 3950 018e 402B     		cmp	r3, #64
 3951 0190 02D1     		bne	.L209
ARM GAS  /tmp/ccFW5O3y.s 			page 111


2325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* return HAL_Error in case of error during Abort procedure */
2327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       errorcode = HAL_ERROR;
 3952              		.loc 1 2327 17
 3953 0192 0123     		movs	r3, #1
 3954 0194 FB77     		strb	r3, [r7, #31]
 3955 0196 02E0     		b	.L210
 3956              	.L209:
2328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
2330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Reset errorCode */
2332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 3957              		.loc 1 2332 23
 3958 0198 7B68     		ldr	r3, [r7, #4]
 3959 019a 0022     		movs	r2, #0
 3960 019c 5A65     		str	r2, [r3, #84]
 3961              	.L210:
 3962              	.LBB5:
2333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Clear the Error flags in the SR register */
2336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
 3963              		.loc 1 2336 5
 3964 019e 0023     		movs	r3, #0
 3965 01a0 FB60     		str	r3, [r7, #12]
 3966 01a2 7B68     		ldr	r3, [r7, #4]
 3967 01a4 1B68     		ldr	r3, [r3]
 3968 01a6 DB68     		ldr	r3, [r3, #12]
 3969 01a8 FB60     		str	r3, [r7, #12]
 3970 01aa 7B68     		ldr	r3, [r7, #4]
 3971 01ac 1B68     		ldr	r3, [r3]
 3972 01ae 9B68     		ldr	r3, [r3, #8]
 3973 01b0 FB60     		str	r3, [r7, #12]
 3974 01b2 FB68     		ldr	r3, [r7, #12]
 3975              	.LBE5:
2337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Restore hspi->State to Ready */
2339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 3976              		.loc 1 2339 17
 3977 01b4 7B68     		ldr	r3, [r7, #4]
 3978 01b6 0122     		movs	r2, #1
 3979 01b8 83F85120 		strb	r2, [r3, #81]
2340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->AbortCpltCallback(hspi);
2344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
2345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     HAL_SPI_AbortCpltCallback(hspi);
 3980              		.loc 1 2345 5
 3981 01bc 7868     		ldr	r0, [r7, #4]
 3982 01be FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 3983              	.L208:
2346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
ARM GAS  /tmp/ccFW5O3y.s 			page 112


 3984              		.loc 1 2349 10
 3985 01c2 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
2350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 3986              		.loc 1 2350 1
 3987 01c4 1846     		mov	r0, r3
 3988 01c6 2037     		adds	r7, r7, #32
 3989              	.LCFI77:
 3990              		.cfi_def_cfa_offset 8
 3991 01c8 BD46     		mov	sp, r7
 3992              	.LCFI78:
 3993              		.cfi_def_cfa_register 13
 3994              		@ sp needed
 3995 01ca 80BD     		pop	{r7, pc}
 3996              	.L213:
 3997              		.align	2
 3998              	.L212:
 3999 01cc 00000000 		.word	SystemCoreClock
 4000 01d0 F1197605 		.word	91625969
 4001 01d4 00000000 		.word	SPI_AbortTx_ISR
 4002 01d8 00000000 		.word	SPI_AbortRx_ISR
 4003 01dc 00000000 		.word	SPI_DMATxAbortCallback
 4004 01e0 00000000 		.word	SPI_DMARxAbortCallback
 4005              		.cfi_endproc
 4006              	.LFE79:
 4008              		.section	.text.HAL_SPI_DMAPause,"ax",%progbits
 4009              		.align	1
 4010              		.global	HAL_SPI_DMAPause
 4011              		.syntax unified
 4012              		.thumb
 4013              		.thumb_func
 4015              	HAL_SPI_DMAPause:
 4016              	.LFB80:
2351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Pause the DMA Transfer.
2354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
2357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAPause(SPI_HandleTypeDef *hspi)
2359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 4017              		.loc 1 2359 1
 4018              		.cfi_startproc
 4019              		@ args = 0, pretend = 0, frame = 8
 4020              		@ frame_needed = 1, uses_anonymous_args = 0
 4021              		@ link register save eliminated.
 4022 0000 80B4     		push	{r7}
 4023              	.LCFI79:
 4024              		.cfi_def_cfa_offset 4
 4025              		.cfi_offset 7, -4
 4026 0002 83B0     		sub	sp, sp, #12
 4027              	.LCFI80:
 4028              		.cfi_def_cfa_offset 16
 4029 0004 00AF     		add	r7, sp, #0
 4030              	.LCFI81:
 4031              		.cfi_def_cfa_register 7
 4032 0006 7860     		str	r0, [r7, #4]
ARM GAS  /tmp/ccFW5O3y.s 			page 113


2360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Locked */
2361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
 4033              		.loc 1 2361 3
 4034 0008 7B68     		ldr	r3, [r7, #4]
 4035 000a 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 4036 000e 012B     		cmp	r3, #1
 4037 0010 01D1     		bne	.L215
 4038              		.loc 1 2361 3 is_stmt 0 discriminator 1
 4039 0012 0223     		movs	r3, #2
 4040              		.loc 1 2361 3
 4041 0014 10E0     		b	.L216
 4042              	.L215:
 4043              		.loc 1 2361 3 discriminator 2
 4044 0016 7B68     		ldr	r3, [r7, #4]
 4045 0018 0122     		movs	r2, #1
 4046 001a 83F85020 		strb	r2, [r3, #80]
2362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable the SPI DMA Tx & Rx requests */
2364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 4047              		.loc 1 2364 3 is_stmt 1
 4048 001e 7B68     		ldr	r3, [r7, #4]
 4049 0020 1B68     		ldr	r3, [r3]
 4050 0022 5A68     		ldr	r2, [r3, #4]
 4051 0024 7B68     		ldr	r3, [r7, #4]
 4052 0026 1B68     		ldr	r3, [r3]
 4053 0028 22F00302 		bic	r2, r2, #3
 4054 002c 5A60     		str	r2, [r3, #4]
2365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Unlocked */
2367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 4055              		.loc 1 2367 3
 4056 002e 7B68     		ldr	r3, [r7, #4]
 4057 0030 0022     		movs	r2, #0
 4058 0032 83F85020 		strb	r2, [r3, #80]
2368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return HAL_OK;
 4059              		.loc 1 2369 10
 4060 0036 0023     		movs	r3, #0
 4061              	.L216:
2370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 4062              		.loc 1 2370 1
 4063 0038 1846     		mov	r0, r3
 4064 003a 0C37     		adds	r7, r7, #12
 4065              	.LCFI82:
 4066              		.cfi_def_cfa_offset 4
 4067 003c BD46     		mov	sp, r7
 4068              	.LCFI83:
 4069              		.cfi_def_cfa_register 13
 4070              		@ sp needed
 4071 003e 80BC     		pop	{r7}
 4072              	.LCFI84:
 4073              		.cfi_restore 7
 4074              		.cfi_def_cfa_offset 0
 4075 0040 7047     		bx	lr
 4076              		.cfi_endproc
 4077              	.LFE80:
 4079              		.section	.text.HAL_SPI_DMAResume,"ax",%progbits
ARM GAS  /tmp/ccFW5O3y.s 			page 114


 4080              		.align	1
 4081              		.global	HAL_SPI_DMAResume
 4082              		.syntax unified
 4083              		.thumb
 4084              		.thumb_func
 4086              	HAL_SPI_DMAResume:
 4087              	.LFB81:
2371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Resume the DMA Transfer.
2374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
2377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAResume(SPI_HandleTypeDef *hspi)
2379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 4088              		.loc 1 2379 1
 4089              		.cfi_startproc
 4090              		@ args = 0, pretend = 0, frame = 8
 4091              		@ frame_needed = 1, uses_anonymous_args = 0
 4092              		@ link register save eliminated.
 4093 0000 80B4     		push	{r7}
 4094              	.LCFI85:
 4095              		.cfi_def_cfa_offset 4
 4096              		.cfi_offset 7, -4
 4097 0002 83B0     		sub	sp, sp, #12
 4098              	.LCFI86:
 4099              		.cfi_def_cfa_offset 16
 4100 0004 00AF     		add	r7, sp, #0
 4101              	.LCFI87:
 4102              		.cfi_def_cfa_register 7
 4103 0006 7860     		str	r0, [r7, #4]
2380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Locked */
2381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_LOCK(hspi);
 4104              		.loc 1 2381 3
 4105 0008 7B68     		ldr	r3, [r7, #4]
 4106 000a 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 4107 000e 012B     		cmp	r3, #1
 4108 0010 01D1     		bne	.L218
 4109              		.loc 1 2381 3 is_stmt 0 discriminator 1
 4110 0012 0223     		movs	r3, #2
 4111              		.loc 1 2381 3
 4112 0014 10E0     		b	.L219
 4113              	.L218:
 4114              		.loc 1 2381 3 discriminator 2
 4115 0016 7B68     		ldr	r3, [r7, #4]
 4116 0018 0122     		movs	r2, #1
 4117 001a 83F85020 		strb	r2, [r3, #80]
2382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable the SPI DMA Tx & Rx requests */
2384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 4118              		.loc 1 2384 3 is_stmt 1
 4119 001e 7B68     		ldr	r3, [r7, #4]
 4120 0020 1B68     		ldr	r3, [r3]
 4121 0022 5A68     		ldr	r2, [r3, #4]
 4122 0024 7B68     		ldr	r3, [r7, #4]
 4123 0026 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccFW5O3y.s 			page 115


 4124 0028 42F00302 		orr	r2, r2, #3
 4125 002c 5A60     		str	r2, [r3, #4]
2385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Process Unlocked */
2387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_UNLOCK(hspi);
 4126              		.loc 1 2387 3
 4127 002e 7B68     		ldr	r3, [r7, #4]
 4128 0030 0022     		movs	r2, #0
 4129 0032 83F85020 		strb	r2, [r3, #80]
2388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return HAL_OK;
 4130              		.loc 1 2389 10
 4131 0036 0023     		movs	r3, #0
 4132              	.L219:
2390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 4133              		.loc 1 2390 1
 4134 0038 1846     		mov	r0, r3
 4135 003a 0C37     		adds	r7, r7, #12
 4136              	.LCFI88:
 4137              		.cfi_def_cfa_offset 4
 4138 003c BD46     		mov	sp, r7
 4139              	.LCFI89:
 4140              		.cfi_def_cfa_register 13
 4141              		@ sp needed
 4142 003e 80BC     		pop	{r7}
 4143              	.LCFI90:
 4144              		.cfi_restore 7
 4145              		.cfi_def_cfa_offset 0
 4146 0040 7047     		bx	lr
 4147              		.cfi_endproc
 4148              	.LFE81:
 4150              		.section	.text.HAL_SPI_DMAStop,"ax",%progbits
 4151              		.align	1
 4152              		.global	HAL_SPI_DMAStop
 4153              		.syntax unified
 4154              		.thumb
 4155              		.thumb_func
 4157              	HAL_SPI_DMAStop:
 4158              	.LFB82:
2391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Stop the DMA Transfer.
2394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
2397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_StatusTypeDef HAL_SPI_DMAStop(SPI_HandleTypeDef *hspi)
2399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 4159              		.loc 1 2399 1
 4160              		.cfi_startproc
 4161              		@ args = 0, pretend = 0, frame = 16
 4162              		@ frame_needed = 1, uses_anonymous_args = 0
 4163 0000 80B5     		push	{r7, lr}
 4164              	.LCFI91:
 4165              		.cfi_def_cfa_offset 8
 4166              		.cfi_offset 7, -8
 4167              		.cfi_offset 14, -4
ARM GAS  /tmp/ccFW5O3y.s 			page 116


 4168 0002 84B0     		sub	sp, sp, #16
 4169              	.LCFI92:
 4170              		.cfi_def_cfa_offset 24
 4171 0004 00AF     		add	r7, sp, #0
 4172              	.LCFI93:
 4173              		.cfi_def_cfa_register 7
 4174 0006 7860     		str	r0, [r7, #4]
2400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_StatusTypeDef errorcode = HAL_OK;
 4175              		.loc 1 2400 21
 4176 0008 0023     		movs	r3, #0
 4177 000a FB73     		strb	r3, [r7, #15]
2401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* The Lock is not implemented on this API to allow the user application
2402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      to call the HAL SPI API under callbacks HAL_SPI_TxCpltCallback() or HAL_SPI_RxCpltCallback() o
2403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      HAL_SPI_TxRxCpltCallback():
2404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
2405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      and the correspond call back is executed HAL_SPI_TxCpltCallback() or HAL_SPI_RxCpltCallback() 
2406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      HAL_SPI_TxRxCpltCallback()
2407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      */
2408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Abort the SPI DMA tx Stream/Channel  */
2410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->hdmatx != NULL)
 4178              		.loc 1 2410 11
 4179 000c 7B68     		ldr	r3, [r7, #4]
 4180 000e 9B6C     		ldr	r3, [r3, #72]
 4181              		.loc 1 2410 6
 4182 0010 002B     		cmp	r3, #0
 4183 0012 0FD0     		beq	.L221
2411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (HAL_OK != HAL_DMA_Abort(hspi->hdmatx))
 4184              		.loc 1 2412 19
 4185 0014 7B68     		ldr	r3, [r7, #4]
 4186 0016 9B6C     		ldr	r3, [r3, #72]
 4187 0018 1846     		mov	r0, r3
 4188 001a FFF7FEFF 		bl	HAL_DMA_Abort
 4189 001e 0346     		mov	r3, r0
 4190              		.loc 1 2412 8 discriminator 1
 4191 0020 002B     		cmp	r3, #0
 4192 0022 07D0     		beq	.L221
2413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 4193              		.loc 1 2414 7
 4194 0024 7B68     		ldr	r3, [r7, #4]
 4195 0026 5B6D     		ldr	r3, [r3, #84]
 4196 0028 43F01002 		orr	r2, r3, #16
 4197 002c 7B68     		ldr	r3, [r7, #4]
 4198 002e 5A65     		str	r2, [r3, #84]
2415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       errorcode = HAL_ERROR;
 4199              		.loc 1 2415 17
 4200 0030 0123     		movs	r3, #1
 4201 0032 FB73     		strb	r3, [r7, #15]
 4202              	.L221:
2416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Abort the SPI DMA rx Stream/Channel  */
2419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->hdmarx != NULL)
 4203              		.loc 1 2419 11
 4204 0034 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccFW5O3y.s 			page 117


 4205 0036 DB6C     		ldr	r3, [r3, #76]
 4206              		.loc 1 2419 6
 4207 0038 002B     		cmp	r3, #0
 4208 003a 0FD0     		beq	.L222
2420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (HAL_OK != HAL_DMA_Abort(hspi->hdmarx))
 4209              		.loc 1 2421 19
 4210 003c 7B68     		ldr	r3, [r7, #4]
 4211 003e DB6C     		ldr	r3, [r3, #76]
 4212 0040 1846     		mov	r0, r3
 4213 0042 FFF7FEFF 		bl	HAL_DMA_Abort
 4214 0046 0346     		mov	r3, r0
 4215              		.loc 1 2421 8 discriminator 1
 4216 0048 002B     		cmp	r3, #0
 4217 004a 07D0     		beq	.L222
2422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 4218              		.loc 1 2423 7
 4219 004c 7B68     		ldr	r3, [r7, #4]
 4220 004e 5B6D     		ldr	r3, [r3, #84]
 4221 0050 43F01002 		orr	r2, r3, #16
 4222 0054 7B68     		ldr	r3, [r7, #4]
 4223 0056 5A65     		str	r2, [r3, #84]
2424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       errorcode = HAL_ERROR;
 4224              		.loc 1 2424 17
 4225 0058 0123     		movs	r3, #1
 4226 005a FB73     		strb	r3, [r7, #15]
 4227              	.L222:
2425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable the SPI DMA Tx & Rx requests */
2429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 4228              		.loc 1 2429 3
 4229 005c 7B68     		ldr	r3, [r7, #4]
 4230 005e 1B68     		ldr	r3, [r3]
 4231 0060 5A68     		ldr	r2, [r3, #4]
 4232 0062 7B68     		ldr	r3, [r7, #4]
 4233 0064 1B68     		ldr	r3, [r3]
 4234 0066 22F00302 		bic	r2, r2, #3
 4235 006a 5A60     		str	r2, [r3, #4]
2430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 4236              		.loc 1 2430 15
 4237 006c 7B68     		ldr	r3, [r7, #4]
 4238 006e 0122     		movs	r2, #1
 4239 0070 83F85120 		strb	r2, [r3, #81]
2431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return errorcode;
 4240              		.loc 1 2431 10
 4241 0074 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
2432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 4242              		.loc 1 2432 1
 4243 0076 1846     		mov	r0, r3
 4244 0078 1037     		adds	r7, r7, #16
 4245              	.LCFI94:
 4246              		.cfi_def_cfa_offset 8
 4247 007a BD46     		mov	sp, r7
 4248              	.LCFI95:
ARM GAS  /tmp/ccFW5O3y.s 			page 118


 4249              		.cfi_def_cfa_register 13
 4250              		@ sp needed
 4251 007c 80BD     		pop	{r7, pc}
 4252              		.cfi_endproc
 4253              	.LFE82:
 4255              		.section	.text.HAL_SPI_IRQHandler,"ax",%progbits
 4256              		.align	1
 4257              		.global	HAL_SPI_IRQHandler
 4258              		.syntax unified
 4259              		.thumb
 4260              		.thumb_func
 4262              	HAL_SPI_IRQHandler:
 4263              	.LFB83:
2433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Handle SPI interrupt request.
2436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified SPI module.
2438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** void HAL_SPI_IRQHandler(SPI_HandleTypeDef *hspi)
2441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 4264              		.loc 1 2441 1
 4265              		.cfi_startproc
 4266              		@ args = 0, pretend = 0, frame = 32
 4267              		@ frame_needed = 1, uses_anonymous_args = 0
 4268 0000 80B5     		push	{r7, lr}
 4269              	.LCFI96:
 4270              		.cfi_def_cfa_offset 8
 4271              		.cfi_offset 7, -8
 4272              		.cfi_offset 14, -4
 4273 0002 88B0     		sub	sp, sp, #32
 4274              	.LCFI97:
 4275              		.cfi_def_cfa_offset 40
 4276 0004 00AF     		add	r7, sp, #0
 4277              	.LCFI98:
 4278              		.cfi_def_cfa_register 7
 4279 0006 7860     		str	r0, [r7, #4]
2442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t itsource = hspi->Instance->CR2;
 4280              		.loc 1 2442 27
 4281 0008 7B68     		ldr	r3, [r7, #4]
 4282 000a 1B68     		ldr	r3, [r3]
 4283              		.loc 1 2442 12
 4284 000c 5B68     		ldr	r3, [r3, #4]
 4285 000e FB61     		str	r3, [r7, #28]
2443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t itflag   = hspi->Instance->SR;
 4286              		.loc 1 2443 27
 4287 0010 7B68     		ldr	r3, [r7, #4]
 4288 0012 1B68     		ldr	r3, [r3]
 4289              		.loc 1 2443 12
 4290 0014 9B68     		ldr	r3, [r3, #8]
 4291 0016 BB61     		str	r3, [r7, #24]
2444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* SPI in mode Receiver ----------------------------------------------------*/
2446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) == RESET) &&
 4292              		.loc 1 2446 8
 4293 0018 BB69     		ldr	r3, [r7, #24]
ARM GAS  /tmp/ccFW5O3y.s 			page 119


 4294 001a 9B09     		lsrs	r3, r3, #6
 4295 001c 03F00103 		and	r3, r3, #1
 4296              		.loc 1 2446 6
 4297 0020 002B     		cmp	r3, #0
 4298 0022 0FD1     		bne	.L225
2447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXN
 4299              		.loc 1 2447 8
 4300 0024 BB69     		ldr	r3, [r7, #24]
 4301 0026 03F00103 		and	r3, r3, #1
2446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXN
 4302              		.loc 1 2446 55 discriminator 1
 4303 002a 002B     		cmp	r3, #0
 4304 002c 0AD0     		beq	.L225
 4305              		.loc 1 2447 60
 4306 002e FB69     		ldr	r3, [r7, #28]
 4307 0030 9B09     		lsrs	r3, r3, #6
 4308 0032 03F00103 		and	r3, r3, #1
 4309              		.loc 1 2447 56
 4310 0036 002B     		cmp	r3, #0
 4311 0038 04D0     		beq	.L225
2448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxISR(hspi);
 4312              		.loc 1 2449 9
 4313 003a 7B68     		ldr	r3, [r7, #4]
 4314 003c 1B6C     		ldr	r3, [r3, #64]
 4315              		.loc 1 2449 5
 4316 003e 7868     		ldr	r0, [r7, #4]
 4317 0040 9847     		blx	r3
 4318              	.LVL0:
2450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return;
 4319              		.loc 1 2450 5
 4320 0042 BEE0     		b	.L224
 4321              	.L225:
2451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* SPI in mode Transmitter -------------------------------------------------*/
2454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_TXE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_TXE)
 4322              		.loc 1 2454 8
 4323 0044 BB69     		ldr	r3, [r7, #24]
 4324 0046 5B08     		lsrs	r3, r3, #1
 4325 0048 03F00103 		and	r3, r3, #1
 4326              		.loc 1 2454 6
 4327 004c 002B     		cmp	r3, #0
 4328 004e 0AD0     		beq	.L227
 4329              		.loc 1 2454 59 discriminator 1
 4330 0050 FB69     		ldr	r3, [r7, #28]
 4331 0052 DB09     		lsrs	r3, r3, #7
 4332 0054 03F00103 		and	r3, r3, #1
 4333              		.loc 1 2454 55 discriminator 1
 4334 0058 002B     		cmp	r3, #0
 4335 005a 04D0     		beq	.L227
2455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxISR(hspi);
 4336              		.loc 1 2456 9
 4337 005c 7B68     		ldr	r3, [r7, #4]
 4338 005e 5B6C     		ldr	r3, [r3, #68]
 4339              		.loc 1 2456 5
ARM GAS  /tmp/ccFW5O3y.s 			page 120


 4340 0060 7868     		ldr	r0, [r7, #4]
 4341 0062 9847     		blx	r3
 4342              	.LVL1:
2457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return;
 4343              		.loc 1 2457 5
 4344 0064 ADE0     		b	.L224
 4345              	.L227:
2458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* SPI in Error Treatment --------------------------------------------------*/
2461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (((SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET) || (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) !=
 4346              		.loc 1 2461 9
 4347 0066 BB69     		ldr	r3, [r7, #24]
 4348 0068 5B09     		lsrs	r3, r3, #5
 4349 006a 03F00103 		and	r3, r3, #1
 4350              		.loc 1 2461 6
 4351 006e 002B     		cmp	r3, #0
 4352 0070 06D1     		bne	.L228
 4353              		.loc 1 2461 61 discriminator 1
 4354 0072 BB69     		ldr	r3, [r7, #24]
 4355 0074 9B09     		lsrs	r3, r3, #6
 4356 0076 03F00103 		and	r3, r3, #1
 4357              		.loc 1 2461 57 discriminator 1
 4358 007a 002B     		cmp	r3, #0
 4359 007c 00F0A180 		beq	.L224
 4360              	.L228:
2462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_ERR) != RESET))
 4361              		.loc 1 2462 11
 4362 0080 FB69     		ldr	r3, [r7, #28]
 4363 0082 5B09     		lsrs	r3, r3, #5
 4364 0084 03F00103 		and	r3, r3, #1
 4365              		.loc 1 2462 7
 4366 0088 002B     		cmp	r3, #0
 4367 008a 00F09A80 		beq	.L224
2463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* SPI Overrun error interrupt occurred ----------------------------------*/
2465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) != RESET)
 4368              		.loc 1 2465 9
 4369 008e BB69     		ldr	r3, [r7, #24]
 4370 0090 9B09     		lsrs	r3, r3, #6
 4371 0092 03F00103 		and	r3, r3, #1
 4372              		.loc 1 2465 8
 4373 0096 002B     		cmp	r3, #0
 4374 0098 23D0     		beq	.L229
2466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (hspi->State != HAL_SPI_STATE_BUSY_TX)
 4375              		.loc 1 2467 15
 4376 009a 7B68     		ldr	r3, [r7, #4]
 4377 009c 93F85130 		ldrb	r3, [r3, #81]
 4378 00a0 DBB2     		uxtb	r3, r3
 4379              		.loc 1 2467 10
 4380 00a2 032B     		cmp	r3, #3
 4381 00a4 11D0     		beq	.L230
2468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
 4382              		.loc 1 2469 9
 4383 00a6 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccFW5O3y.s 			page 121


 4384 00a8 5B6D     		ldr	r3, [r3, #84]
 4385 00aa 43F00402 		orr	r2, r3, #4
 4386 00ae 7B68     		ldr	r3, [r7, #4]
 4387 00b0 5A65     		str	r2, [r3, #84]
 4388              	.LBB6:
2470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         __HAL_SPI_CLEAR_OVRFLAG(hspi);
 4389              		.loc 1 2470 9
 4390 00b2 0023     		movs	r3, #0
 4391 00b4 7B61     		str	r3, [r7, #20]
 4392 00b6 7B68     		ldr	r3, [r7, #4]
 4393 00b8 1B68     		ldr	r3, [r3]
 4394 00ba DB68     		ldr	r3, [r3, #12]
 4395 00bc 7B61     		str	r3, [r7, #20]
 4396 00be 7B68     		ldr	r3, [r7, #4]
 4397 00c0 1B68     		ldr	r3, [r3]
 4398 00c2 9B68     		ldr	r3, [r3, #8]
 4399 00c4 7B61     		str	r3, [r7, #20]
 4400 00c6 7B69     		ldr	r3, [r7, #20]
 4401              	.LBE6:
 4402 00c8 0BE0     		b	.L229
 4403              	.L230:
 4404              	.LBB7:
2471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
2473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         __HAL_SPI_CLEAR_OVRFLAG(hspi);
 4405              		.loc 1 2474 9
 4406 00ca 0023     		movs	r3, #0
 4407 00cc 3B61     		str	r3, [r7, #16]
 4408 00ce 7B68     		ldr	r3, [r7, #4]
 4409 00d0 1B68     		ldr	r3, [r3]
 4410 00d2 DB68     		ldr	r3, [r3, #12]
 4411 00d4 3B61     		str	r3, [r7, #16]
 4412 00d6 7B68     		ldr	r3, [r7, #4]
 4413 00d8 1B68     		ldr	r3, [r3]
 4414 00da 9B68     		ldr	r3, [r3, #8]
 4415 00dc 3B61     		str	r3, [r7, #16]
 4416 00de 3B69     		ldr	r3, [r7, #16]
 4417              	.LBE7:
2475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         return;
 4418              		.loc 1 2475 9
 4419 00e0 6FE0     		b	.L224
 4420              	.L229:
2476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* SPI Mode Fault error interrupt occurred -------------------------------*/
2480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET)
 4421              		.loc 1 2480 9
 4422 00e2 BB69     		ldr	r3, [r7, #24]
 4423 00e4 5B09     		lsrs	r3, r3, #5
 4424 00e6 03F00103 		and	r3, r3, #1
 4425              		.loc 1 2480 8
 4426 00ea 002B     		cmp	r3, #0
 4427 00ec 14D0     		beq	.L231
2481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
ARM GAS  /tmp/ccFW5O3y.s 			page 122


 4428              		.loc 1 2482 7
 4429 00ee 7B68     		ldr	r3, [r7, #4]
 4430 00f0 5B6D     		ldr	r3, [r3, #84]
 4431 00f2 43F00102 		orr	r2, r3, #1
 4432 00f6 7B68     		ldr	r3, [r7, #4]
 4433 00f8 5A65     		str	r2, [r3, #84]
 4434              	.LBB8:
2483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_CLEAR_MODFFLAG(hspi);
 4435              		.loc 1 2483 7
 4436 00fa 0023     		movs	r3, #0
 4437 00fc FB60     		str	r3, [r7, #12]
 4438 00fe 7B68     		ldr	r3, [r7, #4]
 4439 0100 1B68     		ldr	r3, [r3]
 4440 0102 9B68     		ldr	r3, [r3, #8]
 4441 0104 FB60     		str	r3, [r7, #12]
 4442 0106 7B68     		ldr	r3, [r7, #4]
 4443 0108 1B68     		ldr	r3, [r3]
 4444 010a 1A68     		ldr	r2, [r3]
 4445 010c 7B68     		ldr	r3, [r7, #4]
 4446 010e 1B68     		ldr	r3, [r3]
 4447 0110 22F04002 		bic	r2, r2, #64
 4448 0114 1A60     		str	r2, [r3]
 4449 0116 FB68     		ldr	r3, [r7, #12]
 4450              	.L231:
 4451              	.LBE8:
2484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* SPI Frame error interrupt occurred ------------------------------------*/
2487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 4452              		.loc 1 2488 13
 4453 0118 7B68     		ldr	r3, [r7, #4]
 4454 011a 5B6D     		ldr	r3, [r3, #84]
 4455              		.loc 1 2488 8
 4456 011c 002B     		cmp	r3, #0
 4457 011e 4FD0     		beq	.L237
2489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Disable all interrupts */
2491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE | SPI_IT_TXE | SPI_IT_ERR);
 4458              		.loc 1 2491 7
 4459 0120 7B68     		ldr	r3, [r7, #4]
 4460 0122 1B68     		ldr	r3, [r3]
 4461 0124 5A68     		ldr	r2, [r3, #4]
 4462 0126 7B68     		ldr	r3, [r7, #4]
 4463 0128 1B68     		ldr	r3, [r3]
 4464 012a 22F0E002 		bic	r2, r2, #224
 4465 012e 5A60     		str	r2, [r3, #4]
2492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_READY;
 4466              		.loc 1 2493 19
 4467 0130 7B68     		ldr	r3, [r7, #4]
 4468 0132 0122     		movs	r2, #1
 4469 0134 83F85120 		strb	r2, [r3, #81]
2494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Disable the SPI DMA requests if enabled */
2495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if ((HAL_IS_BIT_SET(itsource, SPI_CR2_TXDMAEN)) || (HAL_IS_BIT_SET(itsource, SPI_CR2_RXDMAEN)
 4470              		.loc 1 2495 12
 4471 0138 FB69     		ldr	r3, [r7, #28]
ARM GAS  /tmp/ccFW5O3y.s 			page 123


 4472 013a 03F00203 		and	r3, r3, #2
 4473              		.loc 1 2495 10
 4474 013e 002B     		cmp	r3, #0
 4475 0140 04D1     		bne	.L233
 4476              		.loc 1 2495 59 discriminator 1
 4477 0142 FB69     		ldr	r3, [r7, #28]
 4478 0144 03F00103 		and	r3, r3, #1
 4479              		.loc 1 2495 55 discriminator 1
 4480 0148 002B     		cmp	r3, #0
 4481 014a 34D0     		beq	.L234
 4482              	.L233:
2496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN));
 4483              		.loc 1 2497 9
 4484 014c 7B68     		ldr	r3, [r7, #4]
 4485 014e 1B68     		ldr	r3, [r3]
 4486 0150 5A68     		ldr	r2, [r3, #4]
 4487 0152 7B68     		ldr	r3, [r7, #4]
 4488 0154 1B68     		ldr	r3, [r3]
 4489 0156 22F00302 		bic	r2, r2, #3
 4490 015a 5A60     		str	r2, [r3, #4]
2498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Abort the SPI DMA Rx channel */
2500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if (hspi->hdmarx != NULL)
 4491              		.loc 1 2500 17
 4492 015c 7B68     		ldr	r3, [r7, #4]
 4493 015e DB6C     		ldr	r3, [r3, #76]
 4494              		.loc 1 2500 12
 4495 0160 002B     		cmp	r3, #0
 4496 0162 11D0     		beq	.L235
2501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
2502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           /* Set the SPI DMA Abort callback :
2503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
2504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           hspi->hdmarx->XferAbortCallback = SPI_DMAAbortOnError;
 4497              		.loc 1 2504 15
 4498 0164 7B68     		ldr	r3, [r7, #4]
 4499 0166 DB6C     		ldr	r3, [r3, #76]
 4500              		.loc 1 2504 43
 4501 0168 174A     		ldr	r2, .L239
 4502 016a 5A63     		str	r2, [r3, #52]
2505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
 4503              		.loc 1 2505 25
 4504 016c 7B68     		ldr	r3, [r7, #4]
 4505 016e DB6C     		ldr	r3, [r3, #76]
 4506 0170 1846     		mov	r0, r3
 4507 0172 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4508 0176 0346     		mov	r3, r0
 4509              		.loc 1 2505 14 discriminator 1
 4510 0178 002B     		cmp	r3, #0
 4511 017a 05D0     		beq	.L235
2506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           {
2507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 4512              		.loc 1 2507 13
 4513 017c 7B68     		ldr	r3, [r7, #4]
 4514 017e 5B6D     		ldr	r3, [r3, #84]
 4515 0180 43F04002 		orr	r2, r3, #64
 4516 0184 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccFW5O3y.s 			page 124


 4517 0186 5A65     		str	r2, [r3, #84]
 4518              	.L235:
2508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           }
2509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
2510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Abort the SPI DMA Tx channel */
2511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if (hspi->hdmatx != NULL)
 4519              		.loc 1 2511 17
 4520 0188 7B68     		ldr	r3, [r7, #4]
 4521 018a 9B6C     		ldr	r3, [r3, #72]
 4522              		.loc 1 2511 12
 4523 018c 002B     		cmp	r3, #0
 4524 018e 16D0     		beq	.L238
2512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
2513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           /* Set the SPI DMA Abort callback :
2514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
2515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           hspi->hdmatx->XferAbortCallback = SPI_DMAAbortOnError;
 4525              		.loc 1 2515 15
 4526 0190 7B68     		ldr	r3, [r7, #4]
 4527 0192 9B6C     		ldr	r3, [r3, #72]
 4528              		.loc 1 2515 43
 4529 0194 0C4A     		ldr	r2, .L239
 4530 0196 5A63     		str	r2, [r3, #52]
2516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
 4531              		.loc 1 2516 25
 4532 0198 7B68     		ldr	r3, [r7, #4]
 4533 019a 9B6C     		ldr	r3, [r3, #72]
 4534 019c 1846     		mov	r0, r3
 4535 019e FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4536 01a2 0346     		mov	r3, r0
 4537              		.loc 1 2516 14 discriminator 1
 4538 01a4 002B     		cmp	r3, #0
 4539 01a6 0AD0     		beq	.L238
2517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           {
2518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 4540              		.loc 1 2518 13
 4541 01a8 7B68     		ldr	r3, [r7, #4]
 4542 01aa 5B6D     		ldr	r3, [r3, #84]
 4543 01ac 43F04002 		orr	r2, r3, #64
 4544 01b0 7B68     		ldr	r3, [r7, #4]
 4545 01b2 5A65     		str	r2, [r3, #84]
2511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 4546              		.loc 1 2511 12
 4547 01b4 03E0     		b	.L238
 4548              	.L234:
2519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           }
2520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
2521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
2523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Call user error callback */
2525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->ErrorCallback(hspi);
2527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
2528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         HAL_SPI_ErrorCallback(hspi);
 4549              		.loc 1 2528 9
 4550 01b6 7868     		ldr	r0, [r7, #4]
 4551 01b8 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
ARM GAS  /tmp/ccFW5O3y.s 			page 125


2529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return;
 4552              		.loc 1 2532 5
 4553 01bc 00E0     		b	.L237
 4554              	.L238:
2511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
 4555              		.loc 1 2511 12
 4556 01be 00BF     		nop
 4557              	.L237:
 4558              		.loc 1 2532 5
 4559 01c0 00BF     		nop
 4560              	.L224:
2533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 4561              		.loc 1 2534 1
 4562 01c2 2037     		adds	r7, r7, #32
 4563              	.LCFI99:
 4564              		.cfi_def_cfa_offset 8
 4565 01c4 BD46     		mov	sp, r7
 4566              	.LCFI100:
 4567              		.cfi_def_cfa_register 13
 4568              		@ sp needed
 4569 01c6 80BD     		pop	{r7, pc}
 4570              	.L240:
 4571              		.align	2
 4572              	.L239:
 4573 01c8 00000000 		.word	SPI_DMAAbortOnError
 4574              		.cfi_endproc
 4575              	.LFE83:
 4577              		.section	.text.HAL_SPI_TxCpltCallback,"ax",%progbits
 4578              		.align	1
 4579              		.weak	HAL_SPI_TxCpltCallback
 4580              		.syntax unified
 4581              		.thumb
 4582              		.thumb_func
 4584              	HAL_SPI_TxCpltCallback:
 4585              	.LFB84:
2535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Tx Transfer completed callback.
2538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** __weak void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef *hspi)
2543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 4586              		.loc 1 2543 1
 4587              		.cfi_startproc
 4588              		@ args = 0, pretend = 0, frame = 8
 4589              		@ frame_needed = 1, uses_anonymous_args = 0
 4590              		@ link register save eliminated.
 4591 0000 80B4     		push	{r7}
 4592              	.LCFI101:
 4593              		.cfi_def_cfa_offset 4
 4594              		.cfi_offset 7, -4
ARM GAS  /tmp/ccFW5O3y.s 			page 126


 4595 0002 83B0     		sub	sp, sp, #12
 4596              	.LCFI102:
 4597              		.cfi_def_cfa_offset 16
 4598 0004 00AF     		add	r7, sp, #0
 4599              	.LCFI103:
 4600              		.cfi_def_cfa_register 7
 4601 0006 7860     		str	r0, [r7, #4]
2544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(hspi);
2546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             the HAL_SPI_TxCpltCallback should be implemented in the user file
2549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    */
2550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 4602              		.loc 1 2550 1
 4603 0008 00BF     		nop
 4604 000a 0C37     		adds	r7, r7, #12
 4605              	.LCFI104:
 4606              		.cfi_def_cfa_offset 4
 4607 000c BD46     		mov	sp, r7
 4608              	.LCFI105:
 4609              		.cfi_def_cfa_register 13
 4610              		@ sp needed
 4611 000e 80BC     		pop	{r7}
 4612              	.LCFI106:
 4613              		.cfi_restore 7
 4614              		.cfi_def_cfa_offset 0
 4615 0010 7047     		bx	lr
 4616              		.cfi_endproc
 4617              	.LFE84:
 4619              		.section	.text.HAL_SPI_RxCpltCallback,"ax",%progbits
 4620              		.align	1
 4621              		.weak	HAL_SPI_RxCpltCallback
 4622              		.syntax unified
 4623              		.thumb
 4624              		.thumb_func
 4626              	HAL_SPI_RxCpltCallback:
 4627              	.LFB85:
2551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Rx Transfer completed callback.
2554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** __weak void HAL_SPI_RxCpltCallback(SPI_HandleTypeDef *hspi)
2559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 4628              		.loc 1 2559 1
 4629              		.cfi_startproc
 4630              		@ args = 0, pretend = 0, frame = 8
 4631              		@ frame_needed = 1, uses_anonymous_args = 0
 4632              		@ link register save eliminated.
 4633 0000 80B4     		push	{r7}
 4634              	.LCFI107:
 4635              		.cfi_def_cfa_offset 4
 4636              		.cfi_offset 7, -4
 4637 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccFW5O3y.s 			page 127


 4638              	.LCFI108:
 4639              		.cfi_def_cfa_offset 16
 4640 0004 00AF     		add	r7, sp, #0
 4641              	.LCFI109:
 4642              		.cfi_def_cfa_register 7
 4643 0006 7860     		str	r0, [r7, #4]
2560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(hspi);
2562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             the HAL_SPI_RxCpltCallback should be implemented in the user file
2565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    */
2566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 4644              		.loc 1 2566 1
 4645 0008 00BF     		nop
 4646 000a 0C37     		adds	r7, r7, #12
 4647              	.LCFI110:
 4648              		.cfi_def_cfa_offset 4
 4649 000c BD46     		mov	sp, r7
 4650              	.LCFI111:
 4651              		.cfi_def_cfa_register 13
 4652              		@ sp needed
 4653 000e 80BC     		pop	{r7}
 4654              	.LCFI112:
 4655              		.cfi_restore 7
 4656              		.cfi_def_cfa_offset 0
 4657 0010 7047     		bx	lr
 4658              		.cfi_endproc
 4659              	.LFE85:
 4661              		.section	.text.HAL_SPI_TxRxCpltCallback,"ax",%progbits
 4662              		.align	1
 4663              		.weak	HAL_SPI_TxRxCpltCallback
 4664              		.syntax unified
 4665              		.thumb
 4666              		.thumb_func
 4668              	HAL_SPI_TxRxCpltCallback:
 4669              	.LFB86:
2567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Tx and Rx Transfer completed callback.
2570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** __weak void HAL_SPI_TxRxCpltCallback(SPI_HandleTypeDef *hspi)
2575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 4670              		.loc 1 2575 1
 4671              		.cfi_startproc
 4672              		@ args = 0, pretend = 0, frame = 8
 4673              		@ frame_needed = 1, uses_anonymous_args = 0
 4674              		@ link register save eliminated.
 4675 0000 80B4     		push	{r7}
 4676              	.LCFI113:
 4677              		.cfi_def_cfa_offset 4
 4678              		.cfi_offset 7, -4
 4679 0002 83B0     		sub	sp, sp, #12
 4680              	.LCFI114:
ARM GAS  /tmp/ccFW5O3y.s 			page 128


 4681              		.cfi_def_cfa_offset 16
 4682 0004 00AF     		add	r7, sp, #0
 4683              	.LCFI115:
 4684              		.cfi_def_cfa_register 7
 4685 0006 7860     		str	r0, [r7, #4]
2576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(hspi);
2578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             the HAL_SPI_TxRxCpltCallback should be implemented in the user file
2581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    */
2582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 4686              		.loc 1 2582 1
 4687 0008 00BF     		nop
 4688 000a 0C37     		adds	r7, r7, #12
 4689              	.LCFI116:
 4690              		.cfi_def_cfa_offset 4
 4691 000c BD46     		mov	sp, r7
 4692              	.LCFI117:
 4693              		.cfi_def_cfa_register 13
 4694              		@ sp needed
 4695 000e 80BC     		pop	{r7}
 4696              	.LCFI118:
 4697              		.cfi_restore 7
 4698              		.cfi_def_cfa_offset 0
 4699 0010 7047     		bx	lr
 4700              		.cfi_endproc
 4701              	.LFE86:
 4703              		.section	.text.HAL_SPI_TxHalfCpltCallback,"ax",%progbits
 4704              		.align	1
 4705              		.weak	HAL_SPI_TxHalfCpltCallback
 4706              		.syntax unified
 4707              		.thumb
 4708              		.thumb_func
 4710              	HAL_SPI_TxHalfCpltCallback:
 4711              	.LFB87:
2583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Tx Half Transfer completed callback.
2586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** __weak void HAL_SPI_TxHalfCpltCallback(SPI_HandleTypeDef *hspi)
2591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 4712              		.loc 1 2591 1
 4713              		.cfi_startproc
 4714              		@ args = 0, pretend = 0, frame = 8
 4715              		@ frame_needed = 1, uses_anonymous_args = 0
 4716              		@ link register save eliminated.
 4717 0000 80B4     		push	{r7}
 4718              	.LCFI119:
 4719              		.cfi_def_cfa_offset 4
 4720              		.cfi_offset 7, -4
 4721 0002 83B0     		sub	sp, sp, #12
 4722              	.LCFI120:
 4723              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccFW5O3y.s 			page 129


 4724 0004 00AF     		add	r7, sp, #0
 4725              	.LCFI121:
 4726              		.cfi_def_cfa_register 7
 4727 0006 7860     		str	r0, [r7, #4]
2592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(hspi);
2594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             the HAL_SPI_TxHalfCpltCallback should be implemented in the user file
2597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    */
2598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 4728              		.loc 1 2598 1
 4729 0008 00BF     		nop
 4730 000a 0C37     		adds	r7, r7, #12
 4731              	.LCFI122:
 4732              		.cfi_def_cfa_offset 4
 4733 000c BD46     		mov	sp, r7
 4734              	.LCFI123:
 4735              		.cfi_def_cfa_register 13
 4736              		@ sp needed
 4737 000e 80BC     		pop	{r7}
 4738              	.LCFI124:
 4739              		.cfi_restore 7
 4740              		.cfi_def_cfa_offset 0
 4741 0010 7047     		bx	lr
 4742              		.cfi_endproc
 4743              	.LFE87:
 4745              		.section	.text.HAL_SPI_RxHalfCpltCallback,"ax",%progbits
 4746              		.align	1
 4747              		.weak	HAL_SPI_RxHalfCpltCallback
 4748              		.syntax unified
 4749              		.thumb
 4750              		.thumb_func
 4752              	HAL_SPI_RxHalfCpltCallback:
 4753              	.LFB88:
2599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Rx Half Transfer completed callback.
2602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** __weak void HAL_SPI_RxHalfCpltCallback(SPI_HandleTypeDef *hspi)
2607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 4754              		.loc 1 2607 1
 4755              		.cfi_startproc
 4756              		@ args = 0, pretend = 0, frame = 8
 4757              		@ frame_needed = 1, uses_anonymous_args = 0
 4758              		@ link register save eliminated.
 4759 0000 80B4     		push	{r7}
 4760              	.LCFI125:
 4761              		.cfi_def_cfa_offset 4
 4762              		.cfi_offset 7, -4
 4763 0002 83B0     		sub	sp, sp, #12
 4764              	.LCFI126:
 4765              		.cfi_def_cfa_offset 16
 4766 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccFW5O3y.s 			page 130


 4767              	.LCFI127:
 4768              		.cfi_def_cfa_register 7
 4769 0006 7860     		str	r0, [r7, #4]
2608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(hspi);
2610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             the HAL_SPI_RxHalfCpltCallback() should be implemented in the user file
2613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    */
2614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 4770              		.loc 1 2614 1
 4771 0008 00BF     		nop
 4772 000a 0C37     		adds	r7, r7, #12
 4773              	.LCFI128:
 4774              		.cfi_def_cfa_offset 4
 4775 000c BD46     		mov	sp, r7
 4776              	.LCFI129:
 4777              		.cfi_def_cfa_register 13
 4778              		@ sp needed
 4779 000e 80BC     		pop	{r7}
 4780              	.LCFI130:
 4781              		.cfi_restore 7
 4782              		.cfi_def_cfa_offset 0
 4783 0010 7047     		bx	lr
 4784              		.cfi_endproc
 4785              	.LFE88:
 4787              		.section	.text.HAL_SPI_TxRxHalfCpltCallback,"ax",%progbits
 4788              		.align	1
 4789              		.weak	HAL_SPI_TxRxHalfCpltCallback
 4790              		.syntax unified
 4791              		.thumb
 4792              		.thumb_func
 4794              	HAL_SPI_TxRxHalfCpltCallback:
 4795              	.LFB89:
2615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Tx and Rx Half Transfer callback.
2618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** __weak void HAL_SPI_TxRxHalfCpltCallback(SPI_HandleTypeDef *hspi)
2623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 4796              		.loc 1 2623 1
 4797              		.cfi_startproc
 4798              		@ args = 0, pretend = 0, frame = 8
 4799              		@ frame_needed = 1, uses_anonymous_args = 0
 4800              		@ link register save eliminated.
 4801 0000 80B4     		push	{r7}
 4802              	.LCFI131:
 4803              		.cfi_def_cfa_offset 4
 4804              		.cfi_offset 7, -4
 4805 0002 83B0     		sub	sp, sp, #12
 4806              	.LCFI132:
 4807              		.cfi_def_cfa_offset 16
 4808 0004 00AF     		add	r7, sp, #0
 4809              	.LCFI133:
ARM GAS  /tmp/ccFW5O3y.s 			page 131


 4810              		.cfi_def_cfa_register 7
 4811 0006 7860     		str	r0, [r7, #4]
2624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(hspi);
2626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             the HAL_SPI_TxRxHalfCpltCallback() should be implemented in the user file
2629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    */
2630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 4812              		.loc 1 2630 1
 4813 0008 00BF     		nop
 4814 000a 0C37     		adds	r7, r7, #12
 4815              	.LCFI134:
 4816              		.cfi_def_cfa_offset 4
 4817 000c BD46     		mov	sp, r7
 4818              	.LCFI135:
 4819              		.cfi_def_cfa_register 13
 4820              		@ sp needed
 4821 000e 80BC     		pop	{r7}
 4822              	.LCFI136:
 4823              		.cfi_restore 7
 4824              		.cfi_def_cfa_offset 0
 4825 0010 7047     		bx	lr
 4826              		.cfi_endproc
 4827              	.LFE89:
 4829              		.section	.text.HAL_SPI_ErrorCallback,"ax",%progbits
 4830              		.align	1
 4831              		.weak	HAL_SPI_ErrorCallback
 4832              		.syntax unified
 4833              		.thumb
 4834              		.thumb_func
 4836              	HAL_SPI_ErrorCallback:
 4837              	.LFB90:
2631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  SPI error callback.
2634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** __weak void HAL_SPI_ErrorCallback(SPI_HandleTypeDef *hspi)
2639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 4838              		.loc 1 2639 1
 4839              		.cfi_startproc
 4840              		@ args = 0, pretend = 0, frame = 8
 4841              		@ frame_needed = 1, uses_anonymous_args = 0
 4842              		@ link register save eliminated.
 4843 0000 80B4     		push	{r7}
 4844              	.LCFI137:
 4845              		.cfi_def_cfa_offset 4
 4846              		.cfi_offset 7, -4
 4847 0002 83B0     		sub	sp, sp, #12
 4848              	.LCFI138:
 4849              		.cfi_def_cfa_offset 16
 4850 0004 00AF     		add	r7, sp, #0
 4851              	.LCFI139:
 4852              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccFW5O3y.s 			page 132


 4853 0006 7860     		str	r0, [r7, #4]
2640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(hspi);
2642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             the HAL_SPI_ErrorCallback should be implemented in the user file
2645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    */
2646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : The ErrorCode parameter in the hspi handle is updated by the SPI processes
2647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             and user can use HAL_SPI_GetError() API to check the latest error occurred
2648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    */
2649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 4854              		.loc 1 2649 1
 4855 0008 00BF     		nop
 4856 000a 0C37     		adds	r7, r7, #12
 4857              	.LCFI140:
 4858              		.cfi_def_cfa_offset 4
 4859 000c BD46     		mov	sp, r7
 4860              	.LCFI141:
 4861              		.cfi_def_cfa_register 13
 4862              		@ sp needed
 4863 000e 80BC     		pop	{r7}
 4864              	.LCFI142:
 4865              		.cfi_restore 7
 4866              		.cfi_def_cfa_offset 0
 4867 0010 7047     		bx	lr
 4868              		.cfi_endproc
 4869              	.LFE90:
 4871              		.section	.text.HAL_SPI_AbortCpltCallback,"ax",%progbits
 4872              		.align	1
 4873              		.weak	HAL_SPI_AbortCpltCallback
 4874              		.syntax unified
 4875              		.thumb
 4876              		.thumb_func
 4878              	HAL_SPI_AbortCpltCallback:
 4879              	.LFB91:
2650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  SPI Abort Complete callback.
2653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi SPI handle.
2654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** __weak void HAL_SPI_AbortCpltCallback(SPI_HandleTypeDef *hspi)
2657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 4880              		.loc 1 2657 1
 4881              		.cfi_startproc
 4882              		@ args = 0, pretend = 0, frame = 8
 4883              		@ frame_needed = 1, uses_anonymous_args = 0
 4884              		@ link register save eliminated.
 4885 0000 80B4     		push	{r7}
 4886              	.LCFI143:
 4887              		.cfi_def_cfa_offset 4
 4888              		.cfi_offset 7, -4
 4889 0002 83B0     		sub	sp, sp, #12
 4890              	.LCFI144:
 4891              		.cfi_def_cfa_offset 16
 4892 0004 00AF     		add	r7, sp, #0
 4893              	.LCFI145:
ARM GAS  /tmp/ccFW5O3y.s 			page 133


 4894              		.cfi_def_cfa_register 7
 4895 0006 7860     		str	r0, [r7, #4]
2658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Prevent unused argument(s) compilation warning */
2659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(hspi);
2660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****             the HAL_SPI_AbortCpltCallback can be implemented in the user file.
2663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****    */
2664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 4896              		.loc 1 2664 1
 4897 0008 00BF     		nop
 4898 000a 0C37     		adds	r7, r7, #12
 4899              	.LCFI146:
 4900              		.cfi_def_cfa_offset 4
 4901 000c BD46     		mov	sp, r7
 4902              	.LCFI147:
 4903              		.cfi_def_cfa_register 13
 4904              		@ sp needed
 4905 000e 80BC     		pop	{r7}
 4906              	.LCFI148:
 4907              		.cfi_restore 7
 4908              		.cfi_def_cfa_offset 0
 4909 0010 7047     		bx	lr
 4910              		.cfi_endproc
 4911              	.LFE91:
 4913              		.section	.text.HAL_SPI_GetState,"ax",%progbits
 4914              		.align	1
 4915              		.global	HAL_SPI_GetState
 4916              		.syntax unified
 4917              		.thumb
 4918              		.thumb_func
 4920              	HAL_SPI_GetState:
 4921              	.LFB92:
2665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @}
2668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /** @defgroup SPI_Exported_Functions_Group3 Peripheral State and Errors functions
2671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief   SPI control functions
2672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *
2673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** @verbatim
2674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  ===============================================================================
2675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                       ##### Peripheral State and Errors functions #####
2676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****  ===============================================================================
2677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     [..]
2678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     This subsection provides a set of functions allowing to control the SPI.
2679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      (+) HAL_SPI_GetState() API can be helpful to check in run-time the state of the SPI peripheral
2680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****      (+) HAL_SPI_GetError() check in run-time Errors occurring during communication
2681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** @endverbatim
2682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @{
2683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Return the SPI handle state.
2687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
ARM GAS  /tmp/ccFW5O3y.s 			page 134


2689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval SPI state
2690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** HAL_SPI_StateTypeDef HAL_SPI_GetState(const SPI_HandleTypeDef *hspi)
2692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 4922              		.loc 1 2692 1
 4923              		.cfi_startproc
 4924              		@ args = 0, pretend = 0, frame = 8
 4925              		@ frame_needed = 1, uses_anonymous_args = 0
 4926              		@ link register save eliminated.
 4927 0000 80B4     		push	{r7}
 4928              	.LCFI149:
 4929              		.cfi_def_cfa_offset 4
 4930              		.cfi_offset 7, -4
 4931 0002 83B0     		sub	sp, sp, #12
 4932              	.LCFI150:
 4933              		.cfi_def_cfa_offset 16
 4934 0004 00AF     		add	r7, sp, #0
 4935              	.LCFI151:
 4936              		.cfi_def_cfa_register 7
 4937 0006 7860     		str	r0, [r7, #4]
2693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Return SPI handle state */
2694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return hspi->State;
 4938              		.loc 1 2694 14
 4939 0008 7B68     		ldr	r3, [r7, #4]
 4940 000a 93F85130 		ldrb	r3, [r3, #81]
 4941 000e DBB2     		uxtb	r3, r3
2695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 4942              		.loc 1 2695 1
 4943 0010 1846     		mov	r0, r3
 4944 0012 0C37     		adds	r7, r7, #12
 4945              	.LCFI152:
 4946              		.cfi_def_cfa_offset 4
 4947 0014 BD46     		mov	sp, r7
 4948              	.LCFI153:
 4949              		.cfi_def_cfa_register 13
 4950              		@ sp needed
 4951 0016 80BC     		pop	{r7}
 4952              	.LCFI154:
 4953              		.cfi_restore 7
 4954              		.cfi_def_cfa_offset 0
 4955 0018 7047     		bx	lr
 4956              		.cfi_endproc
 4957              	.LFE92:
 4959              		.section	.text.HAL_SPI_GetError,"ax",%progbits
 4960              		.align	1
 4961              		.global	HAL_SPI_GetError
 4962              		.syntax unified
 4963              		.thumb
 4964              		.thumb_func
 4966              	HAL_SPI_GetError:
 4967              	.LFB93:
2696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Return the SPI error code.
2699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
2700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
2701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval SPI error code in bitmap format
ARM GAS  /tmp/ccFW5O3y.s 			page 135


2702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** uint32_t HAL_SPI_GetError(const SPI_HandleTypeDef *hspi)
2704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 4968              		.loc 1 2704 1
 4969              		.cfi_startproc
 4970              		@ args = 0, pretend = 0, frame = 8
 4971              		@ frame_needed = 1, uses_anonymous_args = 0
 4972              		@ link register save eliminated.
 4973 0000 80B4     		push	{r7}
 4974              	.LCFI155:
 4975              		.cfi_def_cfa_offset 4
 4976              		.cfi_offset 7, -4
 4977 0002 83B0     		sub	sp, sp, #12
 4978              	.LCFI156:
 4979              		.cfi_def_cfa_offset 16
 4980 0004 00AF     		add	r7, sp, #0
 4981              	.LCFI157:
 4982              		.cfi_def_cfa_register 7
 4983 0006 7860     		str	r0, [r7, #4]
2705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Return SPI ErrorCode */
2706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return hspi->ErrorCode;
 4984              		.loc 1 2706 14
 4985 0008 7B68     		ldr	r3, [r7, #4]
 4986 000a 5B6D     		ldr	r3, [r3, #84]
2707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 4987              		.loc 1 2707 1
 4988 000c 1846     		mov	r0, r3
 4989 000e 0C37     		adds	r7, r7, #12
 4990              	.LCFI158:
 4991              		.cfi_def_cfa_offset 4
 4992 0010 BD46     		mov	sp, r7
 4993              	.LCFI159:
 4994              		.cfi_def_cfa_register 13
 4995              		@ sp needed
 4996 0012 80BC     		pop	{r7}
 4997              	.LCFI160:
 4998              		.cfi_restore 7
 4999              		.cfi_def_cfa_offset 0
 5000 0014 7047     		bx	lr
 5001              		.cfi_endproc
 5002              	.LFE93:
 5004              		.section	.text.SPI_DMATransmitCplt,"ax",%progbits
 5005              		.align	1
 5006              		.syntax unified
 5007              		.thumb
 5008              		.thumb_func
 5010              	SPI_DMATransmitCplt:
 5011              	.LFB94:
2708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @}
2711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @}
2715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
ARM GAS  /tmp/ccFW5O3y.s 			page 136


2717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /** @addtogroup SPI_Private_Functions
2718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief   Private functions
2719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @{
2720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  DMA SPI transmit process complete callback.
2724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma)
2729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 5012              		.loc 1 2729 1
 5013              		.cfi_startproc
 5014              		@ args = 0, pretend = 0, frame = 24
 5015              		@ frame_needed = 1, uses_anonymous_args = 0
 5016 0000 80B5     		push	{r7, lr}
 5017              	.LCFI161:
 5018              		.cfi_def_cfa_offset 8
 5019              		.cfi_offset 7, -8
 5020              		.cfi_offset 14, -4
 5021 0002 86B0     		sub	sp, sp, #24
 5022              	.LCFI162:
 5023              		.cfi_def_cfa_offset 32
 5024 0004 00AF     		add	r7, sp, #0
 5025              	.LCFI163:
 5026              		.cfi_def_cfa_register 7
 5027 0006 7860     		str	r0, [r7, #4]
2730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent);
 5028              		.loc 1 2730 22
 5029 0008 7B68     		ldr	r3, [r7, #4]
 5030 000a 5B6A     		ldr	r3, [r3, #36]
 5031 000c 7B61     		str	r3, [r7, #20]
2731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart;
2732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
2734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tickstart = HAL_GetTick();
 5032              		.loc 1 2734 15
 5033 000e FFF7FEFF 		bl	HAL_GetTick
 5034 0012 3861     		str	r0, [r7, #16]
2735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* DMA Normal Mode */
2737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hdma->Instance->CCR & DMA_CCR_CIRC) != DMA_CCR_CIRC)
 5035              		.loc 1 2737 12
 5036 0014 7B68     		ldr	r3, [r7, #4]
 5037 0016 1B68     		ldr	r3, [r3]
 5038              		.loc 1 2737 22
 5039 0018 1B68     		ldr	r3, [r3]
 5040              		.loc 1 2737 28
 5041 001a 03F02003 		and	r3, r3, #32
 5042              		.loc 1 2737 6
 5043 001e 202B     		cmp	r3, #32
 5044 0020 3BD0     		beq	.L254
2738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable ERR interrupt */
2740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
ARM GAS  /tmp/ccFW5O3y.s 			page 137


 5045              		.loc 1 2740 5
 5046 0022 7B69     		ldr	r3, [r7, #20]
 5047 0024 1B68     		ldr	r3, [r3]
 5048 0026 5A68     		ldr	r2, [r3, #4]
 5049 0028 7B69     		ldr	r3, [r7, #20]
 5050 002a 1B68     		ldr	r3, [r3]
 5051 002c 22F02002 		bic	r2, r2, #32
 5052 0030 5A60     		str	r2, [r3, #4]
2741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable Tx DMA Request */
2743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 5053              		.loc 1 2743 5
 5054 0032 7B69     		ldr	r3, [r7, #20]
 5055 0034 1B68     		ldr	r3, [r3]
 5056 0036 5A68     		ldr	r2, [r3, #4]
 5057 0038 7B69     		ldr	r3, [r7, #20]
 5058 003a 1B68     		ldr	r3, [r3]
 5059 003c 22F00202 		bic	r2, r2, #2
 5060 0040 5A60     		str	r2, [r3, #4]
2744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check the end of the transaction */
2746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
 5061              		.loc 1 2746 9
 5062 0042 3A69     		ldr	r2, [r7, #16]
 5063 0044 6421     		movs	r1, #100
 5064 0046 7869     		ldr	r0, [r7, #20]
 5065 0048 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 5066 004c 0346     		mov	r3, r0
 5067              		.loc 1 2746 8 discriminator 1
 5068 004e 002B     		cmp	r3, #0
 5069 0050 05D0     		beq	.L255
2747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 5070              		.loc 1 2748 7
 5071 0052 7B69     		ldr	r3, [r7, #20]
 5072 0054 5B6D     		ldr	r3, [r3, #84]
 5073 0056 43F02002 		orr	r2, r3, #32
 5074 005a 7B69     		ldr	r3, [r7, #20]
 5075 005c 5A65     		str	r2, [r3, #84]
 5076              	.L255:
2749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Clear overrun flag in 2 Lines communication mode because received data is not read */
2752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 5077              		.loc 1 2752 19
 5078 005e 7B69     		ldr	r3, [r7, #20]
 5079 0060 9B68     		ldr	r3, [r3, #8]
 5080              		.loc 1 2752 8
 5081 0062 002B     		cmp	r3, #0
 5082 0064 0AD1     		bne	.L256
 5083              	.LBB9:
2753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_CLEAR_OVRFLAG(hspi);
 5084              		.loc 1 2754 7
 5085 0066 0023     		movs	r3, #0
 5086 0068 FB60     		str	r3, [r7, #12]
 5087 006a 7B69     		ldr	r3, [r7, #20]
ARM GAS  /tmp/ccFW5O3y.s 			page 138


 5088 006c 1B68     		ldr	r3, [r3]
 5089 006e DB68     		ldr	r3, [r3, #12]
 5090 0070 FB60     		str	r3, [r7, #12]
 5091 0072 7B69     		ldr	r3, [r7, #20]
 5092 0074 1B68     		ldr	r3, [r3]
 5093 0076 9B68     		ldr	r3, [r3, #8]
 5094 0078 FB60     		str	r3, [r7, #12]
 5095 007a FB68     		ldr	r3, [r7, #12]
 5096              	.L256:
 5097              	.LBE9:
2755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxXferCount = 0U;
 5098              		.loc 1 2757 23
 5099 007c 7B69     		ldr	r3, [r7, #20]
 5100 007e 0022     		movs	r2, #0
 5101 0080 DA86     		strh	r2, [r3, #54]	@ movhi
2758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 5102              		.loc 1 2758 17
 5103 0082 7B69     		ldr	r3, [r7, #20]
 5104 0084 0122     		movs	r2, #1
 5105 0086 83F85120 		strb	r2, [r3, #81]
2759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 5106              		.loc 1 2760 13
 5107 008a 7B69     		ldr	r3, [r7, #20]
 5108 008c 5B6D     		ldr	r3, [r3, #84]
 5109              		.loc 1 2760 8
 5110 008e 002B     		cmp	r3, #0
 5111 0090 03D0     		beq	.L254
2761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Call user error callback */
2763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
2765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
2766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
 5112              		.loc 1 2766 7
 5113 0092 7869     		ldr	r0, [r7, #20]
 5114 0094 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
2767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
 5115              		.loc 1 2768 7
 5116 0098 02E0     		b	.L253
 5117              	.L254:
2769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Call user Tx complete callback */
2772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxCpltCallback(hspi);
2774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
2775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_TxCpltCallback(hspi);
 5118              		.loc 1 2775 3
 5119 009a 7869     		ldr	r0, [r7, #20]
 5120 009c FFF7FEFF 		bl	HAL_SPI_TxCpltCallback
 5121              	.L253:
2776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
ARM GAS  /tmp/ccFW5O3y.s 			page 139


 5122              		.loc 1 2777 1
 5123 00a0 1837     		adds	r7, r7, #24
 5124              	.LCFI164:
 5125              		.cfi_def_cfa_offset 8
 5126 00a2 BD46     		mov	sp, r7
 5127              	.LCFI165:
 5128              		.cfi_def_cfa_register 13
 5129              		@ sp needed
 5130 00a4 80BD     		pop	{r7, pc}
 5131              		.cfi_endproc
 5132              	.LFE94:
 5134              		.section	.text.SPI_DMAReceiveCplt,"ax",%progbits
 5135              		.align	1
 5136              		.syntax unified
 5137              		.thumb
 5138              		.thumb_func
 5140              	SPI_DMAReceiveCplt:
 5141              	.LFB95:
2778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  DMA SPI receive process complete callback.
2781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
2786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 5142              		.loc 1 2786 1
 5143              		.cfi_startproc
 5144              		@ args = 0, pretend = 0, frame = 16
 5145              		@ frame_needed = 1, uses_anonymous_args = 0
 5146 0000 80B5     		push	{r7, lr}
 5147              	.LCFI166:
 5148              		.cfi_def_cfa_offset 8
 5149              		.cfi_offset 7, -8
 5150              		.cfi_offset 14, -4
 5151 0002 84B0     		sub	sp, sp, #16
 5152              	.LCFI167:
 5153              		.cfi_def_cfa_offset 24
 5154 0004 00AF     		add	r7, sp, #0
 5155              	.LCFI168:
 5156              		.cfi_def_cfa_register 7
 5157 0006 7860     		str	r0, [r7, #4]
2787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent);
 5158              		.loc 1 2787 22
 5159 0008 7B68     		ldr	r3, [r7, #4]
 5160 000a 5B6A     		ldr	r3, [r3, #36]
 5161 000c FB60     		str	r3, [r7, #12]
2788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart;
2789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t tmpreg = 0U;
2791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
2794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tickstart = HAL_GetTick();
 5162              		.loc 1 2794 15
 5163 000e FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/ccFW5O3y.s 			page 140


 5164 0012 B860     		str	r0, [r7, #8]
2795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* DMA Normal Mode */
2797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hdma->Instance->CCR & DMA_CCR_CIRC) != DMA_CCR_CIRC)
 5165              		.loc 1 2797 12
 5166 0014 7B68     		ldr	r3, [r7, #4]
 5167 0016 1B68     		ldr	r3, [r3]
 5168              		.loc 1 2797 22
 5169 0018 1B68     		ldr	r3, [r3]
 5170              		.loc 1 2797 28
 5171 001a 03F02003 		and	r3, r3, #32
 5172              		.loc 1 2797 6
 5173 001e 202B     		cmp	r3, #32
 5174 0020 3BD0     		beq	.L259
2798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable ERR interrupt */
2800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
 5175              		.loc 1 2800 5
 5176 0022 FB68     		ldr	r3, [r7, #12]
 5177 0024 1B68     		ldr	r3, [r3]
 5178 0026 5A68     		ldr	r2, [r3, #4]
 5179 0028 FB68     		ldr	r3, [r7, #12]
 5180 002a 1B68     		ldr	r3, [r3]
 5181 002c 22F02002 		bic	r2, r2, #32
 5182 0030 5A60     		str	r2, [r3, #4]
2801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* CRC handling */
2804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
2805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Wait until RXNE flag */
2807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, SPI_DEFAULT_TIMEOUT, tickstart) !
2808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Error on the CRC reception */
2810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
2811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Read CRC */
2813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       tmpreg = READ_REG(hspi->Instance->DR);
2814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* To avoid GCC warning */
2815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       UNUSED(tmpreg);
2816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check if we are in Master RX 2 line mode */
2820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if ((hspi->Init.Direction == SPI_DIRECTION_2LINES) && (hspi->Init.Mode == SPI_MODE_MASTER))
 5183              		.loc 1 2820 20
 5184 0032 FB68     		ldr	r3, [r7, #12]
 5185 0034 9B68     		ldr	r3, [r3, #8]
 5186              		.loc 1 2820 8
 5187 0036 002B     		cmp	r3, #0
 5188 0038 0DD1     		bne	.L260
 5189              		.loc 1 2820 70 discriminator 1
 5190 003a FB68     		ldr	r3, [r7, #12]
 5191 003c 5B68     		ldr	r3, [r3, #4]
 5192              		.loc 1 2820 56 discriminator 1
 5193 003e B3F5827F 		cmp	r3, #260
 5194 0042 08D1     		bne	.L260
ARM GAS  /tmp/ccFW5O3y.s 			page 141


2821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Disable Rx/Tx DMA Request (done by default to handle the case master rx direction 2 lines)
2823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 5195              		.loc 1 2823 7
 5196 0044 FB68     		ldr	r3, [r7, #12]
 5197 0046 1B68     		ldr	r3, [r3]
 5198 0048 5A68     		ldr	r2, [r3, #4]
 5199 004a FB68     		ldr	r3, [r7, #12]
 5200 004c 1B68     		ldr	r3, [r3]
 5201 004e 22F00302 		bic	r2, r2, #3
 5202 0052 5A60     		str	r2, [r3, #4]
 5203 0054 07E0     		b	.L261
 5204              	.L260:
2824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
2826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Normal case */
2828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
 5205              		.loc 1 2828 7
 5206 0056 FB68     		ldr	r3, [r7, #12]
 5207 0058 1B68     		ldr	r3, [r3]
 5208 005a 5A68     		ldr	r2, [r3, #4]
 5209 005c FB68     		ldr	r3, [r7, #12]
 5210 005e 1B68     		ldr	r3, [r3]
 5211 0060 22F00102 		bic	r2, r2, #1
 5212 0064 5A60     		str	r2, [r3, #4]
 5213              	.L261:
2829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check the end of the transaction */
2832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_EndRxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
 5214              		.loc 1 2832 9
 5215 0066 BA68     		ldr	r2, [r7, #8]
 5216 0068 6421     		movs	r1, #100
 5217 006a F868     		ldr	r0, [r7, #12]
 5218 006c FFF7FEFF 		bl	SPI_EndRxTransaction
 5219 0070 0346     		mov	r3, r0
 5220              		.loc 1 2832 8 discriminator 1
 5221 0072 002B     		cmp	r3, #0
 5222 0074 02D0     		beq	.L262
2833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 5223              		.loc 1 2834 23
 5224 0076 FB68     		ldr	r3, [r7, #12]
 5225 0078 2022     		movs	r2, #32
 5226 007a 5A65     		str	r2, [r3, #84]
 5227              	.L262:
2835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxXferCount = 0U;
 5228              		.loc 1 2837 23
 5229 007c FB68     		ldr	r3, [r7, #12]
 5230 007e 0022     		movs	r2, #0
 5231 0080 DA87     		strh	r2, [r3, #62]	@ movhi
2838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 5232              		.loc 1 2838 17
 5233 0082 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccFW5O3y.s 			page 142


 5234 0084 0122     		movs	r2, #1
 5235 0086 83F85120 		strb	r2, [r3, #81]
2839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check if CRC error occurred */
2842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
2843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Check if CRC error is valid or not (workaround to be applied or not) */
2845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (SPI_ISCRCErrorValid(hspi) == SPI_VALID_CRC_ERROR)
2846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
2848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Reset CRC Calculation */
2850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SPI_RESET_CRC(hspi);
2851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
2853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
2855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 5236              		.loc 1 2859 13
 5237 008a FB68     		ldr	r3, [r7, #12]
 5238 008c 5B6D     		ldr	r3, [r3, #84]
 5239              		.loc 1 2859 8
 5240 008e 002B     		cmp	r3, #0
 5241 0090 03D0     		beq	.L259
2860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Call user error callback */
2862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
2864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
2865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
 5242              		.loc 1 2865 7
 5243 0092 F868     		ldr	r0, [r7, #12]
 5244 0094 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
2866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
 5245              		.loc 1 2867 7
 5246 0098 02E0     		b	.L258
 5247              	.L259:
2868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Call user Rx complete callback */
2871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxCpltCallback(hspi);
2873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
2874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_RxCpltCallback(hspi);
 5248              		.loc 1 2874 3
 5249 009a F868     		ldr	r0, [r7, #12]
 5250 009c FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
 5251              	.L258:
2875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 5252              		.loc 1 2876 1
ARM GAS  /tmp/ccFW5O3y.s 			page 143


 5253 00a0 1037     		adds	r7, r7, #16
 5254              	.LCFI169:
 5255              		.cfi_def_cfa_offset 8
 5256 00a2 BD46     		mov	sp, r7
 5257              	.LCFI170:
 5258              		.cfi_def_cfa_register 13
 5259              		@ sp needed
 5260 00a4 80BD     		pop	{r7, pc}
 5261              		.cfi_endproc
 5262              	.LFE95:
 5264              		.section	.text.SPI_DMATransmitReceiveCplt,"ax",%progbits
 5265              		.align	1
 5266              		.syntax unified
 5267              		.thumb
 5268              		.thumb_func
 5270              	SPI_DMATransmitReceiveCplt:
 5271              	.LFB96:
2877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  DMA SPI transmit receive process complete callback.
2880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMATransmitReceiveCplt(DMA_HandleTypeDef *hdma)
2885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 5272              		.loc 1 2885 1
 5273              		.cfi_startproc
 5274              		@ args = 0, pretend = 0, frame = 16
 5275              		@ frame_needed = 1, uses_anonymous_args = 0
 5276 0000 80B5     		push	{r7, lr}
 5277              	.LCFI171:
 5278              		.cfi_def_cfa_offset 8
 5279              		.cfi_offset 7, -8
 5280              		.cfi_offset 14, -4
 5281 0002 84B0     		sub	sp, sp, #16
 5282              	.LCFI172:
 5283              		.cfi_def_cfa_offset 24
 5284 0004 00AF     		add	r7, sp, #0
 5285              	.LCFI173:
 5286              		.cfi_def_cfa_register 7
 5287 0006 7860     		str	r0, [r7, #4]
2886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent);
 5288              		.loc 1 2886 22
 5289 0008 7B68     		ldr	r3, [r7, #4]
 5290 000a 5B6A     		ldr	r3, [r3, #36]
 5291 000c FB60     		str	r3, [r7, #12]
2887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart;
2888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t tmpreg = 0U;
2890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
2893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tickstart = HAL_GetTick();
 5292              		.loc 1 2893 15
 5293 000e FFF7FEFF 		bl	HAL_GetTick
 5294 0012 B860     		str	r0, [r7, #8]
ARM GAS  /tmp/ccFW5O3y.s 			page 144


2894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* DMA Normal Mode */
2896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hdma->Instance->CCR & DMA_CCR_CIRC) != DMA_CCR_CIRC)
 5295              		.loc 1 2896 12
 5296 0014 7B68     		ldr	r3, [r7, #4]
 5297 0016 1B68     		ldr	r3, [r3]
 5298              		.loc 1 2896 22
 5299 0018 1B68     		ldr	r3, [r3]
 5300              		.loc 1 2896 28
 5301 001a 03F02003 		and	r3, r3, #32
 5302              		.loc 1 2896 6
 5303 001e 202B     		cmp	r3, #32
 5304 0020 2FD0     		beq	.L265
2897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
2898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable ERR interrupt */
2899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
 5305              		.loc 1 2899 5
 5306 0022 FB68     		ldr	r3, [r7, #12]
 5307 0024 1B68     		ldr	r3, [r3]
 5308 0026 5A68     		ldr	r2, [r3, #4]
 5309 0028 FB68     		ldr	r3, [r7, #12]
 5310 002a 1B68     		ldr	r3, [r3]
 5311 002c 22F02002 		bic	r2, r2, #32
 5312 0030 5A60     		str	r2, [r3, #4]
2900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* CRC handling */
2903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
2904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Wait the CRC data */
2906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, SET, SPI_DEFAULT_TIMEOUT, tickstart) !
2907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
2909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Read CRC to Flush DR and RXNE flag */
2911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       tmpreg = READ_REG(hspi->Instance->DR);
2912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* To avoid GCC warning */
2913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       UNUSED(tmpreg);
2914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check the end of the transaction */
2918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
 5313              		.loc 1 2918 9
 5314 0032 BA68     		ldr	r2, [r7, #8]
 5315 0034 6421     		movs	r1, #100
 5316 0036 F868     		ldr	r0, [r7, #12]
 5317 0038 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 5318 003c 0346     		mov	r3, r0
 5319              		.loc 1 2918 8 discriminator 1
 5320 003e 002B     		cmp	r3, #0
 5321 0040 05D0     		beq	.L266
2919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 5322              		.loc 1 2920 7
 5323 0042 FB68     		ldr	r3, [r7, #12]
 5324 0044 5B6D     		ldr	r3, [r3, #84]
ARM GAS  /tmp/ccFW5O3y.s 			page 145


 5325 0046 43F02002 		orr	r2, r3, #32
 5326 004a FB68     		ldr	r3, [r7, #12]
 5327 004c 5A65     		str	r2, [r3, #84]
 5328              	.L266:
2921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable Rx/Tx DMA Request */
2924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 5329              		.loc 1 2924 5
 5330 004e FB68     		ldr	r3, [r7, #12]
 5331 0050 1B68     		ldr	r3, [r3]
 5332 0052 5A68     		ldr	r2, [r3, #4]
 5333 0054 FB68     		ldr	r3, [r7, #12]
 5334 0056 1B68     		ldr	r3, [r3]
 5335 0058 22F00302 		bic	r2, r2, #3
 5336 005c 5A60     		str	r2, [r3, #4]
2925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxXferCount = 0U;
 5337              		.loc 1 2926 23
 5338 005e FB68     		ldr	r3, [r7, #12]
 5339 0060 0022     		movs	r2, #0
 5340 0062 DA86     		strh	r2, [r3, #54]	@ movhi
2927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->RxXferCount = 0U;
 5341              		.loc 1 2927 23
 5342 0064 FB68     		ldr	r3, [r7, #12]
 5343 0066 0022     		movs	r2, #0
 5344 0068 DA87     		strh	r2, [r3, #62]	@ movhi
2928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->State = HAL_SPI_STATE_READY;
 5345              		.loc 1 2928 17
 5346 006a FB68     		ldr	r3, [r7, #12]
 5347 006c 0122     		movs	r2, #1
 5348 006e 83F85120 		strb	r2, [r3, #81]
2929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
2931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check if CRC error occurred */
2932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
2933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Check if CRC error is valid or not (workaround to be applied or not) */
2935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (SPI_ISCRCErrorValid(hspi) == SPI_VALID_CRC_ERROR)
2936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
2938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Reset CRC Calculation */
2940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         SPI_RESET_CRC(hspi);
2941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
2943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
2944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
2945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
2946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
2948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 5349              		.loc 1 2949 13
 5350 0072 FB68     		ldr	r3, [r7, #12]
 5351 0074 5B6D     		ldr	r3, [r3, #84]
 5352              		.loc 1 2949 8
ARM GAS  /tmp/ccFW5O3y.s 			page 146


 5353 0076 002B     		cmp	r3, #0
 5354 0078 03D0     		beq	.L265
2950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
2951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Call user error callback */
2952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
2954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
2955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
 5355              		.loc 1 2955 7
 5356 007a F868     		ldr	r0, [r7, #12]
 5357 007c FFF7FEFF 		bl	HAL_SPI_ErrorCallback
2956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
 5358              		.loc 1 2957 7
 5359 0080 02E0     		b	.L264
 5360              	.L265:
2958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
2959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
2960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Call user TxRx complete callback */
2961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxRxCpltCallback(hspi);
2963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
2964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_TxRxCpltCallback(hspi);
 5361              		.loc 1 2964 3
 5362 0082 F868     		ldr	r0, [r7, #12]
 5363 0084 FFF7FEFF 		bl	HAL_SPI_TxRxCpltCallback
 5364              	.L264:
2965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 5365              		.loc 1 2966 1
 5366 0088 1037     		adds	r7, r7, #16
 5367              	.LCFI174:
 5368              		.cfi_def_cfa_offset 8
 5369 008a BD46     		mov	sp, r7
 5370              	.LCFI175:
 5371              		.cfi_def_cfa_register 13
 5372              		@ sp needed
 5373 008c 80BD     		pop	{r7, pc}
 5374              		.cfi_endproc
 5375              	.LFE96:
 5377              		.section	.text.SPI_DMAHalfTransmitCplt,"ax",%progbits
 5378              		.align	1
 5379              		.syntax unified
 5380              		.thumb
 5381              		.thumb_func
 5383              	SPI_DMAHalfTransmitCplt:
 5384              	.LFB97:
2967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  DMA SPI half transmit process complete callback.
2970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
2974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma)
2975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 5385              		.loc 1 2975 1
ARM GAS  /tmp/ccFW5O3y.s 			page 147


 5386              		.cfi_startproc
 5387              		@ args = 0, pretend = 0, frame = 16
 5388              		@ frame_needed = 1, uses_anonymous_args = 0
 5389 0000 80B5     		push	{r7, lr}
 5390              	.LCFI176:
 5391              		.cfi_def_cfa_offset 8
 5392              		.cfi_offset 7, -8
 5393              		.cfi_offset 14, -4
 5394 0002 84B0     		sub	sp, sp, #16
 5395              	.LCFI177:
 5396              		.cfi_def_cfa_offset 24
 5397 0004 00AF     		add	r7, sp, #0
 5398              	.LCFI178:
 5399              		.cfi_def_cfa_register 7
 5400 0006 7860     		str	r0, [r7, #4]
2976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent);
 5401              		.loc 1 2976 22
 5402 0008 7B68     		ldr	r3, [r7, #4]
 5403 000a 5B6A     		ldr	r3, [r3, #36]
 5404 000c FB60     		str	r3, [r7, #12]
2977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Call user Tx half complete callback */
2979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxHalfCpltCallback(hspi);
2981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
2982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_TxHalfCpltCallback(hspi);
 5405              		.loc 1 2982 3
 5406 000e F868     		ldr	r0, [r7, #12]
 5407 0010 FFF7FEFF 		bl	HAL_SPI_TxHalfCpltCallback
2983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
2984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 5408              		.loc 1 2984 1
 5409 0014 00BF     		nop
 5410 0016 1037     		adds	r7, r7, #16
 5411              	.LCFI179:
 5412              		.cfi_def_cfa_offset 8
 5413 0018 BD46     		mov	sp, r7
 5414              	.LCFI180:
 5415              		.cfi_def_cfa_register 13
 5416              		@ sp needed
 5417 001a 80BD     		pop	{r7, pc}
 5418              		.cfi_endproc
 5419              	.LFE97:
 5421              		.section	.text.SPI_DMAHalfReceiveCplt,"ax",%progbits
 5422              		.align	1
 5423              		.syntax unified
 5424              		.thumb
 5425              		.thumb_func
 5427              	SPI_DMAHalfReceiveCplt:
 5428              	.LFB98:
2985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
2987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  DMA SPI half receive process complete callback
2988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
2990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
2991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
ARM GAS  /tmp/ccFW5O3y.s 			page 148


2992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAHalfReceiveCplt(DMA_HandleTypeDef *hdma)
2993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 5429              		.loc 1 2993 1
 5430              		.cfi_startproc
 5431              		@ args = 0, pretend = 0, frame = 16
 5432              		@ frame_needed = 1, uses_anonymous_args = 0
 5433 0000 80B5     		push	{r7, lr}
 5434              	.LCFI181:
 5435              		.cfi_def_cfa_offset 8
 5436              		.cfi_offset 7, -8
 5437              		.cfi_offset 14, -4
 5438 0002 84B0     		sub	sp, sp, #16
 5439              	.LCFI182:
 5440              		.cfi_def_cfa_offset 24
 5441 0004 00AF     		add	r7, sp, #0
 5442              	.LCFI183:
 5443              		.cfi_def_cfa_register 7
 5444 0006 7860     		str	r0, [r7, #4]
2994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent);
 5445              		.loc 1 2994 22
 5446 0008 7B68     		ldr	r3, [r7, #4]
 5447 000a 5B6A     		ldr	r3, [r3, #36]
 5448 000c FB60     		str	r3, [r7, #12]
2995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
2996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Call user Rx half complete callback */
2997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
2998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxHalfCpltCallback(hspi);
2999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
3000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_RxHalfCpltCallback(hspi);
 5449              		.loc 1 3000 3
 5450 000e F868     		ldr	r0, [r7, #12]
 5451 0010 FFF7FEFF 		bl	HAL_SPI_RxHalfCpltCallback
3001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 5452              		.loc 1 3002 1
 5453 0014 00BF     		nop
 5454 0016 1037     		adds	r7, r7, #16
 5455              	.LCFI184:
 5456              		.cfi_def_cfa_offset 8
 5457 0018 BD46     		mov	sp, r7
 5458              	.LCFI185:
 5459              		.cfi_def_cfa_register 13
 5460              		@ sp needed
 5461 001a 80BD     		pop	{r7, pc}
 5462              		.cfi_endproc
 5463              	.LFE98:
 5465              		.section	.text.SPI_DMAHalfTransmitReceiveCplt,"ax",%progbits
 5466              		.align	1
 5467              		.syntax unified
 5468              		.thumb
 5469              		.thumb_func
 5471              	SPI_DMAHalfTransmitReceiveCplt:
 5472              	.LFB99:
3003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  DMA SPI half transmit receive process complete callback.
3006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
ARM GAS  /tmp/ccFW5O3y.s 			page 149


3007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAHalfTransmitReceiveCplt(DMA_HandleTypeDef *hdma)
3011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 5473              		.loc 1 3011 1
 5474              		.cfi_startproc
 5475              		@ args = 0, pretend = 0, frame = 16
 5476              		@ frame_needed = 1, uses_anonymous_args = 0
 5477 0000 80B5     		push	{r7, lr}
 5478              	.LCFI186:
 5479              		.cfi_def_cfa_offset 8
 5480              		.cfi_offset 7, -8
 5481              		.cfi_offset 14, -4
 5482 0002 84B0     		sub	sp, sp, #16
 5483              	.LCFI187:
 5484              		.cfi_def_cfa_offset 24
 5485 0004 00AF     		add	r7, sp, #0
 5486              	.LCFI188:
 5487              		.cfi_def_cfa_register 7
 5488 0006 7860     		str	r0, [r7, #4]
3012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent);
 5489              		.loc 1 3012 22
 5490 0008 7B68     		ldr	r3, [r7, #4]
 5491 000a 5B6A     		ldr	r3, [r3, #36]
 5492 000c FB60     		str	r3, [r7, #12]
3013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Call user TxRx half complete callback */
3015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxRxHalfCpltCallback(hspi);
3017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
3018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_TxRxHalfCpltCallback(hspi);
 5493              		.loc 1 3018 3
 5494 000e F868     		ldr	r0, [r7, #12]
 5495 0010 FFF7FEFF 		bl	HAL_SPI_TxRxHalfCpltCallback
3019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 5496              		.loc 1 3020 1
 5497 0014 00BF     		nop
 5498 0016 1037     		adds	r7, r7, #16
 5499              	.LCFI189:
 5500              		.cfi_def_cfa_offset 8
 5501 0018 BD46     		mov	sp, r7
 5502              	.LCFI190:
 5503              		.cfi_def_cfa_register 13
 5504              		@ sp needed
 5505 001a 80BD     		pop	{r7, pc}
 5506              		.cfi_endproc
 5507              	.LFE99:
 5509              		.section	.text.SPI_DMAError,"ax",%progbits
 5510              		.align	1
 5511              		.syntax unified
 5512              		.thumb
 5513              		.thumb_func
 5515              	SPI_DMAError:
 5516              	.LFB100:
3021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
ARM GAS  /tmp/ccFW5O3y.s 			page 150


3022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  DMA SPI communication error callback.
3024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
3025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for the specified DMA module.
3026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAError(DMA_HandleTypeDef *hdma)
3029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 5517              		.loc 1 3029 1
 5518              		.cfi_startproc
 5519              		@ args = 0, pretend = 0, frame = 16
 5520              		@ frame_needed = 1, uses_anonymous_args = 0
 5521 0000 80B5     		push	{r7, lr}
 5522              	.LCFI191:
 5523              		.cfi_def_cfa_offset 8
 5524              		.cfi_offset 7, -8
 5525              		.cfi_offset 14, -4
 5526 0002 84B0     		sub	sp, sp, #16
 5527              	.LCFI192:
 5528              		.cfi_def_cfa_offset 24
 5529 0004 00AF     		add	r7, sp, #0
 5530              	.LCFI193:
 5531              		.cfi_def_cfa_register 7
 5532 0006 7860     		str	r0, [r7, #4]
3030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent);
 5533              		.loc 1 3030 22
 5534 0008 7B68     		ldr	r3, [r7, #4]
 5535 000a 5B6A     		ldr	r3, [r3, #36]
 5536 000c FB60     		str	r3, [r7, #12]
3031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Stop the disable DMA transfer on SPI side */
3033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 5537              		.loc 1 3033 3
 5538 000e FB68     		ldr	r3, [r7, #12]
 5539 0010 1B68     		ldr	r3, [r3]
 5540 0012 5A68     		ldr	r2, [r3, #4]
 5541 0014 FB68     		ldr	r3, [r7, #12]
 5542 0016 1B68     		ldr	r3, [r3]
 5543 0018 22F00302 		bic	r2, r2, #3
 5544 001c 5A60     		str	r2, [r3, #4]
3034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 5545              		.loc 1 3035 3
 5546 001e FB68     		ldr	r3, [r7, #12]
 5547 0020 5B6D     		ldr	r3, [r3, #84]
 5548 0022 43F01002 		orr	r2, r3, #16
 5549 0026 FB68     		ldr	r3, [r7, #12]
 5550 0028 5A65     		str	r2, [r3, #84]
3036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 5551              		.loc 1 3036 15
 5552 002a FB68     		ldr	r3, [r7, #12]
 5553 002c 0122     		movs	r2, #1
 5554 002e 83F85120 		strb	r2, [r3, #81]
3037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Call user error callback */
3038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCallback(hspi);
3040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
ARM GAS  /tmp/ccFW5O3y.s 			page 151


3041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_ErrorCallback(hspi);
 5555              		.loc 1 3041 3
 5556 0032 F868     		ldr	r0, [r7, #12]
 5557 0034 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
3042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 5558              		.loc 1 3043 1
 5559 0038 00BF     		nop
 5560 003a 1037     		adds	r7, r7, #16
 5561              	.LCFI194:
 5562              		.cfi_def_cfa_offset 8
 5563 003c BD46     		mov	sp, r7
 5564              	.LCFI195:
 5565              		.cfi_def_cfa_register 13
 5566              		@ sp needed
 5567 003e 80BD     		pop	{r7, pc}
 5568              		.cfi_endproc
 5569              	.LFE100:
 5571              		.section	.text.SPI_DMAAbortOnError,"ax",%progbits
 5572              		.align	1
 5573              		.syntax unified
 5574              		.thumb
 5575              		.thumb_func
 5577              	SPI_DMAAbortOnError:
 5578              	.LFB101:
3044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  DMA SPI communication abort callback, when initiated by HAL services on Error
3047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
3048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hdma DMA handle.
3049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma)
3052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 5579              		.loc 1 3052 1
 5580              		.cfi_startproc
 5581              		@ args = 0, pretend = 0, frame = 16
 5582              		@ frame_needed = 1, uses_anonymous_args = 0
 5583 0000 80B5     		push	{r7, lr}
 5584              	.LCFI196:
 5585              		.cfi_def_cfa_offset 8
 5586              		.cfi_offset 7, -8
 5587              		.cfi_offset 14, -4
 5588 0002 84B0     		sub	sp, sp, #16
 5589              	.LCFI197:
 5590              		.cfi_def_cfa_offset 24
 5591 0004 00AF     		add	r7, sp, #0
 5592              	.LCFI198:
 5593              		.cfi_def_cfa_register 7
 5594 0006 7860     		str	r0, [r7, #4]
3053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent);
 5595              		.loc 1 3053 22
 5596 0008 7B68     		ldr	r3, [r7, #4]
 5597 000a 5B6A     		ldr	r3, [r3, #36]
 5598 000c FB60     		str	r3, [r7, #12]
3054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 5599              		.loc 1 3054 21
ARM GAS  /tmp/ccFW5O3y.s 			page 152


 5600 000e FB68     		ldr	r3, [r7, #12]
 5601 0010 0022     		movs	r2, #0
 5602 0012 DA87     		strh	r2, [r3, #62]	@ movhi
3055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 5603              		.loc 1 3055 21
 5604 0014 FB68     		ldr	r3, [r7, #12]
 5605 0016 0022     		movs	r2, #0
 5606 0018 DA86     		strh	r2, [r3, #54]	@ movhi
3056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Call user error callback */
3058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->ErrorCallback(hspi);
3060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
3061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_ErrorCallback(hspi);
 5607              		.loc 1 3061 3
 5608 001a F868     		ldr	r0, [r7, #12]
 5609 001c FFF7FEFF 		bl	HAL_SPI_ErrorCallback
3062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 5610              		.loc 1 3063 1
 5611 0020 00BF     		nop
 5612 0022 1037     		adds	r7, r7, #16
 5613              	.LCFI199:
 5614              		.cfi_def_cfa_offset 8
 5615 0024 BD46     		mov	sp, r7
 5616              	.LCFI200:
 5617              		.cfi_def_cfa_register 13
 5618              		@ sp needed
 5619 0026 80BD     		pop	{r7, pc}
 5620              		.cfi_endproc
 5621              	.LFE101:
 5623              		.section	.text.SPI_DMATxAbortCallback,"ax",%progbits
 5624              		.align	1
 5625              		.syntax unified
 5626              		.thumb
 5627              		.thumb_func
 5629              	SPI_DMATxAbortCallback:
 5630              	.LFB102:
3064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  DMA SPI Tx communication abort callback, when initiated by user
3067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
3068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         Abort still ongoing for Rx DMA Handle.
3070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hdma DMA handle.
3071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
3074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 5631              		.loc 1 3074 1
 5632              		.cfi_startproc
 5633              		@ args = 0, pretend = 0, frame = 24
 5634              		@ frame_needed = 1, uses_anonymous_args = 0
 5635 0000 80B5     		push	{r7, lr}
 5636              	.LCFI201:
 5637              		.cfi_def_cfa_offset 8
 5638              		.cfi_offset 7, -8
ARM GAS  /tmp/ccFW5O3y.s 			page 153


 5639              		.cfi_offset 14, -4
 5640 0002 86B0     		sub	sp, sp, #24
 5641              	.LCFI202:
 5642              		.cfi_def_cfa_offset 32
 5643 0004 00AF     		add	r7, sp, #0
 5644              	.LCFI203:
 5645              		.cfi_def_cfa_register 7
 5646 0006 7860     		str	r0, [r7, #4]
3075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent);
 5647              		.loc 1 3075 22
 5648 0008 7B68     		ldr	r3, [r7, #4]
 5649 000a 5B6A     		ldr	r3, [r3, #36]
 5650 000c 7B61     		str	r3, [r7, #20]
3076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t count;
3077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmatx->XferAbortCallback = NULL;
 5651              		.loc 1 3078 7
 5652 000e 7B69     		ldr	r3, [r7, #20]
 5653 0010 9B6C     		ldr	r3, [r3, #72]
 5654              		.loc 1 3078 35
 5655 0012 0022     		movs	r2, #0
 5656 0014 5A63     		str	r2, [r3, #52]
3079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 5657              		.loc 1 3079 56
 5658 0016 294B     		ldr	r3, .L281
 5659 0018 1B68     		ldr	r3, [r3]
 5660 001a 294A     		ldr	r2, .L281+4
 5661 001c A2FB0323 		umull	r2, r3, r2, r3
 5662 0020 5B0A     		lsrs	r3, r3, #9
 5663              		.loc 1 3079 31
 5664 0022 6422     		movs	r2, #100
 5665 0024 02FB03F3 		mul	r3, r2, r3
 5666              		.loc 1 3079 9
 5667 0028 3B61     		str	r3, [r7, #16]
3080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable Tx DMA Request */
3082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 5668              		.loc 1 3082 3
 5669 002a 7B69     		ldr	r3, [r7, #20]
 5670 002c 1B68     		ldr	r3, [r3]
 5671 002e 5A68     		ldr	r2, [r3, #4]
 5672 0030 7B69     		ldr	r3, [r7, #20]
 5673 0032 1B68     		ldr	r3, [r3]
 5674 0034 22F00202 		bic	r2, r2, #2
 5675 0038 5A60     		str	r2, [r3, #4]
 5676              	.L276:
3083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Wait until TXE flag is set */
3085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   do
3086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (count == 0U)
 5677              		.loc 1 3087 15
 5678 003a 3B69     		ldr	r3, [r7, #16]
 5679              		.loc 1 3087 8
 5680 003c 002B     		cmp	r3, #0
 5681 003e 06D1     		bne	.L274
3088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
ARM GAS  /tmp/ccFW5O3y.s 			page 154


3089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 5682              		.loc 1 3089 7
 5683 0040 7B69     		ldr	r3, [r7, #20]
 5684 0042 5B6D     		ldr	r3, [r3, #84]
 5685 0044 43F04002 		orr	r2, r3, #64
 5686 0048 7B69     		ldr	r3, [r7, #20]
 5687 004a 5A65     		str	r2, [r3, #84]
3090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       break;
 5688              		.loc 1 3090 7
 5689 004c 09E0     		b	.L275
 5690              	.L274:
3091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     count--;
 5691              		.loc 1 3092 10
 5692 004e 3B69     		ldr	r3, [r7, #16]
 5693 0050 013B     		subs	r3, r3, #1
 5694 0052 3B61     		str	r3, [r7, #16]
3093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
 5695              		.loc 1 3093 17
 5696 0054 7B69     		ldr	r3, [r7, #20]
 5697 0056 1B68     		ldr	r3, [r3]
 5698              		.loc 1 3093 27
 5699 0058 9B68     		ldr	r3, [r3, #8]
 5700              		.loc 1 3093 32
 5701 005a 03F00203 		and	r3, r3, #2
 5702              		.loc 1 3093 48
 5703 005e 002B     		cmp	r3, #0
 5704 0060 EBD0     		beq	.L276
 5705              	.L275:
3094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if an Abort process is still ongoing */
3096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->hdmarx != NULL)
 5706              		.loc 1 3096 11
 5707 0062 7B69     		ldr	r3, [r7, #20]
 5708 0064 DB6C     		ldr	r3, [r3, #76]
 5709              		.loc 1 3096 6
 5710 0066 002B     		cmp	r3, #0
 5711 0068 04D0     		beq	.L277
3097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->hdmarx->XferAbortCallback != NULL)
 5712              		.loc 1 3098 13
 5713 006a 7B69     		ldr	r3, [r7, #20]
 5714 006c DB6C     		ldr	r3, [r3, #76]
 5715              		.loc 1 3098 21
 5716 006e 5B6B     		ldr	r3, [r3, #52]
 5717              		.loc 1 3098 8
 5718 0070 002B     		cmp	r3, #0
 5719 0072 1FD1     		bne	.L280
 5720              	.L277:
3099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
3101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* No Abort process still ongoing : All DMA Stream/Channel are aborted, call user Abort Complete 
3105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 5721              		.loc 1 3105 21
ARM GAS  /tmp/ccFW5O3y.s 			page 155


 5722 0074 7B69     		ldr	r3, [r7, #20]
 5723 0076 0022     		movs	r2, #0
 5724 0078 DA87     		strh	r2, [r3, #62]	@ movhi
3106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 5725              		.loc 1 3106 21
 5726 007a 7B69     		ldr	r3, [r7, #20]
 5727 007c 0022     		movs	r2, #0
 5728 007e DA86     		strh	r2, [r3, #54]	@ movhi
3107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check no error during Abort procedure */
3109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_ABORT)
 5729              		.loc 1 3109 11
 5730 0080 7B69     		ldr	r3, [r7, #20]
 5731 0082 5B6D     		ldr	r3, [r3, #84]
 5732              		.loc 1 3109 6
 5733 0084 402B     		cmp	r3, #64
 5734 0086 02D0     		beq	.L279
3110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Reset errorCode */
3112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 5735              		.loc 1 3112 21
 5736 0088 7B69     		ldr	r3, [r7, #20]
 5737 008a 0022     		movs	r2, #0
 5738 008c 5A65     		str	r2, [r3, #84]
 5739              	.L279:
 5740              	.LBB10:
3113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
3116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
 5741              		.loc 1 3116 3
 5742 008e 0023     		movs	r3, #0
 5743 0090 FB60     		str	r3, [r7, #12]
 5744 0092 7B69     		ldr	r3, [r7, #20]
 5745 0094 1B68     		ldr	r3, [r3]
 5746 0096 DB68     		ldr	r3, [r3, #12]
 5747 0098 FB60     		str	r3, [r7, #12]
 5748 009a 7B69     		ldr	r3, [r7, #20]
 5749 009c 1B68     		ldr	r3, [r3]
 5750 009e 9B68     		ldr	r3, [r3, #8]
 5751 00a0 FB60     		str	r3, [r7, #12]
 5752 00a2 FB68     		ldr	r3, [r7, #12]
 5753              	.LBE10:
3117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Restore hspi->State to Ready */
3119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State  = HAL_SPI_STATE_READY;
 5754              		.loc 1 3119 16
 5755 00a4 7B69     		ldr	r3, [r7, #20]
 5756 00a6 0122     		movs	r2, #1
 5757 00a8 83F85120 		strb	r2, [r3, #81]
3120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Call user Abort complete callback */
3122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->AbortCpltCallback(hspi);
3124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
3125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_AbortCpltCallback(hspi);
 5758              		.loc 1 3125 3
ARM GAS  /tmp/ccFW5O3y.s 			page 156


 5759 00ac 7869     		ldr	r0, [r7, #20]
 5760 00ae FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 5761 00b2 00E0     		b	.L273
 5762              	.L280:
3100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 5763              		.loc 1 3100 7
 5764 00b4 00BF     		nop
 5765              	.L273:
3126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 5766              		.loc 1 3127 1
 5767 00b6 1837     		adds	r7, r7, #24
 5768              	.LCFI204:
 5769              		.cfi_def_cfa_offset 8
 5770 00b8 BD46     		mov	sp, r7
 5771              	.LCFI205:
 5772              		.cfi_def_cfa_register 13
 5773              		@ sp needed
 5774 00ba 80BD     		pop	{r7, pc}
 5775              	.L282:
 5776              		.align	2
 5777              	.L281:
 5778 00bc 00000000 		.word	SystemCoreClock
 5779 00c0 F1197605 		.word	91625969
 5780              		.cfi_endproc
 5781              	.LFE102:
 5783              		.section	.text.SPI_DMARxAbortCallback,"ax",%progbits
 5784              		.align	1
 5785              		.syntax unified
 5786              		.thumb
 5787              		.thumb_func
 5789              	SPI_DMARxAbortCallback:
 5790              	.LFB103:
3128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  DMA SPI Rx communication abort callback, when initiated by user
3131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *         Abort still ongoing for Tx DMA Handle.
3134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hdma DMA handle.
3135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
3138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 5791              		.loc 1 3138 1
 5792              		.cfi_startproc
 5793              		@ args = 0, pretend = 0, frame = 16
 5794              		@ frame_needed = 1, uses_anonymous_args = 0
 5795 0000 80B5     		push	{r7, lr}
 5796              	.LCFI206:
 5797              		.cfi_def_cfa_offset 8
 5798              		.cfi_offset 7, -8
 5799              		.cfi_offset 14, -4
 5800 0002 84B0     		sub	sp, sp, #16
 5801              	.LCFI207:
 5802              		.cfi_def_cfa_offset 24
 5803 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccFW5O3y.s 			page 157


 5804              	.LCFI208:
 5805              		.cfi_def_cfa_register 7
 5806 0006 7860     		str	r0, [r7, #4]
3139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent);
 5807              		.loc 1 3139 22
 5808 0008 7B68     		ldr	r3, [r7, #4]
 5809 000a 5B6A     		ldr	r3, [r3, #36]
 5810 000c FB60     		str	r3, [r7, #12]
3140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable SPI Peripheral */
3142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 5811              		.loc 1 3142 3
 5812 000e FB68     		ldr	r3, [r7, #12]
 5813 0010 1B68     		ldr	r3, [r3]
 5814 0012 1A68     		ldr	r2, [r3]
 5815 0014 FB68     		ldr	r3, [r7, #12]
 5816 0016 1B68     		ldr	r3, [r3]
 5817 0018 22F04002 		bic	r2, r2, #64
 5818 001c 1A60     		str	r2, [r3]
3143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->hdmarx->XferAbortCallback = NULL;
 5819              		.loc 1 3144 7
 5820 001e FB68     		ldr	r3, [r7, #12]
 5821 0020 DB6C     		ldr	r3, [r3, #76]
 5822              		.loc 1 3144 35
 5823 0022 0022     		movs	r2, #0
 5824 0024 5A63     		str	r2, [r3, #52]
3145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable Rx DMA Request */
3147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_RXDMAEN);
 5825              		.loc 1 3147 3
 5826 0026 FB68     		ldr	r3, [r7, #12]
 5827 0028 1B68     		ldr	r3, [r3]
 5828 002a 5A68     		ldr	r2, [r3, #4]
 5829 002c FB68     		ldr	r3, [r7, #12]
 5830 002e 1B68     		ldr	r3, [r3]
 5831 0030 22F00102 		bic	r2, r2, #1
 5832 0034 5A60     		str	r2, [r3, #4]
3148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check Busy flag */
3150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) != HAL_OK)
 5833              		.loc 1 3150 7
 5834 0036 FFF7FEFF 		bl	HAL_GetTick
 5835 003a 0346     		mov	r3, r0
 5836              		.loc 1 3150 7 is_stmt 0 discriminator 1
 5837 003c 1A46     		mov	r2, r3
 5838 003e 6421     		movs	r1, #100
 5839 0040 F868     		ldr	r0, [r7, #12]
 5840 0042 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 5841 0046 0346     		mov	r3, r0
 5842              		.loc 1 3150 6 is_stmt 1 discriminator 2
 5843 0048 002B     		cmp	r3, #0
 5844 004a 05D0     		beq	.L284
3151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 5845              		.loc 1 3152 5
 5846 004c FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccFW5O3y.s 			page 158


 5847 004e 5B6D     		ldr	r3, [r3, #84]
 5848 0050 43F04002 		orr	r2, r3, #64
 5849 0054 FB68     		ldr	r3, [r7, #12]
 5850 0056 5A65     		str	r2, [r3, #84]
 5851              	.L284:
3153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if an Abort process is still ongoing */
3156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->hdmatx != NULL)
 5852              		.loc 1 3156 11
 5853 0058 FB68     		ldr	r3, [r7, #12]
 5854 005a 9B6C     		ldr	r3, [r3, #72]
 5855              		.loc 1 3156 6
 5856 005c 002B     		cmp	r3, #0
 5857 005e 04D0     		beq	.L285
3157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->hdmatx->XferAbortCallback != NULL)
 5858              		.loc 1 3158 13
 5859 0060 FB68     		ldr	r3, [r7, #12]
 5860 0062 9B6C     		ldr	r3, [r3, #72]
 5861              		.loc 1 3158 21
 5862 0064 5B6B     		ldr	r3, [r3, #52]
 5863              		.loc 1 3158 8
 5864 0066 002B     		cmp	r3, #0
 5865 0068 1FD1     		bne	.L288
 5866              	.L285:
3159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
3161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* No Abort process still ongoing : All DMA Stream/Channel are aborted, call user Abort Complete 
3165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount = 0U;
 5867              		.loc 1 3165 21
 5868 006a FB68     		ldr	r3, [r7, #12]
 5869 006c 0022     		movs	r2, #0
 5870 006e DA87     		strh	r2, [r3, #62]	@ movhi
3166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount = 0U;
 5871              		.loc 1 3166 21
 5872 0070 FB68     		ldr	r3, [r7, #12]
 5873 0072 0022     		movs	r2, #0
 5874 0074 DA86     		strh	r2, [r3, #54]	@ movhi
3167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check no error during Abort procedure */
3169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_ABORT)
 5875              		.loc 1 3169 11
 5876 0076 FB68     		ldr	r3, [r7, #12]
 5877 0078 5B6D     		ldr	r3, [r3, #84]
 5878              		.loc 1 3169 6
 5879 007a 402B     		cmp	r3, #64
 5880 007c 02D0     		beq	.L287
3170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Reset errorCode */
3172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 5881              		.loc 1 3172 21
 5882 007e FB68     		ldr	r3, [r7, #12]
 5883 0080 0022     		movs	r2, #0
ARM GAS  /tmp/ccFW5O3y.s 			page 159


 5884 0082 5A65     		str	r2, [r3, #84]
 5885              	.L287:
 5886              	.LBB11:
3173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Clear the Error flags in the SR register */
3176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_CLEAR_OVRFLAG(hspi);
 5887              		.loc 1 3176 3
 5888 0084 0023     		movs	r3, #0
 5889 0086 BB60     		str	r3, [r7, #8]
 5890 0088 FB68     		ldr	r3, [r7, #12]
 5891 008a 1B68     		ldr	r3, [r3]
 5892 008c DB68     		ldr	r3, [r3, #12]
 5893 008e BB60     		str	r3, [r7, #8]
 5894 0090 FB68     		ldr	r3, [r7, #12]
 5895 0092 1B68     		ldr	r3, [r3]
 5896 0094 9B68     		ldr	r3, [r3, #8]
 5897 0096 BB60     		str	r3, [r7, #8]
 5898 0098 BB68     		ldr	r3, [r7, #8]
 5899              	.LBE11:
3177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Restore hspi->State to Ready */
3179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State  = HAL_SPI_STATE_READY;
 5900              		.loc 1 3179 16
 5901 009a FB68     		ldr	r3, [r7, #12]
 5902 009c 0122     		movs	r2, #1
 5903 009e 83F85120 		strb	r2, [r3, #81]
3180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Call user Abort complete callback */
3182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->AbortCpltCallback(hspi);
3184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
3185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   HAL_SPI_AbortCpltCallback(hspi);
 5904              		.loc 1 3185 3
 5905 00a2 F868     		ldr	r0, [r7, #12]
 5906 00a4 FFF7FEFF 		bl	HAL_SPI_AbortCpltCallback
 5907 00a8 00E0     		b	.L283
 5908              	.L288:
3160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
 5909              		.loc 1 3160 7
 5910 00aa 00BF     		nop
 5911              	.L283:
3186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 5912              		.loc 1 3187 1
 5913 00ac 1037     		adds	r7, r7, #16
 5914              	.LCFI209:
 5915              		.cfi_def_cfa_offset 8
 5916 00ae BD46     		mov	sp, r7
 5917              	.LCFI210:
 5918              		.cfi_def_cfa_register 13
 5919              		@ sp needed
 5920 00b0 80BD     		pop	{r7, pc}
 5921              		.cfi_endproc
 5922              	.LFE103:
 5924              		.section	.text.SPI_2linesRxISR_8BIT,"ax",%progbits
 5925              		.align	1
ARM GAS  /tmp/ccFW5O3y.s 			page 160


 5926              		.syntax unified
 5927              		.thumb
 5928              		.thumb_func
 5930              	SPI_2linesRxISR_8BIT:
 5931              	.LFB104:
3188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Rx 8-bit handler for Transmit and Receive in Interrupt mode.
3191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesRxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 5932              		.loc 1 3196 1
 5933              		.cfi_startproc
 5934              		@ args = 0, pretend = 0, frame = 8
 5935              		@ frame_needed = 1, uses_anonymous_args = 0
 5936 0000 80B5     		push	{r7, lr}
 5937              	.LCFI211:
 5938              		.cfi_def_cfa_offset 8
 5939              		.cfi_offset 7, -8
 5940              		.cfi_offset 14, -4
 5941 0002 82B0     		sub	sp, sp, #8
 5942              	.LCFI212:
 5943              		.cfi_def_cfa_offset 16
 5944 0004 00AF     		add	r7, sp, #0
 5945              	.LCFI213:
 5946              		.cfi_def_cfa_register 7
 5947 0006 7860     		str	r0, [r7, #4]
3197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Receive data in 8bit mode */
3198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *hspi->pRxBuffPtr = *((__IO uint8_t *)&hspi->Instance->DR);
 5948              		.loc 1 3198 46
 5949 0008 7B68     		ldr	r3, [r7, #4]
 5950 000a 1B68     		ldr	r3, [r3]
 5951              		.loc 1 3198 41
 5952 000c 03F10C02 		add	r2, r3, #12
 5953              		.loc 1 3198 8
 5954 0010 7B68     		ldr	r3, [r7, #4]
 5955 0012 9B6B     		ldr	r3, [r3, #56]
 5956              		.loc 1 3198 23
 5957 0014 1278     		ldrb	r2, [r2]
 5958 0016 D2B2     		uxtb	r2, r2
 5959              		.loc 1 3198 21
 5960 0018 1A70     		strb	r2, [r3]
3199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr++;
 5961              		.loc 1 3199 7
 5962 001a 7B68     		ldr	r3, [r7, #4]
 5963 001c 9B6B     		ldr	r3, [r3, #56]
 5964              		.loc 1 3199 19
 5965 001e 5A1C     		adds	r2, r3, #1
 5966 0020 7B68     		ldr	r3, [r7, #4]
 5967 0022 9A63     		str	r2, [r3, #56]
3200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount--;
 5968              		.loc 1 3200 7
 5969 0024 7B68     		ldr	r3, [r7, #4]
 5970 0026 DB8F     		ldrh	r3, [r3, #62]	@ movhi
ARM GAS  /tmp/ccFW5O3y.s 			page 161


 5971 0028 9BB2     		uxth	r3, r3
 5972              		.loc 1 3200 20
 5973 002a 013B     		subs	r3, r3, #1
 5974 002c 9AB2     		uxth	r2, r3
 5975 002e 7B68     		ldr	r3, [r7, #4]
 5976 0030 DA87     		strh	r2, [r3, #62]	@ movhi
3201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check end of the reception */
3203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
 5977              		.loc 1 3203 11
 5978 0032 7B68     		ldr	r3, [r7, #4]
 5979 0034 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 5980 0036 9BB2     		uxth	r3, r3
 5981              		.loc 1 3203 6
 5982 0038 002B     		cmp	r3, #0
 5983 003a 0FD1     		bne	.L291
3204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->RxISR =  SPI_2linesRxISR_8BITCRC;
3209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
3210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable RXNE  and ERR interrupt */
3214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
 5984              		.loc 1 3214 5
 5985 003c 7B68     		ldr	r3, [r7, #4]
 5986 003e 1B68     		ldr	r3, [r3]
 5987 0040 5A68     		ldr	r2, [r3, #4]
 5988 0042 7B68     		ldr	r3, [r7, #4]
 5989 0044 1B68     		ldr	r3, [r3]
 5990 0046 22F06002 		bic	r2, r2, #96
 5991 004a 5A60     		str	r2, [r3, #4]
3215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->TxXferCount == 0U)
 5992              		.loc 1 3216 13
 5993 004c 7B68     		ldr	r3, [r7, #4]
 5994 004e DB8E     		ldrh	r3, [r3, #54]	@ movhi
 5995 0050 9BB2     		uxth	r3, r3
 5996              		.loc 1 3216 8
 5997 0052 002B     		cmp	r3, #0
 5998 0054 02D1     		bne	.L291
3217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
 5999              		.loc 1 3218 7
 6000 0056 7868     		ldr	r0, [r7, #4]
 6001 0058 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 6002              	.L291:
3219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 6003              		.loc 1 3221 1
 6004 005c 00BF     		nop
 6005 005e 0837     		adds	r7, r7, #8
 6006              	.LCFI214:
ARM GAS  /tmp/ccFW5O3y.s 			page 162


 6007              		.cfi_def_cfa_offset 8
 6008 0060 BD46     		mov	sp, r7
 6009              	.LCFI215:
 6010              		.cfi_def_cfa_register 13
 6011              		@ sp needed
 6012 0062 80BD     		pop	{r7, pc}
 6013              		.cfi_endproc
 6014              	.LFE104:
 6016              		.section	.text.SPI_2linesTxISR_8BIT,"ax",%progbits
 6017              		.align	1
 6018              		.syntax unified
 6019              		.thumb
 6020              		.thumb_func
 6022              	SPI_2linesTxISR_8BIT:
 6023              	.LFB105:
3222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Rx 8-bit handler for Transmit and Receive in Interrupt mode.
3226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesRxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi)
3231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
3232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint8_t  *ptmpreg8;
3233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint8_t  tmpreg8 = 0;
3234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Initialize the 8bit temporary pointer */
3236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   ptmpreg8 = (__IO uint8_t *)&hspi->Instance->DR;
3237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Read 8bit CRC to flush Data Register */
3238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmpreg8 = *ptmpreg8;
3239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* To avoid GCC warning */
3240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(tmpreg8);
3241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
3243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
3244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
3246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_CloseRxTx_ISR(hspi);
3248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Tx 8-bit handler for Transmit and Receive in Interrupt mode.
3254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesTxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 6024              		.loc 1 3259 1
 6025              		.cfi_startproc
 6026              		@ args = 0, pretend = 0, frame = 8
 6027              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccFW5O3y.s 			page 163


 6028 0000 80B5     		push	{r7, lr}
 6029              	.LCFI216:
 6030              		.cfi_def_cfa_offset 8
 6031              		.cfi_offset 7, -8
 6032              		.cfi_offset 14, -4
 6033 0002 82B0     		sub	sp, sp, #8
 6034              	.LCFI217:
 6035              		.cfi_def_cfa_offset 16
 6036 0004 00AF     		add	r7, sp, #0
 6037              	.LCFI218:
 6038              		.cfi_def_cfa_register 7
 6039 0006 7860     		str	r0, [r7, #4]
3260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *(__IO uint8_t *)&hspi->Instance->DR = *((const uint8_t *)hspi->pTxBuffPtr);
 6040              		.loc 1 3260 65
 6041 0008 7B68     		ldr	r3, [r7, #4]
 6042 000a 1A6B     		ldr	r2, [r3, #48]
 6043              		.loc 1 3260 25
 6044 000c 7B68     		ldr	r3, [r7, #4]
 6045 000e 1B68     		ldr	r3, [r3]
 6046              		.loc 1 3260 20
 6047 0010 0C33     		adds	r3, r3, #12
 6048              		.loc 1 3260 42
 6049 0012 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 6050              		.loc 1 3260 40
 6051 0014 1A70     		strb	r2, [r3]
3261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr++;
 6052              		.loc 1 3261 7
 6053 0016 7B68     		ldr	r3, [r7, #4]
 6054 0018 1B6B     		ldr	r3, [r3, #48]
 6055              		.loc 1 3261 19
 6056 001a 5A1C     		adds	r2, r3, #1
 6057 001c 7B68     		ldr	r3, [r7, #4]
 6058 001e 1A63     		str	r2, [r3, #48]
3262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount--;
 6059              		.loc 1 3262 7
 6060 0020 7B68     		ldr	r3, [r7, #4]
 6061 0022 DB8E     		ldrh	r3, [r3, #54]	@ movhi
 6062 0024 9BB2     		uxth	r3, r3
 6063              		.loc 1 3262 20
 6064 0026 013B     		subs	r3, r3, #1
 6065 0028 9AB2     		uxth	r2, r3
 6066 002a 7B68     		ldr	r3, [r7, #4]
 6067 002c DA86     		strh	r2, [r3, #54]	@ movhi
3263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the end of the transmission */
3265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
 6068              		.loc 1 3265 11
 6069 002e 7B68     		ldr	r3, [r7, #4]
 6070 0030 DB8E     		ldrh	r3, [r3, #54]	@ movhi
 6071 0032 9BB2     		uxth	r3, r3
 6072              		.loc 1 3265 6
 6073 0034 002B     		cmp	r3, #0
 6074 0036 0FD1     		bne	.L294
3266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
ARM GAS  /tmp/ccFW5O3y.s 			page 164


3270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Set CRC Next Bit to send CRC */
3271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Disable TXE interrupt */
3273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
3274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
3275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable TXE interrupt */
3279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
 6075              		.loc 1 3279 5
 6076 0038 7B68     		ldr	r3, [r7, #4]
 6077 003a 1B68     		ldr	r3, [r3]
 6078 003c 5A68     		ldr	r2, [r3, #4]
 6079 003e 7B68     		ldr	r3, [r7, #4]
 6080 0040 1B68     		ldr	r3, [r3]
 6081 0042 22F08002 		bic	r2, r2, #128
 6082 0046 5A60     		str	r2, [r3, #4]
3280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->RxXferCount == 0U)
 6083              		.loc 1 3281 13
 6084 0048 7B68     		ldr	r3, [r7, #4]
 6085 004a DB8F     		ldrh	r3, [r3, #62]	@ movhi
 6086 004c 9BB2     		uxth	r3, r3
 6087              		.loc 1 3281 8
 6088 004e 002B     		cmp	r3, #0
 6089 0050 02D1     		bne	.L294
3282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
 6090              		.loc 1 3283 7
 6091 0052 7868     		ldr	r0, [r7, #4]
 6092 0054 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 6093              	.L294:
3284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 6094              		.loc 1 3286 1
 6095 0058 00BF     		nop
 6096 005a 0837     		adds	r7, r7, #8
 6097              	.LCFI219:
 6098              		.cfi_def_cfa_offset 8
 6099 005c BD46     		mov	sp, r7
 6100              	.LCFI220:
 6101              		.cfi_def_cfa_register 13
 6102              		@ sp needed
 6103 005e 80BD     		pop	{r7, pc}
 6104              		.cfi_endproc
 6105              	.LFE105:
 6107              		.section	.text.SPI_2linesRxISR_16BIT,"ax",%progbits
 6108              		.align	1
 6109              		.syntax unified
 6110              		.thumb
 6111              		.thumb_func
 6113              	SPI_2linesRxISR_16BIT:
 6114              	.LFB106:
3287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
ARM GAS  /tmp/ccFW5O3y.s 			page 165


3289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Rx 16-bit handler for Transmit and Receive in Interrupt mode.
3290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesRxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 6115              		.loc 1 3295 1
 6116              		.cfi_startproc
 6117              		@ args = 0, pretend = 0, frame = 8
 6118              		@ frame_needed = 1, uses_anonymous_args = 0
 6119 0000 80B5     		push	{r7, lr}
 6120              	.LCFI221:
 6121              		.cfi_def_cfa_offset 8
 6122              		.cfi_offset 7, -8
 6123              		.cfi_offset 14, -4
 6124 0002 82B0     		sub	sp, sp, #8
 6125              	.LCFI222:
 6126              		.cfi_def_cfa_offset 16
 6127 0004 00AF     		add	r7, sp, #0
 6128              	.LCFI223:
 6129              		.cfi_def_cfa_register 7
 6130 0006 7860     		str	r0, [r7, #4]
3296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Receive data in 16 Bit mode */
3297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)(hspi->Instance->DR);
 6131              		.loc 1 3297 52
 6132 0008 7B68     		ldr	r3, [r7, #4]
 6133 000a 1B68     		ldr	r3, [r3]
 6134              		.loc 1 3297 62
 6135 000c DA68     		ldr	r2, [r3, #12]
 6136              		.loc 1 3297 21
 6137 000e 7B68     		ldr	r3, [r7, #4]
 6138 0010 9B6B     		ldr	r3, [r3, #56]
 6139              		.loc 1 3297 37
 6140 0012 92B2     		uxth	r2, r2
 6141              		.loc 1 3297 35
 6142 0014 1A80     		strh	r2, [r3]	@ movhi
3298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
 6143              		.loc 1 3298 7
 6144 0016 7B68     		ldr	r3, [r7, #4]
 6145 0018 9B6B     		ldr	r3, [r3, #56]
 6146              		.loc 1 3298 20
 6147 001a 9A1C     		adds	r2, r3, #2
 6148 001c 7B68     		ldr	r3, [r7, #4]
 6149 001e 9A63     		str	r2, [r3, #56]
3299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount--;
 6150              		.loc 1 3299 7
 6151 0020 7B68     		ldr	r3, [r7, #4]
 6152 0022 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 6153 0024 9BB2     		uxth	r3, r3
 6154              		.loc 1 3299 20
 6155 0026 013B     		subs	r3, r3, #1
 6156 0028 9AB2     		uxth	r2, r3
 6157 002a 7B68     		ldr	r3, [r7, #4]
 6158 002c DA87     		strh	r2, [r3, #62]	@ movhi
3300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
ARM GAS  /tmp/ccFW5O3y.s 			page 166


 6159              		.loc 1 3301 11
 6160 002e 7B68     		ldr	r3, [r7, #4]
 6161 0030 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 6162 0032 9BB2     		uxth	r3, r3
 6163              		.loc 1 3301 6
 6164 0034 002B     		cmp	r3, #0
 6165 0036 0FD1     		bne	.L297
3302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->RxISR =  SPI_2linesRxISR_16BITCRC;
3307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
3308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable RXNE interrupt */
3312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE);
 6166              		.loc 1 3312 5
 6167 0038 7B68     		ldr	r3, [r7, #4]
 6168 003a 1B68     		ldr	r3, [r3]
 6169 003c 5A68     		ldr	r2, [r3, #4]
 6170 003e 7B68     		ldr	r3, [r7, #4]
 6171 0040 1B68     		ldr	r3, [r3]
 6172 0042 22F04002 		bic	r2, r2, #64
 6173 0046 5A60     		str	r2, [r3, #4]
3313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->TxXferCount == 0U)
 6174              		.loc 1 3314 13
 6175 0048 7B68     		ldr	r3, [r7, #4]
 6176 004a DB8E     		ldrh	r3, [r3, #54]	@ movhi
 6177 004c 9BB2     		uxth	r3, r3
 6178              		.loc 1 3314 8
 6179 004e 002B     		cmp	r3, #0
 6180 0050 02D1     		bne	.L297
3315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
 6181              		.loc 1 3316 7
 6182 0052 7868     		ldr	r0, [r7, #4]
 6183 0054 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 6184              	.L297:
3317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 6185              		.loc 1 3319 1
 6186 0058 00BF     		nop
 6187 005a 0837     		adds	r7, r7, #8
 6188              	.LCFI224:
 6189              		.cfi_def_cfa_offset 8
 6190 005c BD46     		mov	sp, r7
 6191              	.LCFI225:
 6192              		.cfi_def_cfa_register 13
 6193              		@ sp needed
 6194 005e 80BD     		pop	{r7, pc}
 6195              		.cfi_endproc
 6196              	.LFE106:
 6198              		.section	.text.SPI_2linesTxISR_16BIT,"ax",%progbits
ARM GAS  /tmp/ccFW5O3y.s 			page 167


 6199              		.align	1
 6200              		.syntax unified
 6201              		.thumb
 6202              		.thumb_func
 6204              	SPI_2linesTxISR_16BIT:
 6205              	.LFB107:
3320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Manage the CRC 16-bit receive for Transmit and Receive in Interrupt mode.
3324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesRxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi)
3329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
3330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t tmpreg = 0U;
3331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Read 16bit CRC to flush Data Register */
3333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmpreg = READ_REG(hspi->Instance->DR);
3334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* To avoid GCC warning */
3335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(tmpreg);
3336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable RXNE interrupt */
3338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE);
3339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_CloseRxTx_ISR(hspi);
3341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Tx 16-bit handler for Transmit and Receive in Interrupt mode.
3346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_2linesTxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 6206              		.loc 1 3351 1
 6207              		.cfi_startproc
 6208              		@ args = 0, pretend = 0, frame = 8
 6209              		@ frame_needed = 1, uses_anonymous_args = 0
 6210 0000 80B5     		push	{r7, lr}
 6211              	.LCFI226:
 6212              		.cfi_def_cfa_offset 8
 6213              		.cfi_offset 7, -8
 6214              		.cfi_offset 14, -4
 6215 0002 82B0     		sub	sp, sp, #8
 6216              	.LCFI227:
 6217              		.cfi_def_cfa_offset 16
 6218 0004 00AF     		add	r7, sp, #0
 6219              	.LCFI228:
 6220              		.cfi_def_cfa_register 7
 6221 0006 7860     		str	r0, [r7, #4]
3352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
3353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 6222              		.loc 1 3353 48
ARM GAS  /tmp/ccFW5O3y.s 			page 168


 6223 0008 7B68     		ldr	r3, [r7, #4]
 6224 000a 1B6B     		ldr	r3, [r3, #48]
 6225              		.loc 1 3353 24
 6226 000c 1A88     		ldrh	r2, [r3]
 6227              		.loc 1 3353 7
 6228 000e 7B68     		ldr	r3, [r7, #4]
 6229 0010 1B68     		ldr	r3, [r3]
 6230              		.loc 1 3353 22
 6231 0012 DA60     		str	r2, [r3, #12]
3354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
 6232              		.loc 1 3354 7
 6233 0014 7B68     		ldr	r3, [r7, #4]
 6234 0016 1B6B     		ldr	r3, [r3, #48]
 6235              		.loc 1 3354 20
 6236 0018 9A1C     		adds	r2, r3, #2
 6237 001a 7B68     		ldr	r3, [r7, #4]
 6238 001c 1A63     		str	r2, [r3, #48]
3355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount--;
 6239              		.loc 1 3355 7
 6240 001e 7B68     		ldr	r3, [r7, #4]
 6241 0020 DB8E     		ldrh	r3, [r3, #54]	@ movhi
 6242 0022 9BB2     		uxth	r3, r3
 6243              		.loc 1 3355 20
 6244 0024 013B     		subs	r3, r3, #1
 6245 0026 9AB2     		uxth	r2, r3
 6246 0028 7B68     		ldr	r3, [r7, #4]
 6247 002a DA86     		strh	r2, [r3, #54]	@ movhi
3356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable CRC Transmission */
3358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
 6248              		.loc 1 3358 11
 6249 002c 7B68     		ldr	r3, [r7, #4]
 6250 002e DB8E     		ldrh	r3, [r3, #54]	@ movhi
 6251 0030 9BB2     		uxth	r3, r3
 6252              		.loc 1 3358 6
 6253 0032 002B     		cmp	r3, #0
 6254 0034 0FD1     		bne	.L300
3359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Set CRC Next Bit to send CRC */
3364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Disable TXE interrupt */
3366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
3367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
3368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable TXE interrupt */
3372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE_IT(hspi, SPI_IT_TXE);
 6255              		.loc 1 3372 5
 6256 0036 7B68     		ldr	r3, [r7, #4]
 6257 0038 1B68     		ldr	r3, [r3]
 6258 003a 5A68     		ldr	r2, [r3, #4]
 6259 003c 7B68     		ldr	r3, [r7, #4]
 6260 003e 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccFW5O3y.s 			page 169


 6261 0040 22F08002 		bic	r2, r2, #128
 6262 0044 5A60     		str	r2, [r3, #4]
3373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->RxXferCount == 0U)
 6263              		.loc 1 3374 13
 6264 0046 7B68     		ldr	r3, [r7, #4]
 6265 0048 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 6266 004a 9BB2     		uxth	r3, r3
 6267              		.loc 1 3374 8
 6268 004c 002B     		cmp	r3, #0
 6269 004e 02D1     		bne	.L300
3375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SPI_CloseRxTx_ISR(hspi);
 6270              		.loc 1 3376 7
 6271 0050 7868     		ldr	r0, [r7, #4]
 6272 0052 FFF7FEFF 		bl	SPI_CloseRxTx_ISR
 6273              	.L300:
3377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 6274              		.loc 1 3379 1
 6275 0056 00BF     		nop
 6276 0058 0837     		adds	r7, r7, #8
 6277              	.LCFI229:
 6278              		.cfi_def_cfa_offset 8
 6279 005a BD46     		mov	sp, r7
 6280              	.LCFI230:
 6281              		.cfi_def_cfa_register 13
 6282              		@ sp needed
 6283 005c 80BD     		pop	{r7, pc}
 6284              		.cfi_endproc
 6285              	.LFE107:
 6287              		.section	.text.SPI_RxISR_8BIT,"ax",%progbits
 6288              		.align	1
 6289              		.syntax unified
 6290              		.thumb
 6291              		.thumb_func
 6293              	SPI_RxISR_8BIT:
 6294              	.LFB108:
3380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Manage the CRC 8-bit receive in Interrupt context.
3384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_RxISR_8BITCRC(struct __SPI_HandleTypeDef *hspi)
3389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
3390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint8_t  *ptmpreg8;
3391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint8_t  tmpreg8 = 0;
3392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Initialize the 8bit temporary pointer */
3394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   ptmpreg8 = (__IO uint8_t *)&hspi->Instance->DR;
3395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Read 8bit CRC to flush Data Register */
3396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmpreg8 = *ptmpreg8;
3397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* To avoid GCC warning */
ARM GAS  /tmp/ccFW5O3y.s 			page 170


3398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(tmpreg8);
3399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_CloseRx_ISR(hspi);
3401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Manage the receive 8-bit in Interrupt context.
3406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_RxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 6295              		.loc 1 3411 1
 6296              		.cfi_startproc
 6297              		@ args = 0, pretend = 0, frame = 8
 6298              		@ frame_needed = 1, uses_anonymous_args = 0
 6299 0000 80B5     		push	{r7, lr}
 6300              	.LCFI231:
 6301              		.cfi_def_cfa_offset 8
 6302              		.cfi_offset 7, -8
 6303              		.cfi_offset 14, -4
 6304 0002 82B0     		sub	sp, sp, #8
 6305              	.LCFI232:
 6306              		.cfi_def_cfa_offset 16
 6307 0004 00AF     		add	r7, sp, #0
 6308              	.LCFI233:
 6309              		.cfi_def_cfa_register 7
 6310 0006 7860     		str	r0, [r7, #4]
3412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *hspi->pRxBuffPtr = (*(__IO uint8_t *)&hspi->Instance->DR);
 6311              		.loc 1 3412 46
 6312 0008 7B68     		ldr	r3, [r7, #4]
 6313 000a 1B68     		ldr	r3, [r3]
 6314              		.loc 1 3412 41
 6315 000c 03F10C02 		add	r2, r3, #12
 6316              		.loc 1 3412 8
 6317 0010 7B68     		ldr	r3, [r7, #4]
 6318 0012 9B6B     		ldr	r3, [r3, #56]
 6319              		.loc 1 3412 24
 6320 0014 1278     		ldrb	r2, [r2]
 6321 0016 D2B2     		uxtb	r2, r2
 6322              		.loc 1 3412 21
 6323 0018 1A70     		strb	r2, [r3]
3413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr++;
 6324              		.loc 1 3413 7
 6325 001a 7B68     		ldr	r3, [r7, #4]
 6326 001c 9B6B     		ldr	r3, [r3, #56]
 6327              		.loc 1 3413 19
 6328 001e 5A1C     		adds	r2, r3, #1
 6329 0020 7B68     		ldr	r3, [r7, #4]
 6330 0022 9A63     		str	r2, [r3, #56]
3414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount--;
 6331              		.loc 1 3414 7
 6332 0024 7B68     		ldr	r3, [r7, #4]
 6333 0026 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 6334 0028 9BB2     		uxth	r3, r3
ARM GAS  /tmp/ccFW5O3y.s 			page 171


 6335              		.loc 1 3414 20
 6336 002a 013B     		subs	r3, r3, #1
 6337 002c 9AB2     		uxth	r2, r3
 6338 002e 7B68     		ldr	r3, [r7, #4]
 6339 0030 DA87     		strh	r2, [r3, #62]	@ movhi
3415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable CRC Transmission */
3418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->RxXferCount == 1U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
3419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if CRCNEXT is well reset by hardware */
3423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (READ_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT))
3424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Workaround to force CRCNEXT bit to zero in case of CRCNEXT is not reset automatically by har
3426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
 6340              		.loc 1 3431 11
 6341 0032 7B68     		ldr	r3, [r7, #4]
 6342 0034 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 6343 0036 9BB2     		uxth	r3, r3
 6344              		.loc 1 3431 6
 6345 0038 002B     		cmp	r3, #0
 6346 003a 02D1     		bne	.L303
3432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->RxISR =  SPI_RxISR_8BITCRC;
3437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
3438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_CloseRx_ISR(hspi);
 6347              		.loc 1 3440 5
 6348 003c 7868     		ldr	r0, [r7, #4]
 6349 003e FFF7FEFF 		bl	SPI_CloseRx_ISR
 6350              	.L303:
3441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 6351              		.loc 1 3442 1
 6352 0042 00BF     		nop
 6353 0044 0837     		adds	r7, r7, #8
 6354              	.LCFI234:
 6355              		.cfi_def_cfa_offset 8
 6356 0046 BD46     		mov	sp, r7
 6357              	.LCFI235:
 6358              		.cfi_def_cfa_register 13
 6359              		@ sp needed
 6360 0048 80BD     		pop	{r7, pc}
 6361              		.cfi_endproc
 6362              	.LFE108:
 6364              		.section	.text.SPI_RxISR_16BIT,"ax",%progbits
ARM GAS  /tmp/ccFW5O3y.s 			page 172


 6365              		.align	1
 6366              		.syntax unified
 6367              		.thumb
 6368              		.thumb_func
 6370              	SPI_RxISR_16BIT:
 6371              	.LFB109:
3443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Manage the CRC 16-bit receive in Interrupt context.
3447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_RxISR_16BITCRC(struct __SPI_HandleTypeDef *hspi)
3452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
3453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t tmpreg = 0U;
3454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Read 16bit CRC to flush Data Register */
3456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmpreg = READ_REG(hspi->Instance->DR);
3457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* To avoid GCC warning */
3458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(tmpreg);
3459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
3461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
3462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   SPI_CloseRx_ISR(hspi);
3464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
3465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Manage the 16-bit receive in Interrupt context.
3469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_RxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 6372              		.loc 1 3474 1
 6373              		.cfi_startproc
 6374              		@ args = 0, pretend = 0, frame = 8
 6375              		@ frame_needed = 1, uses_anonymous_args = 0
 6376 0000 80B5     		push	{r7, lr}
 6377              	.LCFI236:
 6378              		.cfi_def_cfa_offset 8
 6379              		.cfi_offset 7, -8
 6380              		.cfi_offset 14, -4
 6381 0002 82B0     		sub	sp, sp, #8
 6382              	.LCFI237:
 6383              		.cfi_def_cfa_offset 16
 6384 0004 00AF     		add	r7, sp, #0
 6385              	.LCFI238:
 6386              		.cfi_def_cfa_register 7
 6387 0006 7860     		str	r0, [r7, #4]
3475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)(hspi->Instance->DR);
 6388              		.loc 1 3475 52
 6389 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccFW5O3y.s 			page 173


 6390 000a 1B68     		ldr	r3, [r3]
 6391              		.loc 1 3475 62
 6392 000c DA68     		ldr	r2, [r3, #12]
 6393              		.loc 1 3475 21
 6394 000e 7B68     		ldr	r3, [r7, #4]
 6395 0010 9B6B     		ldr	r3, [r3, #56]
 6396              		.loc 1 3475 37
 6397 0012 92B2     		uxth	r2, r2
 6398              		.loc 1 3475 35
 6399 0014 1A80     		strh	r2, [r3]	@ movhi
3476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pRxBuffPtr += sizeof(uint16_t);
 6400              		.loc 1 3476 7
 6401 0016 7B68     		ldr	r3, [r7, #4]
 6402 0018 9B6B     		ldr	r3, [r3, #56]
 6403              		.loc 1 3476 20
 6404 001a 9A1C     		adds	r2, r3, #2
 6405 001c 7B68     		ldr	r3, [r7, #4]
 6406 001e 9A63     		str	r2, [r3, #56]
3477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->RxXferCount--;
 6407              		.loc 1 3477 7
 6408 0020 7B68     		ldr	r3, [r7, #4]
 6409 0022 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 6410 0024 9BB2     		uxth	r3, r3
 6411              		.loc 1 3477 20
 6412 0026 013B     		subs	r3, r3, #1
 6413 0028 9AB2     		uxth	r2, r3
 6414 002a 7B68     		ldr	r3, [r7, #4]
 6415 002c DA87     		strh	r2, [r3, #62]	@ movhi
3478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Enable CRC Transmission */
3481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->RxXferCount == 1U) && (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE))
3482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if CRCNEXT is well reset by hardware */
3486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (READ_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT))
3487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Workaround to force CRCNEXT bit to zero in case of CRCNEXT is not reset automatically by har
3489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     CLEAR_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->RxXferCount == 0U)
 6416              		.loc 1 3494 11
 6417 002e 7B68     		ldr	r3, [r7, #4]
 6418 0030 DB8F     		ldrh	r3, [r3, #62]	@ movhi
 6419 0032 9BB2     		uxth	r3, r3
 6420              		.loc 1 3494 6
 6421 0034 002B     		cmp	r3, #0
 6422 0036 02D1     		bne	.L306
3495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->RxISR = SPI_RxISR_16BITCRC;
ARM GAS  /tmp/ccFW5O3y.s 			page 174


3500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return;
3501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_CloseRx_ISR(hspi);
 6423              		.loc 1 3503 5
 6424 0038 7868     		ldr	r0, [r7, #4]
 6425 003a FFF7FEFF 		bl	SPI_CloseRx_ISR
 6426              	.L306:
3504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 6427              		.loc 1 3505 1
 6428 003e 00BF     		nop
 6429 0040 0837     		adds	r7, r7, #8
 6430              	.LCFI239:
 6431              		.cfi_def_cfa_offset 8
 6432 0042 BD46     		mov	sp, r7
 6433              	.LCFI240:
 6434              		.cfi_def_cfa_register 13
 6435              		@ sp needed
 6436 0044 80BD     		pop	{r7, pc}
 6437              		.cfi_endproc
 6438              	.LFE109:
 6440              		.section	.text.SPI_TxISR_8BIT,"ax",%progbits
 6441              		.align	1
 6442              		.syntax unified
 6443              		.thumb
 6444              		.thumb_func
 6446              	SPI_TxISR_8BIT:
 6447              	.LFB110:
3506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Handle the data 8-bit transmit in Interrupt mode.
3509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_TxISR_8BIT(struct __SPI_HandleTypeDef *hspi)
3514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 6448              		.loc 1 3514 1
 6449              		.cfi_startproc
 6450              		@ args = 0, pretend = 0, frame = 8
 6451              		@ frame_needed = 1, uses_anonymous_args = 0
 6452 0000 80B5     		push	{r7, lr}
 6453              	.LCFI241:
 6454              		.cfi_def_cfa_offset 8
 6455              		.cfi_offset 7, -8
 6456              		.cfi_offset 14, -4
 6457 0002 82B0     		sub	sp, sp, #8
 6458              	.LCFI242:
 6459              		.cfi_def_cfa_offset 16
 6460 0004 00AF     		add	r7, sp, #0
 6461              	.LCFI243:
 6462              		.cfi_def_cfa_register 7
 6463 0006 7860     		str	r0, [r7, #4]
3515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *(__IO uint8_t *)&hspi->Instance->DR = *((const uint8_t *)hspi->pTxBuffPtr);
 6464              		.loc 1 3515 65
 6465 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccFW5O3y.s 			page 175


 6466 000a 1A6B     		ldr	r2, [r3, #48]
 6467              		.loc 1 3515 25
 6468 000c 7B68     		ldr	r3, [r7, #4]
 6469 000e 1B68     		ldr	r3, [r3]
 6470              		.loc 1 3515 20
 6471 0010 0C33     		adds	r3, r3, #12
 6472              		.loc 1 3515 42
 6473 0012 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 6474              		.loc 1 3515 40
 6475 0014 1A70     		strb	r2, [r3]
3516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr++;
 6476              		.loc 1 3516 7
 6477 0016 7B68     		ldr	r3, [r7, #4]
 6478 0018 1B6B     		ldr	r3, [r3, #48]
 6479              		.loc 1 3516 19
 6480 001a 5A1C     		adds	r2, r3, #1
 6481 001c 7B68     		ldr	r3, [r7, #4]
 6482 001e 1A63     		str	r2, [r3, #48]
3517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount--;
 6483              		.loc 1 3517 7
 6484 0020 7B68     		ldr	r3, [r7, #4]
 6485 0022 DB8E     		ldrh	r3, [r3, #54]	@ movhi
 6486 0024 9BB2     		uxth	r3, r3
 6487              		.loc 1 3517 20
 6488 0026 013B     		subs	r3, r3, #1
 6489 0028 9AB2     		uxth	r2, r3
 6490 002a 7B68     		ldr	r3, [r7, #4]
 6491 002c DA86     		strh	r2, [r3, #54]	@ movhi
3518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
 6492              		.loc 1 3519 11
 6493 002e 7B68     		ldr	r3, [r7, #4]
 6494 0030 DB8E     		ldrh	r3, [r3, #54]	@ movhi
 6495 0032 9BB2     		uxth	r3, r3
 6496              		.loc 1 3519 6
 6497 0034 002B     		cmp	r3, #0
 6498 0036 02D1     		bne	.L309
3520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Enable CRC Transmission */
3525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_CloseTx_ISR(hspi);
 6499              		.loc 1 3528 5
 6500 0038 7868     		ldr	r0, [r7, #4]
 6501 003a FFF7FEFF 		bl	SPI_CloseTx_ISR
 6502              	.L309:
3529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 6503              		.loc 1 3530 1
 6504 003e 00BF     		nop
 6505 0040 0837     		adds	r7, r7, #8
 6506              	.LCFI244:
 6507              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccFW5O3y.s 			page 176


 6508 0042 BD46     		mov	sp, r7
 6509              	.LCFI245:
 6510              		.cfi_def_cfa_register 13
 6511              		@ sp needed
 6512 0044 80BD     		pop	{r7, pc}
 6513              		.cfi_endproc
 6514              	.LFE110:
 6516              		.section	.text.SPI_TxISR_16BIT,"ax",%progbits
 6517              		.align	1
 6518              		.syntax unified
 6519              		.thumb
 6520              		.thumb_func
 6522              	SPI_TxISR_16BIT:
 6523              	.LFB111:
3531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Handle the data 16-bit transmit in Interrupt mode.
3534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_TxISR_16BIT(struct __SPI_HandleTypeDef *hspi)
3539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 6524              		.loc 1 3539 1
 6525              		.cfi_startproc
 6526              		@ args = 0, pretend = 0, frame = 8
 6527              		@ frame_needed = 1, uses_anonymous_args = 0
 6528 0000 80B5     		push	{r7, lr}
 6529              	.LCFI246:
 6530              		.cfi_def_cfa_offset 8
 6531              		.cfi_offset 7, -8
 6532              		.cfi_offset 14, -4
 6533 0002 82B0     		sub	sp, sp, #8
 6534              	.LCFI247:
 6535              		.cfi_def_cfa_offset 16
 6536 0004 00AF     		add	r7, sp, #0
 6537              	.LCFI248:
 6538              		.cfi_def_cfa_register 7
 6539 0006 7860     		str	r0, [r7, #4]
3540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Transmit data in 16 Bit mode */
3541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 6540              		.loc 1 3541 48
 6541 0008 7B68     		ldr	r3, [r7, #4]
 6542 000a 1B6B     		ldr	r3, [r3, #48]
 6543              		.loc 1 3541 24
 6544 000c 1A88     		ldrh	r2, [r3]
 6545              		.loc 1 3541 7
 6546 000e 7B68     		ldr	r3, [r7, #4]
 6547 0010 1B68     		ldr	r3, [r3]
 6548              		.loc 1 3541 22
 6549 0012 DA60     		str	r2, [r3, #12]
3542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->pTxBuffPtr += sizeof(uint16_t);
 6550              		.loc 1 3542 7
 6551 0014 7B68     		ldr	r3, [r7, #4]
 6552 0016 1B6B     		ldr	r3, [r3, #48]
 6553              		.loc 1 3542 20
 6554 0018 9A1C     		adds	r2, r3, #2
ARM GAS  /tmp/ccFW5O3y.s 			page 177


 6555 001a 7B68     		ldr	r3, [r7, #4]
 6556 001c 1A63     		str	r2, [r3, #48]
3543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->TxXferCount--;
 6557              		.loc 1 3543 7
 6558 001e 7B68     		ldr	r3, [r7, #4]
 6559 0020 DB8E     		ldrh	r3, [r3, #54]	@ movhi
 6560 0022 9BB2     		uxth	r3, r3
 6561              		.loc 1 3543 20
 6562 0024 013B     		subs	r3, r3, #1
 6563 0026 9AB2     		uxth	r2, r3
 6564 0028 7B68     		ldr	r3, [r7, #4]
 6565 002a DA86     		strh	r2, [r3, #54]	@ movhi
3544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->TxXferCount == 0U)
 6566              		.loc 1 3545 11
 6567 002c 7B68     		ldr	r3, [r7, #4]
 6568 002e DB8E     		ldrh	r3, [r3, #54]	@ movhi
 6569 0030 9BB2     		uxth	r3, r3
 6570              		.loc 1 3545 6
 6571 0032 002B     		cmp	r3, #0
 6572 0034 02D1     		bne	.L312
3546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
3549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Enable CRC Transmission */
3551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
3552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SPI_CloseTx_ISR(hspi);
 6573              		.loc 1 3554 5
 6574 0036 7868     		ldr	r0, [r7, #4]
 6575 0038 FFF7FEFF 		bl	SPI_CloseTx_ISR
 6576              	.L312:
3555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 6577              		.loc 1 3556 1
 6578 003c 00BF     		nop
 6579 003e 0837     		adds	r7, r7, #8
 6580              	.LCFI249:
 6581              		.cfi_def_cfa_offset 8
 6582 0040 BD46     		mov	sp, r7
 6583              	.LCFI250:
 6584              		.cfi_def_cfa_register 13
 6585              		@ sp needed
 6586 0042 80BD     		pop	{r7, pc}
 6587              		.cfi_endproc
 6588              	.LFE111:
 6590              		.section	.text.SPI_WaitFlagStateUntilTimeout,"ax",%progbits
 6591              		.align	1
 6592              		.syntax unified
 6593              		.thumb
 6594              		.thumb_func
 6596              	SPI_WaitFlagStateUntilTimeout:
 6597              	.LFB112:
3557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
ARM GAS  /tmp/ccFW5O3y.s 			page 178


3559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Handle SPI Communication Timeout.
3560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *              the configuration information for SPI module.
3562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Flag SPI flag to check
3563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  State flag state to check
3564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Timeout Timeout duration
3565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Tickstart tick start value
3566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
3567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, Flag
3569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                                        uint32_t Timeout, uint32_t Tickstart)
3570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 6598              		.loc 1 3570 1
 6599              		.cfi_startproc
 6600              		@ args = 4, pretend = 0, frame = 32
 6601              		@ frame_needed = 1, uses_anonymous_args = 0
 6602 0000 80B5     		push	{r7, lr}
 6603              	.LCFI251:
 6604              		.cfi_def_cfa_offset 8
 6605              		.cfi_offset 7, -8
 6606              		.cfi_offset 14, -4
 6607 0002 88B0     		sub	sp, sp, #32
 6608              	.LCFI252:
 6609              		.cfi_def_cfa_offset 40
 6610 0004 00AF     		add	r7, sp, #0
 6611              	.LCFI253:
 6612              		.cfi_def_cfa_register 7
 6613 0006 F860     		str	r0, [r7, #12]
 6614 0008 B960     		str	r1, [r7, #8]
 6615 000a 3B60     		str	r3, [r7]
 6616 000c 1346     		mov	r3, r2
 6617 000e FB71     		strb	r3, [r7, #7]
3571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t count;
3572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tmp_timeout;
3573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tmp_tickstart;
3574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Adjust Timeout value  in case of end of transfer */
3576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 6618              		.loc 1 3576 30
 6619 0010 FFF7FEFF 		bl	HAL_GetTick
 6620 0014 0246     		mov	r2, r0
 6621              		.loc 1 3576 44 discriminator 1
 6622 0016 BB6A     		ldr	r3, [r7, #40]
 6623 0018 9B1A     		subs	r3, r3, r2
 6624              		.loc 1 3576 17 discriminator 1
 6625 001a 3A68     		ldr	r2, [r7]
 6626 001c 1344     		add	r3, r3, r2
 6627 001e FB61     		str	r3, [r7, #28]
3577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmp_tickstart = HAL_GetTick();
 6628              		.loc 1 3577 19
 6629 0020 FFF7FEFF 		bl	HAL_GetTick
 6630 0024 B861     		str	r0, [r7, #24]
3578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
3580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 6631              		.loc 1 3580 43
 6632 0026 394B     		ldr	r3, .L324
ARM GAS  /tmp/ccFW5O3y.s 			page 179


 6633 0028 1B68     		ldr	r3, [r3]
 6634 002a 5B01     		lsls	r3, r3, #5
 6635              		.loc 1 3580 50
 6636 002c 1B0D     		lsrs	r3, r3, #20
 6637              		.loc 1 3580 23
 6638 002e FA69     		ldr	r2, [r7, #28]
 6639 0030 02FB03F3 		mul	r3, r2, r3
 6640              		.loc 1 3580 9
 6641 0034 7B61     		str	r3, [r7, #20]
3581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 6642              		.loc 1 3582 9
 6643 0036 54E0     		b	.L315
 6644              	.L323:
3583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (Timeout != HAL_MAX_DELAY)
 6645              		.loc 1 3584 8
 6646 0038 3B68     		ldr	r3, [r7]
 6647 003a B3F1FF3F 		cmp	r3, #-1
 6648 003e 50D0     		beq	.L315
3585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 6649              		.loc 1 3586 13
 6650 0040 FFF7FEFF 		bl	HAL_GetTick
 6651 0044 0246     		mov	r2, r0
 6652              		.loc 1 3586 27 discriminator 1
 6653 0046 BB69     		ldr	r3, [r7, #24]
 6654 0048 D31A     		subs	r3, r2, r3
 6655              		.loc 1 3586 10 discriminator 1
 6656 004a FA69     		ldr	r2, [r7, #28]
 6657 004c 9A42     		cmp	r2, r3
 6658 004e 02D9     		bls	.L316
 6659              		.loc 1 3586 60 discriminator 1
 6660 0050 FB69     		ldr	r3, [r7, #28]
 6661 0052 002B     		cmp	r3, #0
 6662 0054 3DD1     		bne	.L317
 6663              	.L316:
3587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
3588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Disable the SPI and reset the CRC: the CRC value should be cleared
3589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****            on both master and slave sides in order to resynchronize the master
3590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****            and slave for their respective CRC calculation */
3591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
3593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 6664              		.loc 1 3593 9
 6665 0056 FB68     		ldr	r3, [r7, #12]
 6666 0058 1B68     		ldr	r3, [r3]
 6667 005a 5A68     		ldr	r2, [r3, #4]
 6668 005c FB68     		ldr	r3, [r7, #12]
 6669 005e 1B68     		ldr	r3, [r3]
 6670 0060 22F0E002 		bic	r2, r2, #224
 6671 0064 5A60     		str	r2, [r3, #4]
3594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 6672              		.loc 1 3595 24
 6673 0066 FB68     		ldr	r3, [r7, #12]
 6674 0068 5B68     		ldr	r3, [r3, #4]
ARM GAS  /tmp/ccFW5O3y.s 			page 180


 6675              		.loc 1 3595 12
 6676 006a B3F5827F 		cmp	r3, #260
 6677 006e 11D1     		bne	.L318
 6678              		.loc 1 3595 65 discriminator 1
 6679 0070 FB68     		ldr	r3, [r7, #12]
 6680 0072 9B68     		ldr	r3, [r3, #8]
 6681              		.loc 1 3595 50 discriminator 1
 6682 0074 B3F5004F 		cmp	r3, #32768
 6683 0078 04D0     		beq	.L319
3596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                                      || (hspi->Init.Direction == SPI_DIRECTION_2LIN
 6684              		.loc 1 3596 68
 6685 007a FB68     		ldr	r3, [r7, #12]
 6686 007c 9B68     		ldr	r3, [r3, #8]
 6687              		.loc 1 3596 54
 6688 007e B3F5806F 		cmp	r3, #1024
 6689 0082 07D1     		bne	.L318
 6690              	.L319:
3597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
3598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           /* Disable SPI peripheral */
3599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           __HAL_SPI_DISABLE(hspi);
 6691              		.loc 1 3599 11
 6692 0084 FB68     		ldr	r3, [r7, #12]
 6693 0086 1B68     		ldr	r3, [r3]
 6694 0088 1A68     		ldr	r2, [r3]
 6695 008a FB68     		ldr	r3, [r7, #12]
 6696 008c 1B68     		ldr	r3, [r3]
 6697 008e 22F04002 		bic	r2, r2, #64
 6698 0092 1A60     		str	r2, [r3]
 6699              	.L318:
3600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
3601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Reset CRC Calculation */
3603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 6700              		.loc 1 3603 23
 6701 0094 FB68     		ldr	r3, [r7, #12]
 6702 0096 9B6A     		ldr	r3, [r3, #40]
 6703              		.loc 1 3603 12
 6704 0098 B3F5005F 		cmp	r3, #8192
 6705 009c 0FD1     		bne	.L320
3604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         {
3605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****           SPI_RESET_CRC(hspi);
 6706              		.loc 1 3605 11
 6707 009e FB68     		ldr	r3, [r7, #12]
 6708 00a0 1B68     		ldr	r3, [r3]
 6709 00a2 1A68     		ldr	r2, [r3]
 6710 00a4 FB68     		ldr	r3, [r7, #12]
 6711 00a6 1B68     		ldr	r3, [r3]
 6712 00a8 22F40052 		bic	r2, r2, #8192
 6713 00ac 1A60     		str	r2, [r3]
 6714 00ae FB68     		ldr	r3, [r7, #12]
 6715 00b0 1B68     		ldr	r3, [r3]
 6716 00b2 1A68     		ldr	r2, [r3]
 6717 00b4 FB68     		ldr	r3, [r7, #12]
 6718 00b6 1B68     		ldr	r3, [r3]
 6719 00b8 42F40052 		orr	r2, r2, #8192
 6720 00bc 1A60     		str	r2, [r3]
 6721              	.L320:
ARM GAS  /tmp/ccFW5O3y.s 			page 181


3606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         }
3607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
 6722              		.loc 1 3608 21
 6723 00be FB68     		ldr	r3, [r7, #12]
 6724 00c0 0122     		movs	r2, #1
 6725 00c2 83F85120 		strb	r2, [r3, #81]
3609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Process Unlocked */
3611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         __HAL_UNLOCK(hspi);
 6726              		.loc 1 3611 9
 6727 00c6 FB68     		ldr	r3, [r7, #12]
 6728 00c8 0022     		movs	r2, #0
 6729 00ca 83F85020 		strb	r2, [r3, #80]
3612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         return HAL_TIMEOUT;
 6730              		.loc 1 3613 16
 6731 00ce 0323     		movs	r3, #3
 6732 00d0 17E0     		b	.L321
 6733              	.L317:
3614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
3615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* If Systick is disabled or not incremented, deactivate timeout to go in disable loop proced
3616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (count == 0U)
 6734              		.loc 1 3616 17
 6735 00d2 7B69     		ldr	r3, [r7, #20]
 6736              		.loc 1 3616 10
 6737 00d4 002B     		cmp	r3, #0
 6738 00d6 01D1     		bne	.L322
3617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
3618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         tmp_timeout = 0U;
 6739              		.loc 1 3618 21
 6740 00d8 0023     		movs	r3, #0
 6741 00da FB61     		str	r3, [r7, #28]
 6742              	.L322:
3619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
3620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       count--;
 6743              		.loc 1 3620 12
 6744 00dc 7B69     		ldr	r3, [r7, #20]
 6745 00de 013B     		subs	r3, r3, #1
 6746 00e0 7B61     		str	r3, [r7, #20]
 6747              	.L315:
3582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 6748              		.loc 1 3582 11
 6749 00e2 FB68     		ldr	r3, [r7, #12]
 6750 00e4 1B68     		ldr	r3, [r3]
 6751 00e6 9A68     		ldr	r2, [r3, #8]
 6752 00e8 BB68     		ldr	r3, [r7, #8]
 6753 00ea 1340     		ands	r3, r3, r2
3582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 6754              		.loc 1 3582 48
 6755 00ec BA68     		ldr	r2, [r7, #8]
 6756 00ee 9A42     		cmp	r2, r3
 6757 00f0 0CBF     		ite	eq
 6758 00f2 0123     		moveq	r3, #1
 6759 00f4 0023     		movne	r3, #0
 6760 00f6 DBB2     		uxtb	r3, r3
 6761 00f8 1A46     		mov	r2, r3
ARM GAS  /tmp/ccFW5O3y.s 			page 182


3582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
 6762              		.loc 1 3582 57
 6763 00fa FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6764 00fc 9A42     		cmp	r2, r3
 6765 00fe 9BD1     		bne	.L323
3621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return HAL_OK;
 6766              		.loc 1 3624 10
 6767 0100 0023     		movs	r3, #0
 6768              	.L321:
3625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 6769              		.loc 1 3625 1
 6770 0102 1846     		mov	r0, r3
 6771 0104 2037     		adds	r7, r7, #32
 6772              	.LCFI254:
 6773              		.cfi_def_cfa_offset 8
 6774 0106 BD46     		mov	sp, r7
 6775              	.LCFI255:
 6776              		.cfi_def_cfa_register 13
 6777              		@ sp needed
 6778 0108 80BD     		pop	{r7, pc}
 6779              	.L325:
 6780 010a 00BF     		.align	2
 6781              	.L324:
 6782 010c 00000000 		.word	SystemCoreClock
 6783              		.cfi_endproc
 6784              	.LFE112:
 6786              		.section	.text.SPI_EndRxTransaction,"ax",%progbits
 6787              		.align	1
 6788              		.syntax unified
 6789              		.thumb
 6790              		.thumb_func
 6792              	SPI_EndRxTransaction:
 6793              	.LFB113:
3626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Handle the check of the RX transaction complete.
3629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Timeout Timeout duration
3632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Tickstart tick start value
3633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
3634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t 
3636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 6794              		.loc 1 3636 1
 6795              		.cfi_startproc
 6796              		@ args = 0, pretend = 0, frame = 16
 6797              		@ frame_needed = 1, uses_anonymous_args = 0
 6798 0000 80B5     		push	{r7, lr}
 6799              	.LCFI256:
 6800              		.cfi_def_cfa_offset 8
 6801              		.cfi_offset 7, -8
 6802              		.cfi_offset 14, -4
 6803 0002 86B0     		sub	sp, sp, #24
ARM GAS  /tmp/ccFW5O3y.s 			page 183


 6804              	.LCFI257:
 6805              		.cfi_def_cfa_offset 32
 6806 0004 02AF     		add	r7, sp, #8
 6807              	.LCFI258:
 6808              		.cfi_def_cfa 7, 24
 6809 0006 F860     		str	r0, [r7, #12]
 6810 0008 B960     		str	r1, [r7, #8]
 6811 000a 7A60     		str	r2, [r7, #4]
3637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 6812              		.loc 1 3637 18
 6813 000c FB68     		ldr	r3, [r7, #12]
 6814 000e 5B68     		ldr	r3, [r3, #4]
 6815              		.loc 1 3637 6
 6816 0010 B3F5827F 		cmp	r3, #260
 6817 0014 11D1     		bne	.L327
 6818              		.loc 1 3637 59 discriminator 1
 6819 0016 FB68     		ldr	r3, [r7, #12]
 6820 0018 9B68     		ldr	r3, [r3, #8]
 6821              		.loc 1 3637 44 discriminator 1
 6822 001a B3F5004F 		cmp	r3, #32768
 6823 001e 04D0     		beq	.L328
3638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****                                                || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXO
 6824              		.loc 1 3638 62
 6825 0020 FB68     		ldr	r3, [r7, #12]
 6826 0022 9B68     		ldr	r3, [r3, #8]
 6827              		.loc 1 3638 48
 6828 0024 B3F5806F 		cmp	r3, #1024
 6829 0028 07D1     		bne	.L327
 6830              	.L328:
3639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Disable SPI peripheral */
3641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_DISABLE(hspi);
 6831              		.loc 1 3641 5
 6832 002a FB68     		ldr	r3, [r7, #12]
 6833 002c 1B68     		ldr	r3, [r3]
 6834 002e 1A68     		ldr	r2, [r3]
 6835 0030 FB68     		ldr	r3, [r7, #12]
 6836 0032 1B68     		ldr	r3, [r3]
 6837 0034 22F04002 		bic	r2, r2, #64
 6838 0038 1A60     		str	r2, [r3]
 6839              	.L327:
3642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)
 6840              		.loc 1 3644 18
 6841 003a FB68     		ldr	r3, [r7, #12]
 6842 003c 5B68     		ldr	r3, [r3, #4]
 6843              		.loc 1 3644 6
 6844 003e B3F5827F 		cmp	r3, #260
 6845 0042 17D1     		bne	.L329
 6846              		.loc 1 3644 58 discriminator 1
 6847 0044 FB68     		ldr	r3, [r7, #12]
 6848 0046 9B68     		ldr	r3, [r3, #8]
 6849              		.loc 1 3644 44 discriminator 1
 6850 0048 B3F5806F 		cmp	r3, #1024
 6851 004c 12D1     		bne	.L329
3645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
ARM GAS  /tmp/ccFW5O3y.s 			page 184


3646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Wait the RXNE reset */
3647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 6852              		.loc 1 3647 9
 6853 004e 7B68     		ldr	r3, [r7, #4]
 6854 0050 0093     		str	r3, [sp]
 6855 0052 BB68     		ldr	r3, [r7, #8]
 6856 0054 0022     		movs	r2, #0
 6857 0056 0121     		movs	r1, #1
 6858 0058 F868     		ldr	r0, [r7, #12]
 6859 005a FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 6860 005e 0346     		mov	r3, r0
 6861              		.loc 1 3647 8 discriminator 1
 6862 0060 002B     		cmp	r3, #0
 6863 0062 1AD0     		beq	.L332
3648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 6864              		.loc 1 3649 7
 6865 0064 FB68     		ldr	r3, [r7, #12]
 6866 0066 5B6D     		ldr	r3, [r3, #84]
 6867 0068 43F02002 		orr	r2, r3, #32
 6868 006c FB68     		ldr	r3, [r7, #12]
 6869 006e 5A65     		str	r2, [r3, #84]
3650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return HAL_TIMEOUT;
 6870              		.loc 1 3650 14
 6871 0070 0323     		movs	r3, #3
 6872 0072 13E0     		b	.L331
 6873              	.L329:
3651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
3654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Control the BSY flag */
3656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 6874              		.loc 1 3656 9
 6875 0074 7B68     		ldr	r3, [r7, #4]
 6876 0076 0093     		str	r3, [sp]
 6877 0078 BB68     		ldr	r3, [r7, #8]
 6878 007a 0022     		movs	r2, #0
 6879 007c 8021     		movs	r1, #128
 6880 007e F868     		ldr	r0, [r7, #12]
 6881 0080 FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 6882 0084 0346     		mov	r3, r0
 6883              		.loc 1 3656 8 discriminator 1
 6884 0086 002B     		cmp	r3, #0
 6885 0088 07D0     		beq	.L332
3657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 6886              		.loc 1 3658 7
 6887 008a FB68     		ldr	r3, [r7, #12]
 6888 008c 5B6D     		ldr	r3, [r3, #84]
 6889 008e 43F02002 		orr	r2, r3, #32
 6890 0092 FB68     		ldr	r3, [r7, #12]
 6891 0094 5A65     		str	r2, [r3, #84]
3659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       return HAL_TIMEOUT;
 6892              		.loc 1 3659 14
 6893 0096 0323     		movs	r3, #3
 6894 0098 00E0     		b	.L331
ARM GAS  /tmp/ccFW5O3y.s 			page 185


 6895              	.L332:
3660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return HAL_OK;
 6896              		.loc 1 3662 10
 6897 009a 0023     		movs	r3, #0
 6898              	.L331:
3663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 6899              		.loc 1 3663 1
 6900 009c 1846     		mov	r0, r3
 6901 009e 1037     		adds	r7, r7, #16
 6902              	.LCFI259:
 6903              		.cfi_def_cfa_offset 8
 6904 00a0 BD46     		mov	sp, r7
 6905              	.LCFI260:
 6906              		.cfi_def_cfa_register 13
 6907              		@ sp needed
 6908 00a2 80BD     		pop	{r7, pc}
 6909              		.cfi_endproc
 6910              	.LFE113:
 6912              		.section	.text.SPI_EndRxTxTransaction,"ax",%progbits
 6913              		.align	1
 6914              		.syntax unified
 6915              		.thumb
 6916              		.thumb_func
 6918              	SPI_EndRxTxTransaction:
 6919              	.LFB114:
3664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Handle the check of the RXTX or TX transaction complete.
3667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi SPI handle
3668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Timeout Timeout duration
3669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  Tickstart tick start value
3670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval HAL status
3671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t
3673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 6920              		.loc 1 3673 1
 6921              		.cfi_startproc
 6922              		@ args = 0, pretend = 0, frame = 16
 6923              		@ frame_needed = 1, uses_anonymous_args = 0
 6924 0000 80B5     		push	{r7, lr}
 6925              	.LCFI261:
 6926              		.cfi_def_cfa_offset 8
 6927              		.cfi_offset 7, -8
 6928              		.cfi_offset 14, -4
 6929 0002 86B0     		sub	sp, sp, #24
 6930              	.LCFI262:
 6931              		.cfi_def_cfa_offset 32
 6932 0004 02AF     		add	r7, sp, #8
 6933              	.LCFI263:
 6934              		.cfi_def_cfa 7, 24
 6935 0006 F860     		str	r0, [r7, #12]
 6936 0008 B960     		str	r1, [r7, #8]
 6937 000a 7A60     		str	r2, [r7, #4]
3674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Wait until TXE flag */
3675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
ARM GAS  /tmp/ccFW5O3y.s 			page 186


 6938              		.loc 1 3675 7
 6939 000c 7B68     		ldr	r3, [r7, #4]
 6940 000e 0093     		str	r3, [sp]
 6941 0010 BB68     		ldr	r3, [r7, #8]
 6942 0012 0122     		movs	r2, #1
 6943 0014 0221     		movs	r1, #2
 6944 0016 F868     		ldr	r0, [r7, #12]
 6945 0018 FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 6946 001c 0346     		mov	r3, r0
 6947              		.loc 1 3675 6 discriminator 1
 6948 001e 002B     		cmp	r3, #0
 6949 0020 07D0     		beq	.L334
3676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 6950              		.loc 1 3677 5
 6951 0022 FB68     		ldr	r3, [r7, #12]
 6952 0024 5B6D     		ldr	r3, [r3, #84]
 6953 0026 43F02002 		orr	r2, r3, #32
 6954 002a FB68     		ldr	r3, [r7, #12]
 6955 002c 5A65     		str	r2, [r3, #84]
3678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_TIMEOUT;
 6956              		.loc 1 3678 12
 6957 002e 0323     		movs	r3, #3
 6958 0030 13E0     		b	.L335
 6959              	.L334:
3679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Control the BSY flag */
3682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 6960              		.loc 1 3682 7
 6961 0032 7B68     		ldr	r3, [r7, #4]
 6962 0034 0093     		str	r3, [sp]
 6963 0036 BB68     		ldr	r3, [r7, #8]
 6964 0038 0022     		movs	r2, #0
 6965 003a 8021     		movs	r1, #128
 6966 003c F868     		ldr	r0, [r7, #12]
 6967 003e FFF7FEFF 		bl	SPI_WaitFlagStateUntilTimeout
 6968 0042 0346     		mov	r3, r0
 6969              		.loc 1 3682 6 discriminator 1
 6970 0044 002B     		cmp	r3, #0
 6971 0046 07D0     		beq	.L336
3683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 6972              		.loc 1 3684 5
 6973 0048 FB68     		ldr	r3, [r7, #12]
 6974 004a 5B6D     		ldr	r3, [r3, #84]
 6975 004c 43F02002 		orr	r2, r3, #32
 6976 0050 FB68     		ldr	r3, [r7, #12]
 6977 0052 5A65     		str	r2, [r3, #84]
3685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     return HAL_TIMEOUT;
 6978              		.loc 1 3685 12
 6979 0054 0323     		movs	r3, #3
 6980 0056 00E0     		b	.L335
 6981              	.L336:
3686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   return HAL_OK;
 6982              		.loc 1 3687 10
ARM GAS  /tmp/ccFW5O3y.s 			page 187


 6983 0058 0023     		movs	r3, #0
 6984              	.L335:
3688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 6985              		.loc 1 3688 1
 6986 005a 1846     		mov	r0, r3
 6987 005c 1037     		adds	r7, r7, #16
 6988              	.LCFI264:
 6989              		.cfi_def_cfa_offset 8
 6990 005e BD46     		mov	sp, r7
 6991              	.LCFI265:
 6992              		.cfi_def_cfa_register 13
 6993              		@ sp needed
 6994 0060 80BD     		pop	{r7, pc}
 6995              		.cfi_endproc
 6996              	.LFE114:
 6998              		.section	.text.SPI_CloseRxTx_ISR,"ax",%progbits
 6999              		.align	1
 7000              		.syntax unified
 7001              		.thumb
 7002              		.thumb_func
 7004              	SPI_CloseRxTx_ISR:
 7005              	.LFB115:
3689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Handle the end of the RXTX transaction.
3692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_CloseRxTx_ISR(SPI_HandleTypeDef *hspi)
3697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 7006              		.loc 1 3697 1
 7007              		.cfi_startproc
 7008              		@ args = 0, pretend = 0, frame = 24
 7009              		@ frame_needed = 1, uses_anonymous_args = 0
 7010 0000 80B5     		push	{r7, lr}
 7011              	.LCFI266:
 7012              		.cfi_def_cfa_offset 8
 7013              		.cfi_offset 7, -8
 7014              		.cfi_offset 14, -4
 7015 0002 86B0     		sub	sp, sp, #24
 7016              	.LCFI267:
 7017              		.cfi_def_cfa_offset 32
 7018 0004 00AF     		add	r7, sp, #0
 7019              	.LCFI268:
 7020              		.cfi_def_cfa_register 7
 7021 0006 7860     		str	r0, [r7, #4]
3698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart;
3699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 7022              		.loc 1 3699 70
 7023 0008 354B     		ldr	r3, .L347
 7024 000a 1B68     		ldr	r3, [r3]
 7025 000c 354A     		ldr	r2, .L347+4
 7026 000e A2FB0323 		umull	r2, r3, r2, r3
 7027 0012 5B0A     		lsrs	r3, r3, #9
 7028              		.loc 1 3699 45
 7029 0014 6422     		movs	r2, #100
ARM GAS  /tmp/ccFW5O3y.s 			page 188


 7030 0016 02FB03F3 		mul	r3, r2, r3
 7031              		.loc 1 3699 17
 7032 001a 3B61     		str	r3, [r7, #16]
3700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init tickstart for timeout management */
3702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tickstart = HAL_GetTick();
 7033              		.loc 1 3702 15
 7034 001c FFF7FEFF 		bl	HAL_GetTick
 7035 0020 7861     		str	r0, [r7, #20]
3703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable ERR interrupt */
3705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
 7036              		.loc 1 3705 3
 7037 0022 7B68     		ldr	r3, [r7, #4]
 7038 0024 1B68     		ldr	r3, [r3]
 7039 0026 5A68     		ldr	r2, [r3, #4]
 7040 0028 7B68     		ldr	r3, [r7, #4]
 7041 002a 1B68     		ldr	r3, [r3]
 7042 002c 22F02002 		bic	r2, r2, #32
 7043 0030 5A60     		str	r2, [r3, #4]
 7044              	.L340:
3706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Wait until TXE flag is set */
3708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   do
3709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (count == 0U)
 7045              		.loc 1 3710 15
 7046 0032 3B69     		ldr	r3, [r7, #16]
 7047              		.loc 1 3710 8
 7048 0034 002B     		cmp	r3, #0
 7049 0036 06D1     		bne	.L338
3711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 7050              		.loc 1 3712 7
 7051 0038 7B68     		ldr	r3, [r7, #4]
 7052 003a 5B6D     		ldr	r3, [r3, #84]
 7053 003c 43F02002 		orr	r2, r3, #32
 7054 0040 7B68     		ldr	r3, [r7, #4]
 7055 0042 5A65     		str	r2, [r3, #84]
3713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       break;
 7056              		.loc 1 3713 7
 7057 0044 09E0     		b	.L339
 7058              	.L338:
3714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     count--;
 7059              		.loc 1 3715 10
 7060 0046 3B69     		ldr	r3, [r7, #16]
 7061 0048 013B     		subs	r3, r3, #1
 7062 004a 3B61     		str	r3, [r7, #16]
3716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
 7063              		.loc 1 3716 17
 7064 004c 7B68     		ldr	r3, [r7, #4]
 7065 004e 1B68     		ldr	r3, [r3]
 7066              		.loc 1 3716 27
 7067 0050 9B68     		ldr	r3, [r3, #8]
 7068              		.loc 1 3716 32
 7069 0052 03F00203 		and	r3, r3, #2
ARM GAS  /tmp/ccFW5O3y.s 			page 189


 7070              		.loc 1 3716 48
 7071 0056 002B     		cmp	r3, #0
 7072 0058 EBD0     		beq	.L340
 7073              	.L339:
3717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the end of the transaction */
3719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
 7074              		.loc 1 3719 7
 7075 005a 7A69     		ldr	r2, [r7, #20]
 7076 005c 6421     		movs	r1, #100
 7077 005e 7868     		ldr	r0, [r7, #4]
 7078 0060 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 7079 0064 0346     		mov	r3, r0
 7080              		.loc 1 3719 6 discriminator 1
 7081 0066 002B     		cmp	r3, #0
 7082 0068 05D0     		beq	.L341
3720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 7083              		.loc 1 3721 5
 7084 006a 7B68     		ldr	r3, [r7, #4]
 7085 006c 5B6D     		ldr	r3, [r3, #84]
 7086 006e 43F02002 		orr	r2, r3, #32
 7087 0072 7B68     		ldr	r3, [r7, #4]
 7088 0074 5A65     		str	r2, [r3, #84]
 7089              	.L341:
3722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
3725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 7090              		.loc 1 3725 17
 7091 0076 7B68     		ldr	r3, [r7, #4]
 7092 0078 9B68     		ldr	r3, [r3, #8]
 7093              		.loc 1 3725 6
 7094 007a 002B     		cmp	r3, #0
 7095 007c 0AD1     		bne	.L342
 7096              	.LBB12:
3726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
 7097              		.loc 1 3727 5
 7098 007e 0023     		movs	r3, #0
 7099 0080 FB60     		str	r3, [r7, #12]
 7100 0082 7B68     		ldr	r3, [r7, #4]
 7101 0084 1B68     		ldr	r3, [r3]
 7102 0086 DB68     		ldr	r3, [r3, #12]
 7103 0088 FB60     		str	r3, [r7, #12]
 7104 008a 7B68     		ldr	r3, [r7, #4]
 7105 008c 1B68     		ldr	r3, [r3]
 7106 008e 9B68     		ldr	r3, [r3, #8]
 7107 0090 FB60     		str	r3, [r7, #12]
 7108 0092 FB68     		ldr	r3, [r7, #12]
 7109              	.L342:
 7110              	.LBE12:
3728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if CRC error occurred */
3732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
ARM GAS  /tmp/ccFW5O3y.s 			page 190


3733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check if CRC error is valid or not (workaround to be applied or not) */
3735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_ISCRCErrorValid(hspi) == SPI_VALID_CRC_ERROR)
3736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_READY;
3738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Reset CRC Calculation */
3741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SPI_RESET_CRC(hspi);
3742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Call user error callback */
3744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
3746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
3747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
3748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
3751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
3753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
3756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->ErrorCode == HAL_SPI_ERROR_NONE)
 7111              		.loc 1 3758 13
 7112 0094 7B68     		ldr	r3, [r7, #4]
 7113 0096 5B6D     		ldr	r3, [r3, #84]
 7114              		.loc 1 3758 8
 7115 0098 002B     		cmp	r3, #0
 7116 009a 15D1     		bne	.L343
3759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       if (hspi->State == HAL_SPI_STATE_BUSY_RX)
 7117              		.loc 1 3760 15
 7118 009c 7B68     		ldr	r3, [r7, #4]
 7119 009e 93F85130 		ldrb	r3, [r3, #81]
 7120 00a2 DBB2     		uxtb	r3, r3
 7121              		.loc 1 3760 10
 7122 00a4 042B     		cmp	r3, #4
 7123 00a6 07D1     		bne	.L344
3761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
3762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
 7124              		.loc 1 3762 21
 7125 00a8 7B68     		ldr	r3, [r7, #4]
 7126 00aa 0122     		movs	r2, #1
 7127 00ac 83F85120 		strb	r2, [r3, #81]
3763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Call user Rx complete callback */
3764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->RxCpltCallback(hspi);
3766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
3767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         HAL_SPI_RxCpltCallback(hspi);
 7128              		.loc 1 3767 9
 7129 00b0 7868     		ldr	r0, [r7, #4]
 7130 00b2 FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
3768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
ARM GAS  /tmp/ccFW5O3y.s 			page 191


3770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       else
3771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       {
3772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->State = HAL_SPI_STATE_READY;
3773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Call user TxRx complete callback */
3774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         hspi->TxRxCpltCallback(hspi);
3776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
3777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         HAL_SPI_TxRxCpltCallback(hspi);
3778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       }
3780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
3782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->State = HAL_SPI_STATE_READY;
3784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Call user error callback */
3785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
3787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
3788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
3789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 7131              		.loc 1 3794 1
 7132 00b6 0EE0     		b	.L346
 7133              	.L344:
3772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****         /* Call user TxRx complete callback */
 7134              		.loc 1 3772 21
 7135 00b8 7B68     		ldr	r3, [r7, #4]
 7136 00ba 0122     		movs	r2, #1
 7137 00bc 83F85120 		strb	r2, [r3, #81]
3777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 7138              		.loc 1 3777 9
 7139 00c0 7868     		ldr	r0, [r7, #4]
 7140 00c2 FFF7FEFF 		bl	HAL_SPI_TxRxCpltCallback
 7141              		.loc 1 3794 1
 7142 00c6 06E0     		b	.L346
 7143              	.L343:
3783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Call user error callback */
 7144              		.loc 1 3783 19
 7145 00c8 7B68     		ldr	r3, [r7, #4]
 7146 00ca 0122     		movs	r2, #1
 7147 00cc 83F85120 		strb	r2, [r3, #81]
3788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 7148              		.loc 1 3788 7
 7149 00d0 7868     		ldr	r0, [r7, #4]
 7150 00d2 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 7151              	.L346:
 7152              		.loc 1 3794 1
 7153 00d6 00BF     		nop
 7154 00d8 1837     		adds	r7, r7, #24
 7155              	.LCFI269:
 7156              		.cfi_def_cfa_offset 8
 7157 00da BD46     		mov	sp, r7
 7158              	.LCFI270:
ARM GAS  /tmp/ccFW5O3y.s 			page 192


 7159              		.cfi_def_cfa_register 13
 7160              		@ sp needed
 7161 00dc 80BD     		pop	{r7, pc}
 7162              	.L348:
 7163 00de 00BF     		.align	2
 7164              	.L347:
 7165 00e0 00000000 		.word	SystemCoreClock
 7166 00e4 F1197605 		.word	91625969
 7167              		.cfi_endproc
 7168              	.LFE115:
 7170              		.section	.text.SPI_CloseRx_ISR,"ax",%progbits
 7171              		.align	1
 7172              		.syntax unified
 7173              		.thumb
 7174              		.thumb_func
 7176              	SPI_CloseRx_ISR:
 7177              	.LFB116:
3795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Handle the end of the RX transaction.
3798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_CloseRx_ISR(SPI_HandleTypeDef *hspi)
3803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 7178              		.loc 1 3803 1
 7179              		.cfi_startproc
 7180              		@ args = 0, pretend = 0, frame = 16
 7181              		@ frame_needed = 1, uses_anonymous_args = 0
 7182 0000 80B5     		push	{r7, lr}
 7183              	.LCFI271:
 7184              		.cfi_def_cfa_offset 8
 7185              		.cfi_offset 7, -8
 7186              		.cfi_offset 14, -4
 7187 0002 84B0     		sub	sp, sp, #16
 7188              	.LCFI272:
 7189              		.cfi_def_cfa_offset 24
 7190 0004 00AF     		add	r7, sp, #0
 7191              	.LCFI273:
 7192              		.cfi_def_cfa_register 7
 7193 0006 7860     		str	r0, [r7, #4]
3804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable RXNE and ERR interrupt */
3805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_RXNE | SPI_IT_ERR));
 7194              		.loc 1 3805 3
 7195 0008 7B68     		ldr	r3, [r7, #4]
 7196 000a 1B68     		ldr	r3, [r3]
 7197 000c 5A68     		ldr	r2, [r3, #4]
 7198 000e 7B68     		ldr	r3, [r7, #4]
 7199 0010 1B68     		ldr	r3, [r3]
 7200 0012 22F06002 		bic	r2, r2, #96
 7201 0016 5A60     		str	r2, [r3, #4]
3806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the end of the transaction */
3808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (SPI_EndRxTransaction(hspi, SPI_DEFAULT_TIMEOUT, HAL_GetTick()) != HAL_OK)
 7202              		.loc 1 3808 7
 7203 0018 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/ccFW5O3y.s 			page 193


 7204 001c 0346     		mov	r3, r0
 7205              		.loc 1 3808 7 is_stmt 0 discriminator 1
 7206 001e 1A46     		mov	r2, r3
 7207 0020 6421     		movs	r1, #100
 7208 0022 7868     		ldr	r0, [r7, #4]
 7209 0024 FFF7FEFF 		bl	SPI_EndRxTransaction
 7210 0028 0346     		mov	r3, r0
 7211              		.loc 1 3808 6 is_stmt 1 discriminator 2
 7212 002a 002B     		cmp	r3, #0
 7213 002c 05D0     		beq	.L350
3809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 7214              		.loc 1 3810 5
 7215 002e 7B68     		ldr	r3, [r7, #4]
 7216 0030 5B6D     		ldr	r3, [r3, #84]
 7217 0032 43F02002 		orr	r2, r3, #32
 7218 0036 7B68     		ldr	r3, [r7, #4]
 7219 0038 5A65     		str	r2, [r3, #84]
 7220              	.L350:
3811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
3814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 7221              		.loc 1 3814 17
 7222 003a 7B68     		ldr	r3, [r7, #4]
 7223 003c 9B68     		ldr	r3, [r3, #8]
 7224              		.loc 1 3814 6
 7225 003e 002B     		cmp	r3, #0
 7226 0040 0AD1     		bne	.L351
 7227              	.LBB13:
3815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
 7228              		.loc 1 3816 5
 7229 0042 0023     		movs	r3, #0
 7230 0044 FB60     		str	r3, [r7, #12]
 7231 0046 7B68     		ldr	r3, [r7, #4]
 7232 0048 1B68     		ldr	r3, [r3]
 7233 004a DB68     		ldr	r3, [r3, #12]
 7234 004c FB60     		str	r3, [r7, #12]
 7235 004e 7B68     		ldr	r3, [r7, #4]
 7236 0050 1B68     		ldr	r3, [r3]
 7237 0052 9B68     		ldr	r3, [r3, #8]
 7238 0054 FB60     		str	r3, [r7, #12]
 7239 0056 FB68     		ldr	r3, [r7, #12]
 7240              	.L351:
 7241              	.LBE13:
3817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
 7242              		.loc 1 3818 15
 7243 0058 7B68     		ldr	r3, [r7, #4]
 7244 005a 0122     		movs	r2, #1
 7245 005c 83F85120 		strb	r2, [r3, #81]
3819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check if CRC error occurred */
3822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_CRCERR) != RESET)
3823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
ARM GAS  /tmp/ccFW5O3y.s 			page 194


3824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Check if CRC error is valid or not (workaround to be applied or not) */
3825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (SPI_ISCRCErrorValid(hspi) == SPI_VALID_CRC_ERROR)
3826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
3828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Reset CRC Calculation */
3830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SPI_RESET_CRC(hspi);
3831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Call user error callback */
3833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
3835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
3836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
3837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
3840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
3842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
3845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (hspi->ErrorCode == HAL_SPI_ERROR_NONE)
 7246              		.loc 1 3847 13
 7247 0060 7B68     		ldr	r3, [r7, #4]
 7248 0062 5B6D     		ldr	r3, [r3, #84]
 7249              		.loc 1 3847 8
 7250 0064 002B     		cmp	r3, #0
 7251 0066 03D1     		bne	.L352
3848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Call user Rx complete callback */
3850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->RxCpltCallback(hspi);
3852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
3853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       HAL_SPI_RxCpltCallback(hspi);
 7252              		.loc 1 3853 7
 7253 0068 7868     		ldr	r0, [r7, #4]
 7254 006a FFF7FEFF 		bl	HAL_SPI_RxCpltCallback
3854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     else
3857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       /* Call user error callback */
3859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       hspi->ErrorCallback(hspi);
3861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
3862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       HAL_SPI_ErrorCallback(hspi);
3863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_SPI_CRC != 0U)
3866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_SPI_CRC */
3868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 7255              		.loc 1 3868 1
 7256 006e 02E0     		b	.L354
 7257              	.L352:
ARM GAS  /tmp/ccFW5O3y.s 			page 195


3862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 7258              		.loc 1 3862 7
 7259 0070 7868     		ldr	r0, [r7, #4]
 7260 0072 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
 7261              	.L354:
 7262              		.loc 1 3868 1
 7263 0076 00BF     		nop
 7264 0078 1037     		adds	r7, r7, #16
 7265              	.LCFI274:
 7266              		.cfi_def_cfa_offset 8
 7267 007a BD46     		mov	sp, r7
 7268              	.LCFI275:
 7269              		.cfi_def_cfa_register 13
 7270              		@ sp needed
 7271 007c 80BD     		pop	{r7, pc}
 7272              		.cfi_endproc
 7273              	.LFE116:
 7275              		.section	.text.SPI_CloseTx_ISR,"ax",%progbits
 7276              		.align	1
 7277              		.syntax unified
 7278              		.thumb
 7279              		.thumb_func
 7281              	SPI_CloseTx_ISR:
 7282              	.LFB117:
3869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Handle the end of the TX transaction.
3872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_CloseTx_ISR(SPI_HandleTypeDef *hspi)
3877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 7283              		.loc 1 3877 1
 7284              		.cfi_startproc
 7285              		@ args = 0, pretend = 0, frame = 24
 7286              		@ frame_needed = 1, uses_anonymous_args = 0
 7287 0000 80B5     		push	{r7, lr}
 7288              	.LCFI276:
 7289              		.cfi_def_cfa_offset 8
 7290              		.cfi_offset 7, -8
 7291              		.cfi_offset 14, -4
 7292 0002 86B0     		sub	sp, sp, #24
 7293              	.LCFI277:
 7294              		.cfi_def_cfa_offset 32
 7295 0004 00AF     		add	r7, sp, #0
 7296              	.LCFI278:
 7297              		.cfi_def_cfa_register 7
 7298 0006 7860     		str	r0, [r7, #4]
3878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   uint32_t tickstart;
3879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 7299              		.loc 1 3879 70
 7300 0008 2C4B     		ldr	r3, .L364
 7301 000a 1B68     		ldr	r3, [r3]
 7302 000c 2C4A     		ldr	r2, .L364+4
 7303 000e A2FB0323 		umull	r2, r3, r2, r3
 7304 0012 5B0A     		lsrs	r3, r3, #9
ARM GAS  /tmp/ccFW5O3y.s 			page 196


 7305              		.loc 1 3879 45
 7306 0014 6422     		movs	r2, #100
 7307 0016 02FB03F3 		mul	r3, r2, r3
 7308              		.loc 1 3879 17
 7309 001a 3B61     		str	r3, [r7, #16]
3880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Init tickstart for timeout management*/
3882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tickstart = HAL_GetTick();
 7310              		.loc 1 3882 15
 7311 001c FFF7FEFF 		bl	HAL_GetTick
 7312 0020 7861     		str	r0, [r7, #20]
 7313              	.L358:
3883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Wait until TXE flag is set */
3885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   do
3886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (count == 0U)
 7314              		.loc 1 3887 15
 7315 0022 3B69     		ldr	r3, [r7, #16]
 7316              		.loc 1 3887 8
 7317 0024 002B     		cmp	r3, #0
 7318 0026 06D1     		bne	.L356
3888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 7319              		.loc 1 3889 7
 7320 0028 7B68     		ldr	r3, [r7, #4]
 7321 002a 5B6D     		ldr	r3, [r3, #84]
 7322 002c 43F02002 		orr	r2, r3, #32
 7323 0030 7B68     		ldr	r3, [r7, #4]
 7324 0032 5A65     		str	r2, [r3, #84]
3890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       break;
 7325              		.loc 1 3890 7
 7326 0034 09E0     		b	.L357
 7327              	.L356:
3891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     count--;
 7328              		.loc 1 3892 10
 7329 0036 3B69     		ldr	r3, [r7, #16]
 7330 0038 013B     		subs	r3, r3, #1
 7331 003a 3B61     		str	r3, [r7, #16]
3893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
 7332              		.loc 1 3893 17
 7333 003c 7B68     		ldr	r3, [r7, #4]
 7334 003e 1B68     		ldr	r3, [r3]
 7335              		.loc 1 3893 27
 7336 0040 9B68     		ldr	r3, [r3, #8]
 7337              		.loc 1 3893 32
 7338 0042 03F00203 		and	r3, r3, #2
 7339              		.loc 1 3893 48
 7340 0046 002B     		cmp	r3, #0
 7341 0048 EBD0     		beq	.L358
 7342              	.L357:
3894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable TXE and ERR interrupt */
3896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_ERR));
 7343              		.loc 1 3896 3
 7344 004a 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccFW5O3y.s 			page 197


 7345 004c 1B68     		ldr	r3, [r3]
 7346 004e 5A68     		ldr	r2, [r3, #4]
 7347 0050 7B68     		ldr	r3, [r7, #4]
 7348 0052 1B68     		ldr	r3, [r3]
 7349 0054 22F0A002 		bic	r2, r2, #160
 7350 0058 5A60     		str	r2, [r3, #4]
3897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Check the end of the transaction */
3899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
 7351              		.loc 1 3899 7
 7352 005a 7A69     		ldr	r2, [r7, #20]
 7353 005c 6421     		movs	r1, #100
 7354 005e 7868     		ldr	r0, [r7, #4]
 7355 0060 FFF7FEFF 		bl	SPI_EndRxTxTransaction
 7356 0064 0346     		mov	r3, r0
 7357              		.loc 1 3899 6 discriminator 1
 7358 0066 002B     		cmp	r3, #0
 7359 0068 05D0     		beq	.L359
3900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 7360              		.loc 1 3901 5
 7361 006a 7B68     		ldr	r3, [r7, #4]
 7362 006c 5B6D     		ldr	r3, [r3, #84]
 7363 006e 43F02002 		orr	r2, r3, #32
 7364 0072 7B68     		ldr	r3, [r7, #4]
 7365 0074 5A65     		str	r2, [r3, #84]
 7366              	.L359:
3902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Clear overrun flag in 2 Lines communication mode because received is not read */
3905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 7367              		.loc 1 3905 17
 7368 0076 7B68     		ldr	r3, [r7, #4]
 7369 0078 9B68     		ldr	r3, [r3, #8]
 7370              		.loc 1 3905 6
 7371 007a 002B     		cmp	r3, #0
 7372 007c 0AD1     		bne	.L360
 7373              	.LBB14:
3906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     __HAL_SPI_CLEAR_OVRFLAG(hspi);
 7374              		.loc 1 3907 5
 7375 007e 0023     		movs	r3, #0
 7376 0080 FB60     		str	r3, [r7, #12]
 7377 0082 7B68     		ldr	r3, [r7, #4]
 7378 0084 1B68     		ldr	r3, [r3]
 7379 0086 DB68     		ldr	r3, [r3, #12]
 7380 0088 FB60     		str	r3, [r7, #12]
 7381 008a 7B68     		ldr	r3, [r7, #4]
 7382 008c 1B68     		ldr	r3, [r3]
 7383 008e 9B68     		ldr	r3, [r3, #8]
 7384 0090 FB60     		str	r3, [r7, #12]
 7385 0092 FB68     		ldr	r3, [r7, #12]
 7386              	.L360:
 7387              	.LBE14:
3908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_READY;
ARM GAS  /tmp/ccFW5O3y.s 			page 198


 7388              		.loc 1 3910 15
 7389 0094 7B68     		ldr	r3, [r7, #4]
 7390 0096 0122     		movs	r2, #1
 7391 0098 83F85120 		strb	r2, [r3, #81]
3911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 7392              		.loc 1 3911 11
 7393 009c 7B68     		ldr	r3, [r7, #4]
 7394 009e 5B6D     		ldr	r3, [r3, #84]
 7395              		.loc 1 3911 6
 7396 00a0 002B     		cmp	r3, #0
 7397 00a2 03D0     		beq	.L361
3912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Call user error callback */
3914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->ErrorCallback(hspi);
3916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
3917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     HAL_SPI_ErrorCallback(hspi);
 7398              		.loc 1 3917 5
 7399 00a4 7868     		ldr	r0, [r7, #4]
 7400 00a6 FFF7FEFF 		bl	HAL_SPI_ErrorCallback
3918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   else
3921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     /* Call user Rx complete callback */
3923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
3924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     hspi->TxCpltCallback(hspi);
3925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #else
3926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     HAL_SPI_TxCpltCallback(hspi);
3927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
3928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   }
3929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 7401              		.loc 1 3929 1
 7402 00aa 02E0     		b	.L363
 7403              	.L361:
3926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** #endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
 7404              		.loc 1 3926 5
 7405 00ac 7868     		ldr	r0, [r7, #4]
 7406 00ae FFF7FEFF 		bl	HAL_SPI_TxCpltCallback
 7407              	.L363:
 7408              		.loc 1 3929 1
 7409 00b2 00BF     		nop
 7410 00b4 1837     		adds	r7, r7, #24
 7411              	.LCFI279:
 7412              		.cfi_def_cfa_offset 8
 7413 00b6 BD46     		mov	sp, r7
 7414              	.LCFI280:
 7415              		.cfi_def_cfa_register 13
 7416              		@ sp needed
 7417 00b8 80BD     		pop	{r7, pc}
 7418              	.L365:
 7419 00ba 00BF     		.align	2
 7420              	.L364:
 7421 00bc 00000000 		.word	SystemCoreClock
 7422 00c0 F1197605 		.word	91625969
 7423              		.cfi_endproc
 7424              	.LFE117:
ARM GAS  /tmp/ccFW5O3y.s 			page 199


 7426              		.section	.text.SPI_AbortRx_ISR,"ax",%progbits
 7427              		.align	1
 7428              		.syntax unified
 7429              		.thumb
 7430              		.thumb_func
 7432              	SPI_AbortRx_ISR:
 7433              	.LFB118:
3930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Handle abort a Rx transaction.
3933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_AbortRx_ISR(SPI_HandleTypeDef *hspi)
3938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 7434              		.loc 1 3938 1
 7435              		.cfi_startproc
 7436              		@ args = 0, pretend = 0, frame = 16
 7437              		@ frame_needed = 1, uses_anonymous_args = 0
 7438              		@ link register save eliminated.
 7439 0000 80B4     		push	{r7}
 7440              	.LCFI281:
 7441              		.cfi_def_cfa_offset 4
 7442              		.cfi_offset 7, -4
 7443 0002 85B0     		sub	sp, sp, #20
 7444              	.LCFI282:
 7445              		.cfi_def_cfa_offset 24
 7446 0004 00AF     		add	r7, sp, #0
 7447              	.LCFI283:
 7448              		.cfi_def_cfa_register 7
 7449 0006 7860     		str	r0, [r7, #4]
3939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t tmpreg = 0U;
 7450              		.loc 1 3939 17
 7451 0008 0023     		movs	r3, #0
 7452 000a FB60     		str	r3, [r7, #12]
3940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __IO uint32_t count = SPI_DEFAULT_TIMEOUT * (SystemCoreClock / 24U / 1000U);
 7453              		.loc 1 3940 70
 7454 000c 1D4B     		ldr	r3, .L370
 7455 000e 1B68     		ldr	r3, [r3]
 7456 0010 1D4A     		ldr	r2, .L370+4
 7457 0012 A2FB0323 		umull	r2, r3, r2, r3
 7458 0016 5B0A     		lsrs	r3, r3, #9
 7459              		.loc 1 3940 45
 7460 0018 6422     		movs	r2, #100
 7461 001a 02FB03F3 		mul	r3, r2, r3
 7462              		.loc 1 3940 17
 7463 001e BB60     		str	r3, [r7, #8]
 7464              	.L369:
3941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Wait until TXE flag is set */
3943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   do
3944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   {
3945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     if (count == 0U)
 7465              		.loc 1 3945 15
 7466 0020 BB68     		ldr	r3, [r7, #8]
 7467              		.loc 1 3945 8
ARM GAS  /tmp/ccFW5O3y.s 			page 200


 7468 0022 002B     		cmp	r3, #0
 7469 0024 06D1     		bne	.L367
3946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     {
3947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 7470              		.loc 1 3947 7
 7471 0026 7B68     		ldr	r3, [r7, #4]
 7472 0028 5B6D     		ldr	r3, [r3, #84]
 7473 002a 43F04002 		orr	r2, r3, #64
 7474 002e 7B68     		ldr	r3, [r7, #4]
 7475 0030 5A65     		str	r2, [r3, #84]
3948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****       break;
 7476              		.loc 1 3948 7
 7477 0032 09E0     		b	.L368
 7478              	.L367:
3949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     }
3950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****     count--;
 7479              		.loc 1 3950 10
 7480 0034 BB68     		ldr	r3, [r7, #8]
 7481 0036 013B     		subs	r3, r3, #1
 7482 0038 BB60     		str	r3, [r7, #8]
3951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   } while ((hspi->Instance->SR & SPI_FLAG_TXE) == RESET);
 7483              		.loc 1 3951 17
 7484 003a 7B68     		ldr	r3, [r7, #4]
 7485 003c 1B68     		ldr	r3, [r3]
 7486              		.loc 1 3951 27
 7487 003e 9B68     		ldr	r3, [r3, #8]
 7488              		.loc 1 3951 32
 7489 0040 03F00203 		and	r3, r3, #2
 7490              		.loc 1 3951 48
 7491 0044 002B     		cmp	r3, #0
 7492 0046 EBD0     		beq	.L369
 7493              	.L368:
3952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable SPI Peripheral */
3954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 7494              		.loc 1 3954 3
 7495 0048 7B68     		ldr	r3, [r7, #4]
 7496 004a 1B68     		ldr	r3, [r3]
 7497 004c 1A68     		ldr	r2, [r3]
 7498 004e 7B68     		ldr	r3, [r7, #4]
 7499 0050 1B68     		ldr	r3, [r3]
 7500 0052 22F04002 		bic	r2, r2, #64
 7501 0056 1A60     		str	r2, [r3]
3955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable TXEIE, RXNEIE and ERRIE(mode fault event, overrun error, TI frame error) interrupts */
3957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXEIE | SPI_CR2_RXNEIE | SPI_CR2_ERRIE));
 7502              		.loc 1 3957 3
 7503 0058 7B68     		ldr	r3, [r7, #4]
 7504 005a 1B68     		ldr	r3, [r3]
 7505 005c 5A68     		ldr	r2, [r3, #4]
 7506 005e 7B68     		ldr	r3, [r7, #4]
 7507 0060 1B68     		ldr	r3, [r3]
 7508 0062 22F0E002 		bic	r2, r2, #224
 7509 0066 5A60     		str	r2, [r3, #4]
3958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Flush Data Register by a blank read */
3960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   tmpreg = READ_REG(hspi->Instance->DR);
ARM GAS  /tmp/ccFW5O3y.s 			page 201


 7510              		.loc 1 3960 12
 7511 0068 7B68     		ldr	r3, [r7, #4]
 7512 006a 1B68     		ldr	r3, [r3]
 7513 006c DB68     		ldr	r3, [r3, #12]
 7514              		.loc 1 3960 10
 7515 006e FB60     		str	r3, [r7, #12]
3961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* To avoid GCC warning */
3962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   UNUSED(tmpreg);
 7516              		.loc 1 3962 3
 7517 0070 FB68     		ldr	r3, [r7, #12]
3963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_ABORT;
 7518              		.loc 1 3964 15
 7519 0072 7B68     		ldr	r3, [r7, #4]
 7520 0074 0722     		movs	r2, #7
 7521 0076 83F85120 		strb	r2, [r3, #81]
3965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 7522              		.loc 1 3965 1
 7523 007a 00BF     		nop
 7524 007c 1437     		adds	r7, r7, #20
 7525              	.LCFI284:
 7526              		.cfi_def_cfa_offset 4
 7527 007e BD46     		mov	sp, r7
 7528              	.LCFI285:
 7529              		.cfi_def_cfa_register 13
 7530              		@ sp needed
 7531 0080 80BC     		pop	{r7}
 7532              	.LCFI286:
 7533              		.cfi_restore 7
 7534              		.cfi_def_cfa_offset 0
 7535 0082 7047     		bx	lr
 7536              	.L371:
 7537              		.align	2
 7538              	.L370:
 7539 0084 00000000 		.word	SystemCoreClock
 7540 0088 F1197605 		.word	91625969
 7541              		.cfi_endproc
 7542              	.LFE118:
 7544              		.section	.text.SPI_AbortTx_ISR,"ax",%progbits
 7545              		.align	1
 7546              		.syntax unified
 7547              		.thumb
 7548              		.thumb_func
 7550              	SPI_AbortTx_ISR:
 7551              	.LFB119:
3966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** /**
3968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @brief  Handle abort a Tx or Rx/Tx transaction.
3969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
3970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   *               the configuration information for SPI module.
3971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   * @retval None
3972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   */
3973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** static void SPI_AbortTx_ISR(SPI_HandleTypeDef *hspi)
3974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** {
 7552              		.loc 1 3974 1
 7553              		.cfi_startproc
 7554              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccFW5O3y.s 			page 202


 7555              		@ frame_needed = 1, uses_anonymous_args = 0
 7556              		@ link register save eliminated.
 7557 0000 80B4     		push	{r7}
 7558              	.LCFI287:
 7559              		.cfi_def_cfa_offset 4
 7560              		.cfi_offset 7, -4
 7561 0002 83B0     		sub	sp, sp, #12
 7562              	.LCFI288:
 7563              		.cfi_def_cfa_offset 16
 7564 0004 00AF     		add	r7, sp, #0
 7565              	.LCFI289:
 7566              		.cfi_def_cfa_register 7
 7567 0006 7860     		str	r0, [r7, #4]
3975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable TXEIE interrupt */
3976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXEIE));
 7568              		.loc 1 3976 3
 7569 0008 7B68     		ldr	r3, [r7, #4]
 7570 000a 1B68     		ldr	r3, [r3]
 7571 000c 5A68     		ldr	r2, [r3, #4]
 7572 000e 7B68     		ldr	r3, [r7, #4]
 7573 0010 1B68     		ldr	r3, [r3]
 7574 0012 22F08002 		bic	r2, r2, #128
 7575 0016 5A60     		str	r2, [r3, #4]
3977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   /* Disable SPI Peripheral */
3979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   __HAL_SPI_DISABLE(hspi);
 7576              		.loc 1 3979 3
 7577 0018 7B68     		ldr	r3, [r7, #4]
 7578 001a 1B68     		ldr	r3, [r3]
 7579 001c 1A68     		ldr	r2, [r3]
 7580 001e 7B68     		ldr	r3, [r7, #4]
 7581 0020 1B68     		ldr	r3, [r3]
 7582 0022 22F04002 		bic	r2, r2, #64
 7583 0026 1A60     		str	r2, [r3]
3980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** 
3981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c ****   hspi->State = HAL_SPI_STATE_ABORT;
 7584              		.loc 1 3981 15
 7585 0028 7B68     		ldr	r3, [r7, #4]
 7586 002a 0722     		movs	r2, #7
 7587 002c 83F85120 		strb	r2, [r3, #81]
3982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_spi.c **** }
 7588              		.loc 1 3982 1
 7589 0030 00BF     		nop
 7590 0032 0C37     		adds	r7, r7, #12
 7591              	.LCFI290:
 7592              		.cfi_def_cfa_offset 4
 7593 0034 BD46     		mov	sp, r7
 7594              	.LCFI291:
 7595              		.cfi_def_cfa_register 13
 7596              		@ sp needed
 7597 0036 80BC     		pop	{r7}
 7598              	.LCFI292:
 7599              		.cfi_restore 7
 7600              		.cfi_def_cfa_offset 0
 7601 0038 7047     		bx	lr
 7602              		.cfi_endproc
 7603              	.LFE119:
ARM GAS  /tmp/ccFW5O3y.s 			page 203


 7605              		.text
 7606              	.Letext0:
 7607              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 7608              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 7609              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103x6.h"
 7610              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 7611              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 7612              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 7613              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
 7614              		.file 9 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 7615              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /tmp/ccFW5O3y.s 			page 204


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f1xx_hal_spi.c
     /tmp/ccFW5O3y.s:19     .text.HAL_SPI_Init:00000000 $t
     /tmp/ccFW5O3y.s:25     .text.HAL_SPI_Init:00000000 HAL_SPI_Init
     /tmp/ccFW5O3y.s:271    .text.HAL_SPI_MspInit:00000000 HAL_SPI_MspInit
     /tmp/ccFW5O3y.s:189    .text.HAL_SPI_DeInit:00000000 $t
     /tmp/ccFW5O3y.s:195    .text.HAL_SPI_DeInit:00000000 HAL_SPI_DeInit
     /tmp/ccFW5O3y.s:313    .text.HAL_SPI_MspDeInit:00000000 HAL_SPI_MspDeInit
     /tmp/ccFW5O3y.s:265    .text.HAL_SPI_MspInit:00000000 $t
     /tmp/ccFW5O3y.s:307    .text.HAL_SPI_MspDeInit:00000000 $t
     /tmp/ccFW5O3y.s:349    .text.HAL_SPI_Transmit:00000000 $t
     /tmp/ccFW5O3y.s:355    .text.HAL_SPI_Transmit:00000000 HAL_SPI_Transmit
     /tmp/ccFW5O3y.s:6918   .text.SPI_EndRxTxTransaction:00000000 SPI_EndRxTxTransaction
     /tmp/ccFW5O3y.s:816    .text.HAL_SPI_Receive:00000000 $t
     /tmp/ccFW5O3y.s:822    .text.HAL_SPI_Receive:00000000 HAL_SPI_Receive
     /tmp/ccFW5O3y.s:1217   .text.HAL_SPI_TransmitReceive:00000000 HAL_SPI_TransmitReceive
     /tmp/ccFW5O3y.s:6792   .text.SPI_EndRxTransaction:00000000 SPI_EndRxTransaction
     /tmp/ccFW5O3y.s:1211   .text.HAL_SPI_TransmitReceive:00000000 $t
     /tmp/ccFW5O3y.s:1823   .text.HAL_SPI_Transmit_IT:00000000 $t
     /tmp/ccFW5O3y.s:1829   .text.HAL_SPI_Transmit_IT:00000000 HAL_SPI_Transmit_IT
     /tmp/ccFW5O3y.s:2015   .text.HAL_SPI_Transmit_IT:00000100 $d
     /tmp/ccFW5O3y.s:6522   .text.SPI_TxISR_16BIT:00000000 SPI_TxISR_16BIT
     /tmp/ccFW5O3y.s:6446   .text.SPI_TxISR_8BIT:00000000 SPI_TxISR_8BIT
     /tmp/ccFW5O3y.s:2021   .text.HAL_SPI_Receive_IT:00000000 $t
     /tmp/ccFW5O3y.s:2027   .text.HAL_SPI_Receive_IT:00000000 HAL_SPI_Receive_IT
     /tmp/ccFW5O3y.s:2246   .text.HAL_SPI_TransmitReceive_IT:00000000 HAL_SPI_TransmitReceive_IT
     /tmp/ccFW5O3y.s:2234   .text.HAL_SPI_Receive_IT:00000128 $d
     /tmp/ccFW5O3y.s:6370   .text.SPI_RxISR_16BIT:00000000 SPI_RxISR_16BIT
     /tmp/ccFW5O3y.s:6293   .text.SPI_RxISR_8BIT:00000000 SPI_RxISR_8BIT
     /tmp/ccFW5O3y.s:2240   .text.HAL_SPI_TransmitReceive_IT:00000000 $t
     /tmp/ccFW5O3y.s:2445   .text.HAL_SPI_TransmitReceive_IT:0000010c $d
     /tmp/ccFW5O3y.s:6113   .text.SPI_2linesRxISR_16BIT:00000000 SPI_2linesRxISR_16BIT
     /tmp/ccFW5O3y.s:6204   .text.SPI_2linesTxISR_16BIT:00000000 SPI_2linesTxISR_16BIT
     /tmp/ccFW5O3y.s:5930   .text.SPI_2linesRxISR_8BIT:00000000 SPI_2linesRxISR_8BIT
     /tmp/ccFW5O3y.s:6022   .text.SPI_2linesTxISR_8BIT:00000000 SPI_2linesTxISR_8BIT
     /tmp/ccFW5O3y.s:2453   .text.HAL_SPI_Transmit_DMA:00000000 $t
     /tmp/ccFW5O3y.s:2459   .text.HAL_SPI_Transmit_DMA:00000000 HAL_SPI_Transmit_DMA
     /tmp/ccFW5O3y.s:2699   .text.HAL_SPI_Transmit_DMA:00000158 $d
     /tmp/ccFW5O3y.s:5383   .text.SPI_DMAHalfTransmitCplt:00000000 SPI_DMAHalfTransmitCplt
     /tmp/ccFW5O3y.s:5010   .text.SPI_DMATransmitCplt:00000000 SPI_DMATransmitCplt
     /tmp/ccFW5O3y.s:5515   .text.SPI_DMAError:00000000 SPI_DMAError
     /tmp/ccFW5O3y.s:2706   .text.HAL_SPI_Receive_DMA:00000000 $t
     /tmp/ccFW5O3y.s:2712   .text.HAL_SPI_Receive_DMA:00000000 HAL_SPI_Receive_DMA
     /tmp/ccFW5O3y.s:2986   .text.HAL_SPI_TransmitReceive_DMA:00000000 HAL_SPI_TransmitReceive_DMA
     /tmp/ccFW5O3y.s:2973   .text.HAL_SPI_Receive_DMA:0000017c $d
     /tmp/ccFW5O3y.s:5427   .text.SPI_DMAHalfReceiveCplt:00000000 SPI_DMAHalfReceiveCplt
     /tmp/ccFW5O3y.s:5140   .text.SPI_DMAReceiveCplt:00000000 SPI_DMAReceiveCplt
     /tmp/ccFW5O3y.s:2980   .text.HAL_SPI_TransmitReceive_DMA:00000000 $t
     /tmp/ccFW5O3y.s:3328   .text.HAL_SPI_TransmitReceive_DMA:000001e4 $d
     /tmp/ccFW5O3y.s:5471   .text.SPI_DMAHalfTransmitReceiveCplt:00000000 SPI_DMAHalfTransmitReceiveCplt
     /tmp/ccFW5O3y.s:5270   .text.SPI_DMATransmitReceiveCplt:00000000 SPI_DMATransmitReceiveCplt
     /tmp/ccFW5O3y.s:3337   .text.HAL_SPI_Abort:00000000 $t
     /tmp/ccFW5O3y.s:3343   .text.HAL_SPI_Abort:00000000 HAL_SPI_Abort
     /tmp/ccFW5O3y.s:3652   .text.HAL_SPI_Abort:000001b8 $d
     /tmp/ccFW5O3y.s:7550   .text.SPI_AbortTx_ISR:00000000 SPI_AbortTx_ISR
     /tmp/ccFW5O3y.s:7432   .text.SPI_AbortRx_ISR:00000000 SPI_AbortRx_ISR
     /tmp/ccFW5O3y.s:3660   .text.HAL_SPI_Abort_IT:00000000 $t
ARM GAS  /tmp/ccFW5O3y.s 			page 205


     /tmp/ccFW5O3y.s:3666   .text.HAL_SPI_Abort_IT:00000000 HAL_SPI_Abort_IT
     /tmp/ccFW5O3y.s:4878   .text.HAL_SPI_AbortCpltCallback:00000000 HAL_SPI_AbortCpltCallback
     /tmp/ccFW5O3y.s:3999   .text.HAL_SPI_Abort_IT:000001cc $d
     /tmp/ccFW5O3y.s:5629   .text.SPI_DMATxAbortCallback:00000000 SPI_DMATxAbortCallback
     /tmp/ccFW5O3y.s:5789   .text.SPI_DMARxAbortCallback:00000000 SPI_DMARxAbortCallback
     /tmp/ccFW5O3y.s:4009   .text.HAL_SPI_DMAPause:00000000 $t
     /tmp/ccFW5O3y.s:4015   .text.HAL_SPI_DMAPause:00000000 HAL_SPI_DMAPause
     /tmp/ccFW5O3y.s:4080   .text.HAL_SPI_DMAResume:00000000 $t
     /tmp/ccFW5O3y.s:4086   .text.HAL_SPI_DMAResume:00000000 HAL_SPI_DMAResume
     /tmp/ccFW5O3y.s:4151   .text.HAL_SPI_DMAStop:00000000 $t
     /tmp/ccFW5O3y.s:4157   .text.HAL_SPI_DMAStop:00000000 HAL_SPI_DMAStop
     /tmp/ccFW5O3y.s:4256   .text.HAL_SPI_IRQHandler:00000000 $t
     /tmp/ccFW5O3y.s:4262   .text.HAL_SPI_IRQHandler:00000000 HAL_SPI_IRQHandler
     /tmp/ccFW5O3y.s:4836   .text.HAL_SPI_ErrorCallback:00000000 HAL_SPI_ErrorCallback
     /tmp/ccFW5O3y.s:4573   .text.HAL_SPI_IRQHandler:000001c8 $d
     /tmp/ccFW5O3y.s:5577   .text.SPI_DMAAbortOnError:00000000 SPI_DMAAbortOnError
     /tmp/ccFW5O3y.s:4578   .text.HAL_SPI_TxCpltCallback:00000000 $t
     /tmp/ccFW5O3y.s:4584   .text.HAL_SPI_TxCpltCallback:00000000 HAL_SPI_TxCpltCallback
     /tmp/ccFW5O3y.s:4620   .text.HAL_SPI_RxCpltCallback:00000000 $t
     /tmp/ccFW5O3y.s:4626   .text.HAL_SPI_RxCpltCallback:00000000 HAL_SPI_RxCpltCallback
     /tmp/ccFW5O3y.s:4662   .text.HAL_SPI_TxRxCpltCallback:00000000 $t
     /tmp/ccFW5O3y.s:4668   .text.HAL_SPI_TxRxCpltCallback:00000000 HAL_SPI_TxRxCpltCallback
     /tmp/ccFW5O3y.s:4704   .text.HAL_SPI_TxHalfCpltCallback:00000000 $t
     /tmp/ccFW5O3y.s:4710   .text.HAL_SPI_TxHalfCpltCallback:00000000 HAL_SPI_TxHalfCpltCallback
     /tmp/ccFW5O3y.s:4746   .text.HAL_SPI_RxHalfCpltCallback:00000000 $t
     /tmp/ccFW5O3y.s:4752   .text.HAL_SPI_RxHalfCpltCallback:00000000 HAL_SPI_RxHalfCpltCallback
     /tmp/ccFW5O3y.s:4788   .text.HAL_SPI_TxRxHalfCpltCallback:00000000 $t
     /tmp/ccFW5O3y.s:4794   .text.HAL_SPI_TxRxHalfCpltCallback:00000000 HAL_SPI_TxRxHalfCpltCallback
     /tmp/ccFW5O3y.s:4830   .text.HAL_SPI_ErrorCallback:00000000 $t
     /tmp/ccFW5O3y.s:4872   .text.HAL_SPI_AbortCpltCallback:00000000 $t
     /tmp/ccFW5O3y.s:4914   .text.HAL_SPI_GetState:00000000 $t
     /tmp/ccFW5O3y.s:4920   .text.HAL_SPI_GetState:00000000 HAL_SPI_GetState
     /tmp/ccFW5O3y.s:4960   .text.HAL_SPI_GetError:00000000 $t
     /tmp/ccFW5O3y.s:4966   .text.HAL_SPI_GetError:00000000 HAL_SPI_GetError
     /tmp/ccFW5O3y.s:5005   .text.SPI_DMATransmitCplt:00000000 $t
     /tmp/ccFW5O3y.s:5135   .text.SPI_DMAReceiveCplt:00000000 $t
     /tmp/ccFW5O3y.s:5265   .text.SPI_DMATransmitReceiveCplt:00000000 $t
     /tmp/ccFW5O3y.s:5378   .text.SPI_DMAHalfTransmitCplt:00000000 $t
     /tmp/ccFW5O3y.s:5422   .text.SPI_DMAHalfReceiveCplt:00000000 $t
     /tmp/ccFW5O3y.s:5466   .text.SPI_DMAHalfTransmitReceiveCplt:00000000 $t
     /tmp/ccFW5O3y.s:5510   .text.SPI_DMAError:00000000 $t
     /tmp/ccFW5O3y.s:5572   .text.SPI_DMAAbortOnError:00000000 $t
     /tmp/ccFW5O3y.s:5624   .text.SPI_DMATxAbortCallback:00000000 $t
     /tmp/ccFW5O3y.s:5778   .text.SPI_DMATxAbortCallback:000000bc $d
     /tmp/ccFW5O3y.s:5784   .text.SPI_DMARxAbortCallback:00000000 $t
     /tmp/ccFW5O3y.s:5925   .text.SPI_2linesRxISR_8BIT:00000000 $t
     /tmp/ccFW5O3y.s:7004   .text.SPI_CloseRxTx_ISR:00000000 SPI_CloseRxTx_ISR
     /tmp/ccFW5O3y.s:6017   .text.SPI_2linesTxISR_8BIT:00000000 $t
     /tmp/ccFW5O3y.s:6108   .text.SPI_2linesRxISR_16BIT:00000000 $t
     /tmp/ccFW5O3y.s:6199   .text.SPI_2linesTxISR_16BIT:00000000 $t
     /tmp/ccFW5O3y.s:6288   .text.SPI_RxISR_8BIT:00000000 $t
     /tmp/ccFW5O3y.s:7176   .text.SPI_CloseRx_ISR:00000000 SPI_CloseRx_ISR
     /tmp/ccFW5O3y.s:6365   .text.SPI_RxISR_16BIT:00000000 $t
     /tmp/ccFW5O3y.s:6441   .text.SPI_TxISR_8BIT:00000000 $t
     /tmp/ccFW5O3y.s:7281   .text.SPI_CloseTx_ISR:00000000 SPI_CloseTx_ISR
     /tmp/ccFW5O3y.s:6517   .text.SPI_TxISR_16BIT:00000000 $t
     /tmp/ccFW5O3y.s:6591   .text.SPI_WaitFlagStateUntilTimeout:00000000 $t
ARM GAS  /tmp/ccFW5O3y.s 			page 206


     /tmp/ccFW5O3y.s:6596   .text.SPI_WaitFlagStateUntilTimeout:00000000 SPI_WaitFlagStateUntilTimeout
     /tmp/ccFW5O3y.s:6782   .text.SPI_WaitFlagStateUntilTimeout:0000010c $d
     /tmp/ccFW5O3y.s:6787   .text.SPI_EndRxTransaction:00000000 $t
     /tmp/ccFW5O3y.s:6913   .text.SPI_EndRxTxTransaction:00000000 $t
     /tmp/ccFW5O3y.s:6999   .text.SPI_CloseRxTx_ISR:00000000 $t
     /tmp/ccFW5O3y.s:7165   .text.SPI_CloseRxTx_ISR:000000e0 $d
     /tmp/ccFW5O3y.s:7171   .text.SPI_CloseRx_ISR:00000000 $t
     /tmp/ccFW5O3y.s:7276   .text.SPI_CloseTx_ISR:00000000 $t
     /tmp/ccFW5O3y.s:7421   .text.SPI_CloseTx_ISR:000000bc $d
     /tmp/ccFW5O3y.s:7427   .text.SPI_AbortRx_ISR:00000000 $t
     /tmp/ccFW5O3y.s:7539   .text.SPI_AbortRx_ISR:00000084 $d
     /tmp/ccFW5O3y.s:7545   .text.SPI_AbortTx_ISR:00000000 $t

UNDEFINED SYMBOLS
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
SystemCoreClock
HAL_DMA_Abort_IT
